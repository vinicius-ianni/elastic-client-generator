{
  "types": [
    {
      "kind": "union",
      "name": {
        "namespace": "aggregations",
        "name": "Aggregate"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "SingleBucketAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "AutoDateHistogramAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "FiltersAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "SignificantTermsAggregate"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "object"
              }
            }
          ]
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "TermsAggregate"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "object"
              }
            }
          ]
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "BucketAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "CompositeBucketAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "MultiBucketAggregate"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "object"
              }
            }
          ]
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "MatrixStatsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "KeyedValueAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "MetricAggregate"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "AggregateBase"
      },
      "properties": [
        {
          "name": "meta",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "AggregationContainer"
      },
      "properties": [
        {
          "name": "adjacency_matrix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.adjacency_matrix",
              "name": "AdjacencyMatrixAggregation"
            }
          },
          "required": false
        },
        {
          "name": "aggs",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": false
        },
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": false
        },
        {
          "name": "auto_date_histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.auto_date_histogram",
              "name": "AutoDateHistogramAggregation"
            }
          },
          "required": false
        },
        {
          "name": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.average",
              "name": "AverageAggregation"
            }
          },
          "required": false
        },
        {
          "name": "avg_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.average_bucket",
              "name": "AverageBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "boxplot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.boxplot",
              "name": "BoxplotAggregation"
            }
          },
          "required": false
        },
        {
          "name": "bucket_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.bucket_script",
              "name": "BucketScriptAggregation"
            }
          },
          "required": false
        },
        {
          "name": "bucket_selector",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.bucket_selector",
              "name": "BucketSelectorAggregation"
            }
          },
          "required": false
        },
        {
          "name": "bucket_sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.bucket_sort",
              "name": "BucketSortAggregation"
            }
          },
          "required": false
        },
        {
          "name": "cardinality",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.cardinality",
              "name": "CardinalityAggregation"
            }
          },
          "required": false
        },
        {
          "name": "children",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.children",
              "name": "ChildrenAggregation"
            }
          },
          "required": false
        },
        {
          "name": "composite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.composite",
              "name": "CompositeAggregation"
            }
          },
          "required": false
        },
        {
          "name": "cumulative_cardinality",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.cumulative_cardinality",
              "name": "CumulativeCardinalityAggregation"
            }
          },
          "required": false
        },
        {
          "name": "cumulative_sum",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.cumulative_sum",
              "name": "CumulativeSumAggregation"
            }
          },
          "required": false
        },
        {
          "name": "date_histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.date_histogram",
              "name": "DateHistogramAggregation"
            }
          },
          "required": false
        },
        {
          "name": "date_range",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.date_range",
              "name": "DateRangeAggregation"
            }
          },
          "required": false
        },
        {
          "name": "derivative",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.derivative",
              "name": "DerivativeAggregation"
            }
          },
          "required": false
        },
        {
          "name": "extended_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.extended_stats",
              "name": "ExtendedStatsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "extended_stats_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.extended_stats_bucket",
              "name": "ExtendedStatsBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "filters",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.filters",
              "name": "FiltersAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geo_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.geo_bounds",
              "name": "GeoBoundsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geo_centroid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.geo_centroid",
              "name": "GeoCentroidAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geo_distance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.geo_distance",
              "name": "GeoDistanceAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geohash_grid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.geo_hash_grid",
              "name": "GeoHashGridAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geotile_grid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.geo_tile_grid",
              "name": "GeoTileGridAggregation"
            }
          },
          "required": false
        },
        {
          "name": "global",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.global",
              "name": "GlobalAggregation"
            }
          },
          "required": false
        },
        {
          "name": "histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramAggregation"
            }
          },
          "required": false
        },
        {
          "name": "ip_range",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.ip_range",
              "name": "IpRangeAggregation"
            }
          },
          "required": false
        },
        {
          "name": "matrix_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.matrix.matrix_stats",
              "name": "MatrixStatsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.max",
              "name": "MaxAggregation"
            }
          },
          "required": false
        },
        {
          "name": "max_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.max_bucket",
              "name": "MaxBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "median_absolute_deviation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.median_absolute_deviation",
              "name": "MedianAbsoluteDeviationAggregation"
            }
          },
          "required": false
        },
        {
          "name": "meta",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "number"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.min",
              "name": "MinAggregation"
            }
          },
          "required": false
        },
        {
          "name": "min_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.min_bucket",
              "name": "MinBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.missing",
              "name": "MissingAggregation"
            }
          },
          "required": false
        },
        {
          "name": "moving_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.moving_average",
              "name": "MovingAverageAggregation"
            }
          },
          "required": false
        },
        {
          "name": "moving_fn",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.moving_function",
              "name": "MovingFunctionAggregation"
            }
          },
          "required": false
        },
        {
          "name": "nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.nested",
              "name": "NestedAggregation"
            }
          },
          "required": false
        },
        {
          "name": "parent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.parent",
              "name": "ParentAggregation"
            }
          },
          "required": false
        },
        {
          "name": "percentile_ranks",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentile_ranks",
              "name": "PercentileRanksAggregation"
            }
          },
          "required": false
        },
        {
          "name": "percentiles",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentiles",
              "name": "PercentilesAggregation"
            }
          },
          "required": false
        },
        {
          "name": "percentiles_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.percentiles_bucket",
              "name": "PercentilesBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "range",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.range",
              "name": "RangeAggregation"
            }
          },
          "required": false
        },
        {
          "name": "rare_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.rare_terms",
              "name": "RareTermsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "reverse_nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.reverse_nested",
              "name": "ReverseNestedAggregation"
            }
          },
          "required": false
        },
        {
          "name": "sampler",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.sampler",
              "name": "SamplerAggregation"
            }
          },
          "required": false
        },
        {
          "name": "scripted_metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.scripted_metric",
              "name": "ScriptedMetricAggregation"
            }
          },
          "required": false
        },
        {
          "name": "serial_diff",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.serial_differencing",
              "name": "SerialDifferencingAggregation"
            }
          },
          "required": false
        },
        {
          "name": "significant_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms",
              "name": "SignificantTermsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "significant_text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_text",
              "name": "SignificantTextAggregation"
            }
          },
          "required": false
        },
        {
          "name": "stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.stats",
              "name": "StatsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "stats_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.stats_bucket",
              "name": "StatsBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "string_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.string_stats",
              "name": "StringStatsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "sum",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.sum",
              "name": "SumAggregation"
            }
          },
          "required": false
        },
        {
          "name": "sum_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.sum_bucket",
              "name": "SumBucketAggregation"
            }
          },
          "required": false
        },
        {
          "name": "terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "top_hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.top_hits",
              "name": "TopHitsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "top_metrics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.top_metrics",
              "name": "TopMetricsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "value_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.value_count",
              "name": "ValueCountAggregation"
            }
          },
          "required": false
        },
        {
          "name": "weighted_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.weighted_average",
              "name": "WeightedAverageAggregation"
            }
          },
          "required": false
        },
        {
          "name": "variable_width_histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.variable_width_histogram",
              "name": "VariableWidthHistogramAggregation"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "AutoDateHistogramAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.date_math",
              "name": "DateMathTime"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "BoxPlotAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "q1",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "q2",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "q3",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "aggregations",
        "name": "Bucket"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "CompositeBucket"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "DateHistogramBucket"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "FiltersBucketItem"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "IpRangeBucket"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "RangeBucket"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "RareTermsBucket"
          },
          "generics": [
            {
              "kind": "user_defined_value"
            }
          ]
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "SignificantTermsBucket"
          },
          "generics": [
            {
              "kind": "user_defined_value"
            }
          ]
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "KeyedBucket"
          },
          "generics": [
            {
              "kind": "user_defined_value"
            }
          ]
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "BucketAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "after_key",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "bg_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "doc_count_error_upper_bound",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "sum_other_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.date_math",
              "name": "DateMathTime"
            }
          },
          "required": true
        },
        {
          "name": "items",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Bucket"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "CompositeBucket"
      },
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "CompositeBucketAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "MultiBucketAggregate"
          },
          "generics": [
            {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            }
          ]
        }
      ],
      "properties": [
        {
          "name": "after_key",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "DateHistogramBucket"
      },
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "ExtendedStatsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "StatsAggregate"
          }
        }
      ],
      "properties": [
        {
          "name": "sum_of_squares",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "variance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "variance_population",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "variance_sampling",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "std_deviation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "std_deviation_population",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "std_deviation_sampling",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "std_deviation_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "StandardDeviationBounds"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "FiltersAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "buckets",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "aggregations",
                    "name": "FiltersBucketItem"
                  }
                }
              },
              {
                "kind": "dictionary_of",
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "aggregations",
                    "name": "FiltersBucketItem"
                  }
                }
              }
            ]
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "FiltersBucketItem"
      },
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": [
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "GeoBounds"
      },
      "properties": [
        {
          "name": "bottom_right",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "LatLon"
            }
          },
          "required": true
        },
        {
          "name": "top_left",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "LatLon"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "GeoBoundsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "GeoBounds"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "GeoCentroidAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "location",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoLocation"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "HdrPercentileItem"
      },
      "properties": [
        {
          "name": "key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "HdrPercentilesAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "HdrPercentileItem"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "IpRangeBucket"
      },
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "KeyedBucket"
      },
      "generics": [
        "TKey"
      ],
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "KeyedValueAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "ValueAggregate"
          }
        }
      ],
      "properties": [
        {
          "name": "keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "MatrixStatsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "correlation",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        },
        {
          "name": "covariance",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "kurtosis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "mean",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "skewness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "variance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "aggregations",
        "name": "MetricAggregate"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "ValueAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "BoxPlotAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "GeoBoundsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "GeoCentroidAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "PercentilesAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "ScriptedMetricAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "StatsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "StringStatsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "TopHitsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "TopMetricsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "ExtendedStatsAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "TDigestPercentilesAggregate"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "aggregations",
            "name": "HdrPercentilesAggregate"
          }
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "aggregations",
        "name": "Missing"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "integer"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "boolean"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "MultiBucketAggregate"
      },
      "generics": [
        "TBucket"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "buckets",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TBucket"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "PercentileItem"
      },
      "properties": [
        {
          "name": "percentile",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "PercentilesAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "items",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "PercentileItem"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "RangeBucket"
      },
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "RareTermsBucket"
      },
      "generics": [
        "TKey"
      ],
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "ScriptedMetricAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "SignificantTermsAggregate"
      },
      "generics": [
        "TKey"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "MultiBucketAggregate"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TKey"
              }
            }
          ]
        }
      ],
      "properties": [
        {
          "name": "bg_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "SignificantTermsBucket"
      },
      "generics": [
        "TKey"
      ],
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "SingleBucketAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "implements": [
        {
          "type": {
            "namespace": "common",
            "name": "IDictionary"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          ]
        }
      ],
      "traits": [
        "IDictionary"
      ],
      "properties": [
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "StandardDeviationBounds"
      },
      "properties": [
        {
          "name": "lower",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "upper",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "lower_population",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "upper_population",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "lower_sampling",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "upper_sampling",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "StatsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "sum",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "StringStatsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "min_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "avg_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "entropy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "distribution",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "TDigestPercentilesAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "values",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "TermsAggregate"
      },
      "generics": [
        "TKey"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "MultiBucketAggregate"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TKey"
              }
            }
          ]
        }
      ],
      "properties": [
        {
          "name": "doc_count_error_upper_bound",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "sum_other_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "TopHitsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "HitsMetadata"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "LazyDocument"
                }
              }
            ]
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "TopMetricsAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        },
        {
          "name": "metrics",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations",
        "name": "ValueAggregate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "aggregations",
            "name": "AggregateBase"
          }
        }
      ],
      "properties": [
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "value_as_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.adjacency_matrix",
        "name": "AdjacencyMatrixAggregation"
      },
      "properties": [
        {
          "name": "filters",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.auto_date_histogram",
        "name": "AutoDateHistogramAggregation"
      },
      "properties": [
        {
          "name": "buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "minimum_interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.auto_date_histogram",
              "name": "MinimumInterval"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": false
        },
        {
          "name": "offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.bucket.auto_date_histogram",
        "name": "MinimumInterval"
      },
      "members": [
        {
          "name": "second"
        },
        {
          "name": "minute"
        },
        {
          "name": "hour"
        },
        {
          "name": "day"
        },
        {
          "name": "month"
        },
        {
          "name": "year"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.children",
        "name": "ChildrenAggregation"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "RelationName"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.composite",
        "name": "CompositeAggregation"
      },
      "properties": [
        {
          "name": "after",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "float"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "sources",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Array"
            },
            "generics": [
              {
                "kind": "dictionary_of",
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "aggregations.bucket.composite",
                    "name": "CompositeAggregationSource"
                  }
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.composite",
        "name": "CompositeAggregationSource"
      },
      "properties": [
        {
          "name": "terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregation"
            }
          },
          "required": false
        },
        {
          "name": "histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramAggregation"
            }
          },
          "required": false
        },
        {
          "name": "date_histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.date_histogram",
              "name": "DateHistogramAggregation"
            }
          },
          "required": false
        },
        {
          "name": "geotile_grid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.geo_tile_grid",
              "name": "GeoTileGridAggregation"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.date_histogram",
        "name": "DateHistogramAggregation"
      },
      "properties": [
        {
          "name": "calendar_interval",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations.bucket.date_histogram",
                  "name": "DateInterval"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.time_unit",
                  "name": "Time"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "extended_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "ExtendedBounds"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "hard_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "ExtendedBounds"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "fixed_interval",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations.bucket.date_histogram",
                  "name": "DateInterval"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.time_unit",
                  "name": "Time"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "interval",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations.bucket.date_histogram",
                  "name": "DateInterval"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.time_unit",
                  "name": "Time"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": false
        },
        {
          "name": "offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": false
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.bucket.date_histogram",
        "name": "DateInterval"
      },
      "members": [
        {
          "name": "second"
        },
        {
          "name": "minute"
        },
        {
          "name": "hour"
        },
        {
          "name": "day"
        },
        {
          "name": "week"
        },
        {
          "name": "month"
        },
        {
          "name": "quarter"
        },
        {
          "name": "year"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.date_range",
        "name": "DateRangeAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        },
        {
          "name": "ranges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations.bucket.date_range",
                "name": "DateRangeExpression"
              }
            }
          },
          "required": false
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.date_range",
        "name": "DateRangeExpression"
      },
      "properties": [
        {
          "name": "from",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "float"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "to",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "float"
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.filters",
        "name": "FiltersAggregation"
      },
      "properties": [
        {
          "name": "filters",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "dictionary_of",
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "other_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "other_bucket_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.geo_distance",
        "name": "GeoDistanceAggregation"
      },
      "properties": [
        {
          "name": "distance_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "GeoDistanceType"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "origin",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.geo",
                  "name": "GeoLocation"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "ranges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.range",
                "name": "AggregationRange"
              }
            }
          },
          "required": false
        },
        {
          "name": "unit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "DistanceUnit"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.geo_hash_grid",
        "name": "GeoHashGridAggregation"
      },
      "properties": [
        {
          "name": "bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo.bounding_box",
              "name": "BoundingBox"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "precision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "GeoHashPrecision"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.geo_tile_grid",
        "name": "GeoTileGridAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "precision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "GeoTilePrecision"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.global",
        "name": "GlobalAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.histogram",
        "name": "ExtendedBounds"
      },
      "generics": [
        "T"
      ],
      "properties": [
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "T"
            }
          },
          "required": true
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "T"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.histogram",
        "name": "HistogramAggregation"
      },
      "properties": [
        {
          "name": "extended_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "ExtendedBounds"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "hard_bounds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "ExtendedBounds"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.histogram",
        "name": "HistogramOrder"
      },
      "properties": [
        {
          "name": "count_ascending",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": true
        },
        {
          "name": "count_descending",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": true
        },
        {
          "name": "key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "key_ascending",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": true
        },
        {
          "name": "key_descending",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.histogram",
              "name": "HistogramOrder"
            }
          },
          "required": true
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "SortOrder"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.ip_range",
        "name": "IpRangeAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "ranges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations.bucket.ip_range",
                "name": "IpRangeAggregationRange"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.ip_range",
        "name": "IpRangeAggregationRange"
      },
      "properties": [
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "mask",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.missing",
        "name": "MissingAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.nested",
        "name": "NestedAggregation"
      },
      "properties": [
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.parent",
        "name": "ParentAggregation"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "RelationName"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.range",
        "name": "RangeAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "ranges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.range",
                "name": "AggregationRange"
              }
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.rare_terms",
        "name": "RareTermsAggregation"
      },
      "properties": [
        {
          "name": "exclude",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations.bucket.terms",
                  "name": "TermsInclude"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "max_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        },
        {
          "name": "precision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "value_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.reverse_nested",
        "name": "ReverseNestedAggregation"
      },
      "properties": [
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.sampler",
        "name": "SamplerAggregation"
      },
      "properties": [
        {
          "name": "execution_hint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.sampler",
              "name": "SamplerAggregationExecutionHint"
            }
          },
          "required": false
        },
        {
          "name": "max_docs_per_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.bucket.sampler",
        "name": "SamplerAggregationExecutionHint"
      },
      "members": [
        {
          "name": "map"
        },
        {
          "name": "global_ordinals"
        },
        {
          "name": "bytes_hash"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms",
        "name": "SignificantTermsAggregation"
      },
      "properties": [
        {
          "name": "background_filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "chi_square",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "ChiSquareHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "exclude",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "execution_hint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregationExecutionHint"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "gnd",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "GoogleNormalizedDistanceHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "mutual_information",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "MutualInformationHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "percentage",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "PercentageScoreHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "script_heuristic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "ScriptedHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "shard_min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms.heuristics",
        "name": "ChiSquareHeuristic"
      },
      "properties": [
        {
          "name": "background_is_superset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "include_negatives",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms.heuristics",
        "name": "GoogleNormalizedDistanceHeuristic"
      },
      "properties": [
        {
          "name": "background_is_superset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms.heuristics",
        "name": "MutualInformationHeuristic"
      },
      "properties": [
        {
          "name": "background_is_superset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "include_negatives",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms.heuristics",
        "name": "PercentageScoreHeuristic"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_terms.heuristics",
        "name": "ScriptedHeuristic"
      },
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.significant_text",
        "name": "SignificantTextAggregation"
      },
      "properties": [
        {
          "name": "background_filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "chi_square",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "ChiSquareHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "exclude",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "execution_hint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregationExecutionHint"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "filter_duplicate_text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "gnd",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "GoogleNormalizedDistanceHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "mutual_information",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "MutualInformationHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "percentage",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "PercentageScoreHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "script_heuristic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.significant_terms.heuristics",
              "name": "ScriptedHeuristic"
            }
          },
          "required": false
        },
        {
          "name": "shard_min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "source_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.terms",
        "name": "TermsAggregation"
      },
      "properties": [
        {
          "name": "collect_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregationCollectMode"
            }
          },
          "required": false
        },
        {
          "name": "exclude",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "execution_hint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.bucket.terms",
              "name": "TermsAggregationExecutionHint"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations.bucket.terms",
                  "name": "TermsInclude"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        },
        {
          "name": "value_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.sort",
                "name": "SortOrder"
              }
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "show_term_doc_count_error",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.bucket.terms",
        "name": "TermsAggregationCollectMode"
      },
      "members": [
        {
          "name": "depth_first"
        },
        {
          "name": "breadth_first"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.bucket.terms",
        "name": "TermsAggregationExecutionHint"
      },
      "members": [
        {
          "name": "map"
        },
        {
          "name": "global_ordinals"
        },
        {
          "name": "global_ordinals_hash"
        },
        {
          "name": "global_ordinals_low_cardinality"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.terms",
        "name": "TermsInclude"
      },
      "properties": [
        {
          "name": "num_partitions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "partition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.bucket.variable_width_histogram",
        "name": "VariableWidthHistogramAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "initial_buffer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.matrix.matrix_stats",
        "name": "MatrixStatsAggregation"
      },
      "properties": [
        {
          "name": "mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.matrix.matrix_stats",
              "name": "MatrixStatsMode"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.matrix.matrix_stats",
        "name": "MatrixStatsMode"
      },
      "members": [
        {
          "name": "avg"
        },
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "sum"
        },
        {
          "name": "median"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.average",
        "name": "AverageAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.boxplot",
        "name": "BoxplotAggregation"
      },
      "properties": [
        {
          "name": "compression",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.cardinality",
        "name": "CardinalityAggregation"
      },
      "properties": [
        {
          "name": "precision_threshold",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "rehash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.extended_stats",
        "name": "ExtendedStatsAggregation"
      },
      "properties": [
        {
          "name": "sigma",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.geo_bounds",
        "name": "GeoBoundsAggregation"
      },
      "properties": [
        {
          "name": "wrap_longitude",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.geo_centroid",
        "name": "GeoCentroidAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.max",
        "name": "MaxAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.median_absolute_deviation",
        "name": "MedianAbsoluteDeviationAggregation"
      },
      "properties": [
        {
          "name": "compression",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.min",
        "name": "MinAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.percentile_ranks",
        "name": "PercentileRanksAggregation"
      },
      "properties": [
        {
          "name": "keyed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "hdr",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentiles",
              "name": "HdrMethod"
            }
          },
          "required": false
        },
        {
          "name": "tdigest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentiles",
              "name": "TDigest"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.percentiles",
        "name": "HdrMethod"
      },
      "properties": [
        {
          "name": "number_of_significant_value_digits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.percentiles",
        "name": "PercentilesAggregation"
      },
      "properties": [
        {
          "name": "keyed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "percents",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        },
        {
          "name": "hdr",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentiles",
              "name": "HdrMethod"
            }
          },
          "required": false
        },
        {
          "name": "tdigest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.percentiles",
              "name": "TDigest"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.percentiles",
        "name": "TDigest"
      },
      "properties": [
        {
          "name": "compression",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.scripted_metric",
        "name": "ScriptedMetricAggregation"
      },
      "properties": [
        {
          "name": "combine_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "init_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "map_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        },
        {
          "name": "reduce_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.stats",
        "name": "StatsAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.string_stats",
        "name": "StringStatsAggregation"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "object"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "show_distribution",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.sum",
        "name": "SumAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.top_hits",
        "name": "TopHitsAggregation"
      },
      "properties": [
        {
          "name": "docvalue_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "explain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "highlight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "Highlight"
            }
          },
          "required": false
        },
        {
          "name": "script_fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "ScriptField"
              }
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "dictionary_of",
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                },
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.sort",
                    "name": "NestedSort"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Array"
                },
                "generics": [
                  {
                    "kind": "named_value_of",
                    "value": {
                      "kind": "union_of",
                      "items": [
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "search.search.sort",
                            "name": "Sort"
                          }
                        },
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "search.search.sort",
                            "name": "SortOrder"
                          }
                        },
                        {
                          "kind": "dictionary_of",
                          "key": {
                            "kind": "instance_of",
                            "type": {
                              "namespace": "internal",
                              "name": "Field"
                            }
                          },
                          "value": {
                            "kind": "instance_of",
                            "type": {
                              "namespace": "search.search.sort",
                              "name": "NestedSort"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.source_filtering",
                  "name": "SourceFilter"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "track_scores",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "seq_no_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.top_metrics",
        "name": "TopMetricsAggregation"
      },
      "properties": [
        {
          "name": "metrics",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations.metric.top_metrics",
                "name": "TopMetricsValue"
              }
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.sort",
                "name": "Sort"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.top_metrics",
        "name": "TopMetricsValue"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.value_count",
        "name": "ValueCountAggregation"
      },
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.metric.weighted_average",
        "name": "ValueType"
      },
      "members": [
        {
          "name": "string"
        },
        {
          "name": "long"
        },
        {
          "name": "double"
        },
        {
          "name": "number"
        },
        {
          "name": "date"
        },
        {
          "name": "date_nanos"
        },
        {
          "name": "ip"
        },
        {
          "name": "numeric"
        },
        {
          "name": "geo_point"
        },
        {
          "name": "boolean"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.weighted_average",
        "name": "WeightedAverageAggregation"
      },
      "properties": [
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.weighted_average",
              "name": "WeightedAverageValue"
            }
          },
          "required": false
        },
        {
          "name": "value_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.weighted_average",
              "name": "ValueType"
            }
          },
          "required": false
        },
        {
          "name": "weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.metric.weighted_average",
              "name": "WeightedAverageValue"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.metric.weighted_average",
        "name": "WeightedAverageValue"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "aggregations.pipeline",
        "name": "GapPolicy"
      },
      "members": [
        {
          "name": "skip"
        },
        {
          "name": "insert_zeros"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.average_bucket",
        "name": "AverageBucketAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.bucket_script",
        "name": "BucketScriptAggregation"
      },
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.bucket_selector",
        "name": "BucketSelectorAggregation"
      },
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.bucket_sort",
        "name": "BucketSortAggregation"
      },
      "properties": [
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "gap_policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline",
              "name": "GapPolicy"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.sort",
                "name": "Sort"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.cumulative_cardinality",
        "name": "CumulativeCardinalityAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.cumulative_sum",
        "name": "CumulativeSumAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.derivative",
        "name": "DerivativeAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.extended_stats_bucket",
        "name": "ExtendedStatsBucketAggregation"
      },
      "properties": [
        {
          "name": "sigma",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.max_bucket",
        "name": "MaxBucketAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.min_bucket",
        "name": "MinBucketAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.moving_average",
        "name": "MovingAverageAggregation"
      },
      "properties": [
        {
          "name": "minimize",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "model",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations.pipeline.moving_average.models",
              "name": "MovingAverageModel"
            }
          },
          "required": false
        },
        {
          "name": "predict",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "window",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.moving_average.models",
        "name": "MovingAverageModel"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.moving_function",
        "name": "MovingFunctionAggregation"
      },
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "shift",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "window",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.percentiles_bucket",
        "name": "PercentilesBucketAggregation"
      },
      "properties": [
        {
          "name": "percents",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.serial_differencing",
        "name": "SerialDifferencingAggregation"
      },
      "properties": [
        {
          "name": "lag",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.stats_bucket",
        "name": "StatsBucketAggregation"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "aggregations.pipeline.sum_bucket",
        "name": "SumBucketAggregation"
      },
      "properties": []
    },
    {
      "kind": "union",
      "name": {
        "namespace": "analysis",
        "name": "StopWords"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "analysis.char_filters",
        "name": "CharFilterBase"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "analysis.token_filters",
        "name": "TokenFilterBase"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "analysis.tokenizers",
        "name": "TokenizerBase"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat",
        "name": "CatRequestBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "properties": [
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "h",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "help",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        },
        {
          "name": "s",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "v",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat",
        "name": "CatResponseBase"
      },
      "generics": [
        "TCatRecord"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "records",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TCatRecord"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_aliases",
        "name": "CatAliasesRecord"
      },
      "properties": [
        {
          "name": "alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexRouting",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "searchRouting",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_aliases",
        "name": "CatAliasesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of alias names to return"
        }
      ],
      "query": [
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_aliases",
        "name": "CatAliasesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_aliases",
                "name": "CatAliasesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_allocation",
        "name": "CatAllocationRecord"
      },
      "properties": [
        {
          "name": "disk.avail",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk.indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk.percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk_ratio",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk.used",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_allocation",
        "name": "CatAllocationRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information"
        }
      ],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_allocation",
        "name": "CatAllocationResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_allocation",
                "name": "CatAllocationRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_count",
        "name": "CatCountRecord"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "epoch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_count",
        "name": "CatCountRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to limit the returned information"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_count",
        "name": "CatCountResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_count",
                "name": "CatCountRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_data_frame_analytics",
        "name": "CatDataFrameAnalyticsRecord"
      },
      "properties": [
        {
          "name": "assignment_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "dest_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "failure_reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.ephemeral_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "progress",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_data_frame_analytics",
        "name": "CatDataFrameAnalyticsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the data frame analytics to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no configs. (This includes `_all` string or when no configs have been specified)"
        },
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_data_frame_analytics",
        "name": "CatDataFrameAnalyticsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_data_frame_analytics",
                "name": "CatDataFrameAnalyticsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_datafeeds",
        "name": "CatDatafeedsRecord"
      },
      "properties": [
        {
          "name": "assignment_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.ephemeral_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.bucket_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.exp_avg_hour",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "DatafeedState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_datafeeds",
        "name": "CatDatafeedsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the datafeeds stats to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_datafeeds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_datafeeds",
        "name": "CatDatafeedsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_datafeeds",
                "name": "CatDatafeedsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_fielddata",
        "name": "CatFielddataRecord"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_fielddata",
        "name": "CatFielddataRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fields"
            }
          },
          "required": false,
          "description": "A comma-separated list of fields to return the fielddata size"
        }
      ],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_fielddata",
        "name": "CatFielddataResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_fielddata",
                "name": "CatFielddataRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_health",
        "name": "CatHealthRecord"
      },
      "properties": [
        {
          "name": "cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "epoch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "init",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.data",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pending_tasks",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pri",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "relo",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "unassign",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_health",
        "name": "CatHealthRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "include_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_health",
        "name": "CatHealthResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_health",
                "name": "CatHealthRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_help",
        "name": "CatHelpRecord"
      },
      "properties": [
        {
          "name": "endpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_help",
        "name": "CatHelpRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_help",
        "name": "CatHelpResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_help",
                "name": "CatHelpRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_indices",
        "name": "CatIndicesRecord"
      },
      "properties": [
        {
          "name": "docs.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "docs.deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "health",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pri",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pri.store.size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rep",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "store.size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "tm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_indices",
        "name": "CatIndicesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to limit the returned information"
        }
      ],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "health",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Health"
            }
          },
          "required": false,
          "description": "A health status (\"green\", \"yellow\", or \"red\" to filter only indices matching the specified health status"
        },
        {
          "name": "include_unloaded_segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If set to true segment stats will include stats for segments that are not currently loaded into memory"
        },
        {
          "name": "pri",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Set to true to return stats only for primary shards"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_indices",
        "name": "CatIndicesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_indices",
                "name": "CatIndicesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_jobs",
        "name": "CatJobsRecord"
      },
      "properties": [
        {
          "name": "assignment_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.time.exp_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.time.exp_avg_hour",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.time.max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.time.min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "buckets.time.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.earliest_record",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.empty_buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.input_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.input_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.input_records",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.invalid_dates",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.last",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.last_empty_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.last_sparse_bucket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.latest_record",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.missing_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.out_of_order_timestamps",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.processed_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.processed_records",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data.sparse_buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.memory.avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.memory.min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.memory.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.records.avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.records.max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.records.min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.records.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.time.avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.time.max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.time.min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "forecasts.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.bucket_allocation_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.by_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.categorization_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cat.cat_jobs",
              "name": "ModelCategorizationStatus"
            }
          },
          "required": true
        },
        {
          "name": "model.categorized_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.dead_category_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.frequent_category_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.log_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.memory_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cat.cat_jobs",
              "name": "ModelMemoryStatus"
            }
          },
          "required": true
        },
        {
          "name": "model.over_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.partition_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.rare_category_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model.timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.ephemeral_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node.name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "opened_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "JobState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_jobs",
        "name": "CatJobsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the jobs stats to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_jobs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"
        },
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_jobs",
        "name": "CatJobsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_jobs",
                "name": "CatJobsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cat.cat_jobs",
        "name": "ModelCategorizationStatus"
      },
      "members": [
        {
          "name": "ok"
        },
        {
          "name": "warn"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cat.cat_jobs",
        "name": "ModelMemoryStatus"
      },
      "members": [
        {
          "name": "ok"
        },
        {
          "name": "soft_limit"
        },
        {
          "name": "hard_limit"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_master",
        "name": "CatMasterRecord"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_master",
        "name": "CatMasterRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_master",
        "name": "CatMasterResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_master",
                "name": "CatMasterRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_node_attributes",
        "name": "CatNodeAttributesRecord"
      },
      "properties": [
        {
          "name": "attr",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "port",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "pid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_node_attributes",
        "name": "CatNodeAttributesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_node_attributes",
        "name": "CatNodeAttributesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_node_attributes",
                "name": "CatNodeAttributesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_nodes",
        "name": "CatNodesRecord"
      },
      "properties": [
        {
          "name": "build",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "completion_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cpu",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk_available",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fielddata_evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fielddata_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "file_descriptor_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "file_descriptor_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "file_descriptor_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "filter_cache_evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter_cache_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "flush_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "flush_total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_exists_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_exists_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_missing_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_missing_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id_cache_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_delete_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_delete_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_delete_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_index_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_index_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing_index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "jdk",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "load_15m",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "load_5m",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "load_1m",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "master",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_current_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_current_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_total_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges_total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_role",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate_queries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "port",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ram_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ram_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ram_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "refresh_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "refresh_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_fetch_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_fetch_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_fetch_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_open_contexts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_query_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_query_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_query_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments_index_writer_max_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments_index_writer_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments_version_map_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "uptime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_nodes",
        "name": "CatNodesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        },
        {
          "name": "full_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return the full node ID instead of the shortened version (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_nodes",
        "name": "CatNodesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_nodes",
                "name": "CatNodesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_pending_tasks",
        "name": "CatPendingTasksRecord"
      },
      "properties": [
        {
          "name": "insertOrder",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "priority",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timeInQueue",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_pending_tasks",
        "name": "CatPendingTasksRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_pending_tasks",
        "name": "CatPendingTasksResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_pending_tasks",
                "name": "CatPendingTasksRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_plugins",
        "name": "CatPluginsRecord"
      },
      "properties": [
        {
          "name": "component",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "isolation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_plugins",
        "name": "CatPluginsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_plugins",
        "name": "CatPluginsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_plugins",
                "name": "CatPluginsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_recovery",
        "name": "CatRecoveryRecord"
      },
      "properties": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "bytes_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "bytes_recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "bytes_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "files",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "files_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "files_recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "files_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source_host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "stage",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "translog_ops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringLongFormatter"
          }
        },
        {
          "name": "translog_ops_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "translog_ops_recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringLongFormatter"
          }
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_recovery",
        "name": "CatRecoveryRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "Comma-separated list or wildcard expression of index names to limit the returned information"
        }
      ],
      "query": [
        {
          "name": "active_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If `true`, the response only includes ongoing shard recoveries"
        },
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        },
        {
          "name": "detailed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If `true`, the response includes detailed information about shard recoveries"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_recovery",
        "name": "CatRecoveryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_recovery",
                "name": "CatRecoveryRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_repositories",
        "name": "CatRepositoriesRecord"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_repositories",
        "name": "CatRepositoriesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_repositories",
        "name": "CatRepositoriesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_repositories",
                "name": "CatRepositoriesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_segments",
        "name": "CatSegmentsRecord"
      },
      "properties": [
        {
          "name": "committed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "compound",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "docs.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "docs.deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "generation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "prirep",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "searchable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segment",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size.memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_segments",
        "name": "CatSegmentsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to limit the returned information"
        }
      ],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_segments",
        "name": "CatSegmentsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_segments",
                "name": "CatSegmentsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_shards",
        "name": "CatShardsRecord"
      },
      "properties": [
        {
          "name": "completion.size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fielddata.evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fielddata.memory_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter_cache.memory_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "flush.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "flush.total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.exists_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.exists_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.missing_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.missing_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "get.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id_cache.memory_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.delete_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.delete_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.delete_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.index_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.index_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexing.index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.current_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.current_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.total_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.total_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "merges.total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate.current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate.memory_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate.queries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate.time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "percolate.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "prirep",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "refresh.time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "refresh.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.fetch_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.fetch_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.fetch_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.open_contexts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.query_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.query_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search.query_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.fixed_bitset_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.index_writer_max_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.index_writer_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "segments.version_map_memory",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "warmer.current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "warmer.total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "warmer.total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_shards",
        "name": "CatShardsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to limit the returned information"
        }
      ],
      "query": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_shards",
        "name": "CatShardsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_shards",
                "name": "CatShardsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_snapshots",
        "name": "CatSnapshotsRecord"
      },
      "properties": [
        {
          "name": "duration",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "end_epoch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "end_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "failed_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "start_epoch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "start_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "successful_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "total_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_snapshots",
        "name": "CatSnapshotsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "Name of repository from which to fetch the snapshot information"
        }
      ],
      "query": [
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Set to true to ignore unavailable snapshots"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_snapshots",
        "name": "CatSnapshotsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_snapshots",
                "name": "CatSnapshotsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_tasks",
        "name": "CatTasksRecord"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "parent_task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "running_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "start_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_tasks",
        "name": "CatTasksRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of actions that should be returned. Leave empty to return all."
        },
        {
          "name": "detailed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return detailed task information (default: false)"
        },
        {
          "name": "node_id",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "parent_task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_tasks",
        "name": "CatTasksResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_tasks",
                "name": "CatTasksRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_templates",
        "name": "CatTemplatesRecord"
      },
      "properties": [
        {
          "name": "index_patterns",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringLongFormatter"
          }
        },
        {
          "name": "composed_of",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_templates",
        "name": "CatTemplatesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "A pattern that returned template names must match"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_templates",
        "name": "CatTemplatesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_templates",
                "name": "CatTemplatesRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_thread_pool",
        "name": "CatThreadPoolRecord"
      },
      "properties": [
        {
          "name": "active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringIntFormatter"
          }
        },
        {
          "name": "completed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringLongFormatter"
          }
        },
        {
          "name": "core",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "ephemeral_node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "keep_alive",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "largest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pool_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "port",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "pid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "queue",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringIntFormatter"
          }
        },
        {
          "name": "queue_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "rejected",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "StringLongFormatter"
          }
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableStringIntFormatter"
          }
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_thread_pool",
        "name": "CatThreadPoolRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "thread_pool_patterns",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of regular-expressions to filter the thread pools in the output"
        }
      ],
      "query": [
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Size"
            }
          },
          "required": false,
          "description": "The multiplier in which to display values"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_thread_pool",
        "name": "CatThreadPoolResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_thread_pool",
                "name": "CatThreadPoolRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_trained_models",
        "name": "CatTrainedModelsRecord"
      },
      "properties": [
        {
          "name": "created_by",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data_frame_analytics_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ingest.count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "ingest.current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "ingest.failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "ingest.pipelines",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ingest.time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "license",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "operations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_trained_models",
        "name": "CatTrainedModelsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "model_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the trained models stats to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no trained models. (This includes `_all` string or when no trained models have been specified)"
        },
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Bytes"
            }
          },
          "required": false,
          "description": "The unit in which to display byte values"
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "skips a number of trained models"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "specifies a max number of trained models to get"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_trained_models",
        "name": "CatTrainedModelsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_trained_models",
                "name": "CatTrainedModelsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_transforms",
        "name": "CatTransformsRecord"
      },
      "properties": [
        {
          "name": "changes_last_detection_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "checkpoint_duration_time_exp_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "dest_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "documents_indexed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "documents_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indexed_documents_exp_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_failure",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_page_search_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "pages_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "processed_documents_exp_avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processing_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_failure",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "source_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cat.cat_transforms",
              "name": "TransformState"
            }
          },
          "required": true
        },
        {
          "name": "transform_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cat.cat_transforms",
              "name": "TransformType"
            }
          },
          "required": true
        },
        {
          "name": "trigger_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cat.cat_transforms",
        "name": "CatTransformsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatRequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The id of the transform for which to get stats. '_all' or '*' implies all transforms"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "skips a number of transform configs, defaults to 0"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "specifies a max number of transforms to get, defaults to 100"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cat.cat_transforms",
        "name": "CatTransformsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cat",
            "name": "CatResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cat.cat_transforms",
                "name": "CatTransformsRecord"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cat.cat_transforms",
        "name": "TransformState"
      },
      "members": [
        {
          "name": "STARTED"
        },
        {
          "name": "INDEXING"
        },
        {
          "name": "ABORTING"
        },
        {
          "name": "STOPPING"
        },
        {
          "name": "STOPPED"
        },
        {
          "name": "FAILED"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cat.cat_transforms",
        "name": "TransformType"
      },
      "members": [
        {
          "name": "batch"
        },
        {
          "name": "continuous"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cluster",
        "name": "ClusterStatus"
      },
      "members": [
        {
          "name": "green"
        },
        {
          "name": "yellow"
        },
        {
          "name": "red"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster",
        "name": "NodesResponseBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster",
              "name": "NodeStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster",
        "name": "NodeStatistics"
      },
      "properties": [
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "successful",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "AllocationDecision"
      },
      "properties": [
        {
          "name": "decider",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "decision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "AllocationExplainDecision"
            }
          },
          "required": true
        },
        {
          "name": "explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "AllocationExplainDecision"
      },
      "members": [
        {
          "name": "NO"
        },
        {
          "name": "YES"
        },
        {
          "name": "THROTTLE"
        },
        {
          "name": "ALWAYS"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "AllocationStore"
      },
      "properties": [
        {
          "name": "allocation_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "in_sync",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "matching_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "matching_sync_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "store_exception",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "ClusterAllocationExplainRequest"
      },
      "description": "The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "include_disk_info",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return information about disk usage and shard sizes (default: false)"
        },
        {
          "name": "include_yes_decisions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return 'YES' decisions in explanation (default: false)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "index",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          },
          {
            "name": "primary",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "shard",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "ClusterAllocationExplainResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "allocate_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "allocation_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "allocation_delay_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "can_allocate",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "can_move_to_other_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "can_rebalance_cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "can_rebalance_cluster_decisions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_allocation_explain",
                "name": "AllocationDecision"
              }
            }
          },
          "required": true
        },
        {
          "name": "can_rebalance_to_other_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "can_remain_decisions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_allocation_explain",
                "name": "AllocationDecision"
              }
            }
          },
          "required": true
        },
        {
          "name": "can_remain_on_current_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "configured_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "configured_delay_in_mills",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "CurrentNode"
            }
          },
          "required": true
        },
        {
          "name": "current_state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "move_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_allocation_decisions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_allocation_explain",
                "name": "NodeAllocationExplanation"
              }
            }
          },
          "required": true
        },
        {
          "name": "primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "rebalance_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "remaining_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "remaining_delay_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "unassigned_info",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "UnassignedInformation"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "CurrentNode"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "weight_ranking",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "Decision"
      },
      "members": [
        {
          "name": "yes"
        },
        {
          "name": "no"
        },
        {
          "name": "worse_balance"
        },
        {
          "name": "throttled"
        },
        {
          "name": "awaiting_info"
        },
        {
          "name": "allocation_delayed"
        },
        {
          "name": "no_valid_shard_copy"
        },
        {
          "name": "no_attempt"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "NodeAllocationExplanation"
      },
      "properties": [
        {
          "name": "deciders",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_allocation_explain",
                "name": "AllocationDecision"
              }
            }
          },
          "required": true
        },
        {
          "name": "node_attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "node_decision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "Decision"
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "AllocationStore"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "weight_ranking",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "UnassignedInformation"
      },
      "properties": [
        {
          "name": "at",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "last_allocation_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_allocation_explain",
              "name": "UnassignedInformationReason"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "UnassignedInformationReason"
      },
      "members": [
        {
          "name": "INDEX_CREATED"
        },
        {
          "name": "CLUSTER_RECOVERED"
        },
        {
          "name": "INDEX_REOPENED"
        },
        {
          "name": "DANGLING_INDEX_IMPORTED"
        },
        {
          "name": "NEW_INDEX_RESTORED"
        },
        {
          "name": "EXISTING_INDEX_RESTORED"
        },
        {
          "name": "REPLICA_ADDED"
        },
        {
          "name": "ALLOCATION_FAILED"
        },
        {
          "name": "NODE_LEFT"
        },
        {
          "name": "REROUTE_CANCELLED"
        },
        {
          "name": "REINITIALIZED"
        },
        {
          "name": "REALLOCATED_REPLICA"
        },
        {
          "name": "PRIMARY_FAILED"
        },
        {
          "name": "FORCED_EMPTY_PRIMARY"
        },
        {
          "name": "MANUAL_ALLOCATION"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_health",
        "name": "ClusterHealthRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "Limit the information returned to a specific index"
        }
      ],
      "query": [
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "level",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Level"
            }
          },
          "required": false,
          "description": "Specify the level of detail for returned information"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Wait until the specified number of shards is active"
        },
        {
          "name": "wait_for_events",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "WaitForEvents"
            }
          },
          "required": false,
          "description": "Wait until all currently queued events with the given priority are processed"
        },
        {
          "name": "wait_for_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Wait until the specified number of nodes is available"
        },
        {
          "name": "wait_for_no_initializing_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to wait until there are no initializing shards in the cluster"
        },
        {
          "name": "wait_for_no_relocating_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to wait until there are no relocating shards in the cluster"
        },
        {
          "name": "wait_for_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "WaitForStatus"
            }
          },
          "required": false,
          "description": "Wait until cluster is in a specific state"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_health",
        "name": "ClusterHealthResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "active_primary_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "active_shards_percent_as_number",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "delayed_unassigned_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_health",
                "name": "IndexHealthStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "ResolvableReadOnlyDictionaryFormatter`2"
          }
        },
        {
          "name": "initializing_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_data_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_in_flight_fetch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_pending_tasks",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "relocating_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Health"
            }
          },
          "required": true
        },
        {
          "name": "task_max_waiting_in_queue_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "unassigned_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_health",
        "name": "IndexHealthStats"
      },
      "properties": [
        {
          "name": "active_primary_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "initializing_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_replicas",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "number_of_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "relocating_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_health",
                "name": "ShardHealthStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Health"
            }
          },
          "required": true
        },
        {
          "name": "unassigned_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_health",
        "name": "ShardHealthStats"
      },
      "properties": [
        {
          "name": "active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "initializing_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "primary_active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "relocating_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Health"
            }
          },
          "required": true
        },
        {
          "name": "unassigned_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_pending_tasks",
        "name": "ClusterPendingTasksRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_pending_tasks",
        "name": "ClusterPendingTasksResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "tasks",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_pending_tasks",
                "name": "PendingTask"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_pending_tasks",
        "name": "PendingTask"
      },
      "properties": [
        {
          "name": "insert_order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "priority",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_queue",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_queue_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteDecision"
      },
      "properties": [
        {
          "name": "decider",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "decision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteExplanation"
      },
      "properties": [
        {
          "name": "command",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "decisions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_reroute",
                "name": "ClusterRerouteDecision"
              }
            }
          },
          "required": true
        },
        {
          "name": "parameters",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_reroute",
              "name": "ClusterRerouteParameters"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteParameters"
      },
      "properties": [
        {
          "name": "allow_primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "from_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "to_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteRequest"
      },
      "description": "The definition of `commands` to perform (`move`, `cancel`, `allocate`)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "dry_run",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Simulate the operation only and return the resulting state"
        },
        {
          "name": "explain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return an explanation of why the commands can or cannot be executed"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "metric",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Limit the information returned to the specified metrics. Defaults to all but metadata"
        },
        {
          "name": "retry_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Retries allocation of shards that are blocked due to too many subsequent allocation failures"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "commands",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "cluster.cluster_reroute.commands",
                  "name": "ClusterRerouteCommand"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "explanations",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_reroute",
                "name": "ClusterRerouteExplanation"
              }
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_reroute.commands",
        "name": "ClusterRerouteCommand"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_settings.cluster_get_settings",
        "name": "ClusterGetSettingsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "include_defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to return all default clusters setting."
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_settings.cluster_get_settings",
        "name": "ClusterGetSettingsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "persistent",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "transient",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_settings.cluster_put_settings",
        "name": "ClusterPutSettingsRequest"
      },
      "description": "The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "persistent",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "transient",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_settings.cluster_put_settings",
        "name": "ClusterPutSettingsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "persistent",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "transient",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_state",
        "name": "ClusterStateRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Limit the information returned to the specified metrics"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "wait_for_metadata_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Wait for the metadata version to be equal or greater than the specified metadata version"
        },
        {
          "name": "wait_for_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "The maximum time to wait for wait_for_metadata_version before timing out"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_state",
        "name": "ClusterStateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cluster_uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "master_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "state_uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterFileSystem"
      },
      "properties": [
        {
          "name": "available_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "free_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterIndicesShardsIndexStats"
      },
      "properties": [
        {
          "name": "primaries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterShardMetrics"
            }
          },
          "required": true
        },
        {
          "name": "replication",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterShardMetrics"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterShardMetrics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterIndicesShardsStats"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterIndicesShardsIndexStats"
            }
          },
          "required": true
        },
        {
          "name": "primaries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "replication",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterIndicesStats"
      },
      "properties": [
        {
          "name": "completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "CompletionStats"
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "DocStats"
            }
          },
          "required": true
        },
        {
          "name": "fielddata",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "FielddataStats"
            }
          },
          "required": true
        },
        {
          "name": "query_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "QueryCacheStats"
            }
          },
          "required": true
        },
        {
          "name": "segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "SegmentsStats"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterIndicesShardsStats"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "StoreStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterIngestStats"
      },
      "properties": [
        {
          "name": "number_of_pipelines",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "processor_stats",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_stats",
                "name": "ClusterProcessorStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterJvm"
      },
      "properties": [
        {
          "name": "max_uptime_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterJvmMemory"
            }
          },
          "required": true
        },
        {
          "name": "threads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "versions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_stats",
                "name": "ClusterJvmVersion"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterJvmMemory"
      },
      "properties": [
        {
          "name": "heap_max_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "heap_used_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterJvmVersion"
      },
      "properties": [
        {
          "name": "bundled_jdk",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "using_bundled_jdk",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_vendor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterNetworkTypes"
      },
      "properties": [
        {
          "name": "http_types",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        },
        {
          "name": "transport_types",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterNodeCount"
      },
      "properties": [
        {
          "name": "coordinating_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "data",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "ingest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "master",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "voting_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterNodesStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterNodeCount"
            }
          },
          "required": true
        },
        {
          "name": "discovery_types",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        },
        {
          "name": "fs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterFileSystem"
            }
          },
          "required": true
        },
        {
          "name": "ingest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterIngestStats"
            }
          },
          "required": true
        },
        {
          "name": "jvm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterJvm"
            }
          },
          "required": true
        },
        {
          "name": "network_types",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterNetworkTypes"
            }
          },
          "required": true
        },
        {
          "name": "os",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterOperatingSystemStats"
            }
          },
          "required": true
        },
        {
          "name": "packaging_types",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_stats",
                "name": "NodePackagingType"
              }
            }
          },
          "required": true
        },
        {
          "name": "plugins",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.stats",
                "name": "PluginStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "process",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterProcess"
            }
          },
          "required": true
        },
        {
          "name": "versions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterOperatingSystemName"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterOperatingSystemStats"
      },
      "properties": [
        {
          "name": "allocated_processors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "available_processors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "OperatingSystemMemoryInfo"
            }
          },
          "required": true
        },
        {
          "name": "names",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.cluster_stats",
                "name": "ClusterOperatingSystemName"
              }
            }
          },
          "required": true
        },
        {
          "name": "pretty_names",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_info",
                "name": "ClusterOperatingSystemPrettyNane"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterProcess"
      },
      "properties": [
        {
          "name": "cpu",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterProcessCpu"
            }
          },
          "required": true
        },
        {
          "name": "open_file_descriptors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterProcessOpenFileDescriptors"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterProcessCpu"
      },
      "properties": [
        {
          "name": "percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterProcessOpenFileDescriptors"
      },
      "properties": [
        {
          "name": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterProcessorStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterShardMetrics"
      },
      "properties": [
        {
          "name": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        }
      ],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster",
            "name": "NodesResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cluster_uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterIndicesStats"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.cluster_stats",
              "name": "ClusterNodesStats"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster",
              "name": "ClusterStatus"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "NodePackagingType"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "flavor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.cluster_stats",
        "name": "OperatingSystemMemoryInfo"
      },
      "properties": [
        {
          "name": "free_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "free_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "used_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "used_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_hot_threads",
        "name": "HotThreadInformation"
      },
      "properties": [
        {
          "name": "hosts",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "threads",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.nodes_hot_threads",
        "name": "NodesHotThreadsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        }
      ],
      "query": [
        {
          "name": "ignore_idle_threads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)"
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "The interval for the second sampling of threads"
        },
        {
          "name": "snapshots",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Number of samples of thread stacktrace (default: 10)"
        },
        {
          "name": "threads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Specify the number of threads to provide information for (default: 3)"
        },
        {
          "name": "thread_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ThreadType"
            }
          },
          "required": false
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_hot_threads",
        "name": "NodesHotThreadsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "hot_threads",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_hot_threads",
                "name": "HotThreadInformation"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "ClusterOperatingSystemPrettyNane"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "pretty_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfo"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "build_flavor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "build_hash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "build_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "http",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoHttp"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "jvm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeJvmInfo"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "network",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoNetwork"
            }
          },
          "required": true
        },
        {
          "name": "os",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeOperatingSystemInfo"
            }
          },
          "required": true
        },
        {
          "name": "plugins",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.stats",
                "name": "PluginStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "process",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeProcessInfo"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_info",
                "name": "NodeRole"
              }
            }
          },
          "required": true
        },
        {
          "name": "settings",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "thread_pool",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_info",
                "name": "NodeThreadPoolInfo"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "total_indexing_buffer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "transport",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoTransport"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoHttp"
      },
      "properties": [
        {
          "name": "bound_address",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "max_content_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_content_length_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "publish_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoJvmMemory"
      },
      "properties": [
        {
          "name": "direct_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "direct_max_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "heap_init",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_init_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "heap_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "heap_max_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "non_heap_init",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "non_heap_init_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "non_heap_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "non_heap_max_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoMemory"
      },
      "properties": [
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoNetwork"
      },
      "properties": [
        {
          "name": "primary_interface",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoNetworkInterface"
            }
          },
          "required": true
        },
        {
          "name": "refresh_interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoNetworkInterface"
      },
      "properties": [
        {
          "name": "address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "mac_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoOSCPU"
      },
      "properties": [
        {
          "name": "cache_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cache_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "cores_per_socket",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "mhz",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "model",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_cores",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total_sockets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "vendor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeInfoTransport"
      },
      "properties": [
        {
          "name": "bound_address",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "publish_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeJvmInfo"
      },
      "properties": [
        {
          "name": "gc_collectors",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoJvmMemory"
            }
          },
          "required": true
        },
        {
          "name": "memory_pools",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "pid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_vendor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "vm_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeOperatingSystemInfo"
      },
      "properties": [
        {
          "name": "arch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "available_processors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "cpu",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoOSCPU"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoMemory"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pretty_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "refresh_interval_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "swap",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_info",
              "name": "NodeInfoMemory"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeProcessInfo"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "mlockall",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "refresh_interval_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeRole"
      },
      "members": [
        {
          "name": "master"
        },
        {
          "name": "data"
        },
        {
          "name": "client"
        },
        {
          "name": "ingest"
        },
        {
          "name": "ml"
        },
        {
          "name": "voting_only"
        },
        {
          "name": "transform"
        },
        {
          "name": "remote_cluster_client"
        },
        {
          "name": "coordinating_only"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodesInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        },
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "A comma-separated list of metrics you wish returned. Leave empty to return all."
        }
      ],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodesInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster",
            "name": "NodesResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_info",
                "name": "NodeInfo"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_info",
        "name": "NodeThreadPoolInfo"
      },
      "properties": [
        {
          "name": "core",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "keep_alive",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "queue_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "AdaptiveSelectionStats"
      },
      "properties": [
        {
          "name": "avg_queue_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "avg_response_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "avg_response_time_ns",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "avg_service_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "avg_service_time_ns",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "outgoing_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "rank",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "BreakerStats"
      },
      "properties": [
        {
          "name": "estimated_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "estimated_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "limit_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "limit_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "overhead",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "tripped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "CPUStats"
      },
      "properties": [
        {
          "name": "percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "sys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "sys_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "user",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "user_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "DataPathStats"
      },
      "properties": [
        {
          "name": "available",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "available_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "disk_queue",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk_reads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "disk_read_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk_read_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "disk_writes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "disk_write_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "disk_write_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "free",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "free_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "mount",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "ExtendedMemoryStats"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster.nodes_stats",
            "name": "MemoryStats"
          }
        }
      ],
      "properties": [
        {
          "name": "free_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "used_percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "FileSystemStats"
      },
      "properties": [
        {
          "name": "data",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "DataPathStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "TotalFileSystemStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "GarbageCollectionGenerationStats"
      },
      "properties": [
        {
          "name": "collection_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "collection_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "collection_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "GarbageCollectionStats"
      },
      "properties": [
        {
          "name": "collectors",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "GarbageCollectionGenerationStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "HttpStats"
      },
      "properties": [
        {
          "name": "current_open",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total_opened",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "JvmClassesStats"
      },
      "properties": [
        {
          "name": "current_loaded_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_loaded_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_unloaded_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "MemoryStats"
      },
      "properties": [
        {
          "name": "resident",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "resident_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "share",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "share_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_virtual",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_virtual_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "NodeBufferPool"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_capacity",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_capacity_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "used",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "used_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "NodeJvmStats"
      },
      "properties": [
        {
          "name": "buffer_pools",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "NodeBufferPool"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "classes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "JvmClassesStats"
            }
          },
          "required": true
        },
        {
          "name": "gc",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "GarbageCollectionStats"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "MemoryStats"
            }
          },
          "required": true
        },
        {
          "name": "threads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "ThreadStats"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "uptime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "uptime_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "NodesStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        },
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Limit the information returned to the specified metrics"
        },
        {
          "name": "index_metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
        }
      ],
      "query": [
        {
          "name": "completion_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"
        },
        {
          "name": "fielddata_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"
        },
        {
          "name": "groups",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "A comma-separated list of search groups for `search` index metric"
        },
        {
          "name": "include_segment_file_sizes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)"
        },
        {
          "name": "level",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Level"
            }
          },
          "required": false,
          "description": "Return indices stats aggregated at index, node or shard level"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "types",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of document types for the `indexing` index metric"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "NodesStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster",
            "name": "NodesResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "NodeStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "NodeStats"
      },
      "properties": [
        {
          "name": "adaptive_selection",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "AdaptiveSelectionStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "breakers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "BreakerStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "fs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "FileSystemStats"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "http",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "HttpStats"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "IndexStats"
            }
          },
          "required": true
        },
        {
          "name": "ingest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats.statistics",
              "name": "NodeIngestStats"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        },
        {
          "name": "jvm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "NodeJvmStats"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "os",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "OperatingSystemStats"
            }
          },
          "required": true
        },
        {
          "name": "process",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "ProcessStats"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_info",
                "name": "NodeRole"
              }
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "ScriptStats"
            }
          },
          "required": true
        },
        {
          "name": "thread_pool",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "ThreadCountStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "transport",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "TransportStats"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "OperatingSystemStats"
      },
      "properties": [
        {
          "name": "cpu",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "CPUStats"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "ExtendedMemoryStats"
            }
          },
          "required": true
        },
        {
          "name": "swap",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "MemoryStats"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "ProcessStats"
      },
      "properties": [
        {
          "name": "cpu",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "CPUStats"
            }
          },
          "required": true
        },
        {
          "name": "mem",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "MemoryStats"
            }
          },
          "required": true
        },
        {
          "name": "open_file_descriptors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "ScriptStats"
      },
      "properties": [
        {
          "name": "cache_evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "compilations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "ThreadCountStats"
      },
      "properties": [
        {
          "name": "active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "completed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "largest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "queue",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "rejected",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "threads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "ThreadStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "peak_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "TotalFileSystemStats"
      },
      "properties": [
        {
          "name": "available",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "available_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "free",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "free_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats",
        "name": "TransportStats"
      },
      "properties": [
        {
          "name": "rx_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "rx_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rx_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "server_open",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "tx_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "tx_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "tx_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats.statistics",
        "name": "IngestStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processors",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats.statistics",
                "name": "KeyedProcessorStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats.statistics",
        "name": "KeyedProcessorStats"
      },
      "properties": [
        {
          "name": "statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats",
              "name": "ProcessStats"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_stats.statistics",
        "name": "NodeIngestStats"
      },
      "properties": [
        {
          "name": "pipelines",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats.statistics",
                "name": "IngestStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.nodes_stats.statistics",
              "name": "IngestStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.nodes_usage",
        "name": "NodesUsageRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        },
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Limit the information returned to the specified metrics"
        }
      ],
      "query": [
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_usage",
        "name": "NodesUsageResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster",
            "name": "NodesResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_usage",
                "name": "NodeUsageInformation"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.nodes_usage",
        "name": "NodeUsageInformation"
      },
      "properties": [
        {
          "name": "rest_actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        },
        {
          "name": "since",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "aggregations",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.ping",
        "name": "PingRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.ping",
        "name": "PingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.reload_secure_settings",
        "name": "ReloadSecureSettingsRequest"
      },
      "description": "An object containing the password for the elasticsearch keystore",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "NodeIds"
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs to span the reload/reinit call. Should stay empty because reloading usually involves all cluster nodes."
        }
      ],
      "query": [
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.reload_secure_settings",
        "name": "ReloadSecureSettingsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster",
            "name": "NodesResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.nodes_stats",
                "name": "NodeStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.remote_info",
        "name": "RemoteInfo"
      },
      "properties": [
        {
          "name": "connected",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "initial_connect_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_connections_per_cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "num_nodes_connected",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "seeds",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "skip_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.remote_info",
        "name": "RemoteInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.remote_info",
        "name": "RemoteInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.remote_info",
                "name": "RemoteInfo"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.root_node_info",
        "name": "RootNodeInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.root_node_info",
        "name": "RootNodeInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cluster_uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "tagline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_abstractions.response",
              "name": "ElasticsearchVersionInfo"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.task_management.cancel_tasks",
        "name": "CancelTasksRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": false,
          "description": "Cancel the task with specified task id (node_id:task_number)"
        }
      ],
      "query": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of actions that should be cancelled. Leave empty to cancel all."
        },
        {
          "name": "nodes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        },
        {
          "name": "parent_task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.cancel_tasks",
        "name": "CancelTasksResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "node_failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.task_management.list_tasks",
                "name": "TaskExecutingNode"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.task_management.get_task",
        "name": "GetTaskRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Return the task with specified id (node_id:task_number)"
        }
      ],
      "query": [
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Wait for the matching tasks to complete (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.get_task",
        "name": "GetTaskResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "completed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.task_management.get_task",
              "name": "TaskInfo"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.get_task",
        "name": "TaskInfo"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cancellable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "children",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.task_management.get_task",
                "name": "TaskInfo"
              }
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "headers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "running_time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.task_management.list_tasks",
              "name": "TaskStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "ListTasksRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of actions that should be returned. Leave empty to return all."
        },
        {
          "name": "detailed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return detailed task information (default: false)"
        },
        {
          "name": "group_by",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "GroupBy"
            }
          },
          "required": false,
          "description": "Group tasks by nodes or parent/child relationships"
        },
        {
          "name": "nodes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
        },
        {
          "name": "parent_task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all."
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Wait for the matching tasks to complete (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "ListTasksResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "node_failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.task_management.list_tasks",
                "name": "TaskExecutingNode"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "TaskExecutingNode"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "tasks",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "TaskId"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "cluster.task_management.list_tasks",
                "name": "TaskState"
              }
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "TaskRetries"
      },
      "properties": [
        {
          "name": "bulk",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "TaskState"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cancellable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "headers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "parent_task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": true
        },
        {
          "name": "running_time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.task_management.list_tasks",
              "name": "TaskStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "TaskStatus"
      },
      "properties": [
        {
          "name": "batches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "noops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.task_management.list_tasks",
              "name": "TaskRetries"
            }
          },
          "required": true
        },
        {
          "name": "throttled_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttled_until_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "updated",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "Bytes"
      },
      "members": [
        {
          "name": "b"
        },
        {
          "name": "k"
        },
        {
          "name": "kb"
        },
        {
          "name": "m"
        },
        {
          "name": "mb"
        },
        {
          "name": "g"
        },
        {
          "name": "gb"
        },
        {
          "name": "t"
        },
        {
          "name": "tb"
        },
        {
          "name": "p"
        },
        {
          "name": "pb"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "Conflicts"
      },
      "members": [
        {
          "name": "abort"
        },
        {
          "name": "proceed"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "DefaultOperator"
      },
      "members": [
        {
          "name": "AND"
        },
        {
          "name": "OR"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "ExpandWildcards"
      },
      "members": [
        {
          "name": "open"
        },
        {
          "name": "closed"
        },
        {
          "name": "hidden"
        },
        {
          "name": "none"
        },
        {
          "name": "all"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "GroupBy"
      },
      "members": [
        {
          "name": "nodes"
        },
        {
          "name": "parents"
        },
        {
          "name": "none"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "Health"
      },
      "members": [
        {
          "name": "green"
        },
        {
          "name": "yellow"
        },
        {
          "name": "red"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common",
        "name": "IDictionary"
      },
      "generics": [
        "TKey",
        "TValue"
      ],
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "Level"
      },
      "members": [
        {
          "name": "cluster"
        },
        {
          "name": "indices"
        },
        {
          "name": "shards"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "OpType"
      },
      "members": [
        {
          "name": "index"
        },
        {
          "name": "create"
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "common",
        "name": "Refresh"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "boolean"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "common",
            "name": "RefreshOptions"
          }
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "RefreshOptions"
      },
      "members": [
        {
          "name": "wait_for"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "SearchType"
      },
      "members": [
        {
          "name": "query_then_fetch"
        },
        {
          "name": "dfs_query_then_fetch"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common",
        "name": "ShardFailure"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "ErrorCause"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "Size"
      },
      "members": [
        {
          "name": "Raw"
        },
        {
          "name": "k"
        },
        {
          "name": "m"
        },
        {
          "name": "g"
        },
        {
          "name": "t"
        },
        {
          "name": "p"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "SuggestMode"
      },
      "members": [
        {
          "name": "missing"
        },
        {
          "name": "popular"
        },
        {
          "name": "always"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "ThreadType"
      },
      "members": [
        {
          "name": "cpu"
        },
        {
          "name": "wait"
        },
        {
          "name": "block"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "VersionType"
      },
      "members": [
        {
          "name": "internal"
        },
        {
          "name": "external"
        },
        {
          "name": "external_gte"
        },
        {
          "name": "force"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "WaitForEvents"
      },
      "members": [
        {
          "name": "immediate"
        },
        {
          "name": "urgent"
        },
        {
          "name": "high"
        },
        {
          "name": "normal"
        },
        {
          "name": "low"
        },
        {
          "name": "languid"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common",
        "name": "WaitForStatus"
      },
      "members": [
        {
          "name": "green"
        },
        {
          "name": "yellow"
        },
        {
          "name": "red"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.request",
        "name": "RequestBase"
      },
      "properties": [
        {
          "name": "error_trace",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "filter_path",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "human",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "pretty",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "AcknowledgedResponseBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "DictionaryResponseBase"
      },
      "generics": [
        "TKey",
        "TValue"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "ElasticsearchVersionInfo"
      },
      "properties": [
        {
          "name": "build_date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "build_flavor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "build_hash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "build_snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "build_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "lucene_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "minimum_index_compatibility_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "minimum_wire_compatibility_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "number",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "ErrorResponse"
      },
      "properties": [
        {
          "name": "error",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MainError"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "IndicesResponseBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "ResponseBase"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_abstractions.response",
        "name": "ShardsOperationResponseBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "common_options.date_math",
        "name": "DateMath"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.date_math",
        "name": "DateMathTime"
      },
      "properties": [
        {
          "name": "factor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.date_math",
              "name": "DateMathTimeUnit"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common_options.date_math",
        "name": "DateMathTimeUnit"
      },
      "members": [
        {
          "name": "Second",
          "stringValue": "s"
        },
        {
          "name": "Minute",
          "stringValue": "m"
        },
        {
          "name": "Hour",
          "stringValue": "h"
        },
        {
          "name": "Day",
          "stringValue": "d"
        },
        {
          "name": "Week",
          "stringValue": "w"
        },
        {
          "name": "Month",
          "stringValue": "M"
        },
        {
          "name": "Year",
          "stringValue": "y"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.geo",
        "name": "Distance"
      },
      "properties": [
        {
          "name": "precision",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "unit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "DistanceUnit"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common_options.geo",
        "name": "DistanceUnit"
      },
      "members": [
        {
          "name": "in"
        },
        {
          "name": "ft"
        },
        {
          "name": "yd"
        },
        {
          "name": "mi"
        },
        {
          "name": "nmi"
        },
        {
          "name": "km"
        },
        {
          "name": "m"
        },
        {
          "name": "cm"
        },
        {
          "name": "mm"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common_options.geo",
        "name": "GeoDistanceType"
      },
      "members": [
        {
          "name": "arc"
        },
        {
          "name": "plane"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common_options.geo",
        "name": "GeoShapeRelation"
      },
      "members": [
        {
          "name": "intersects"
        },
        {
          "name": "disjoint"
        },
        {
          "name": "within"
        },
        {
          "name": "contains"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.hit",
        "name": "ClusterStatistics"
      },
      "properties": [
        {
          "name": "skipped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "successful",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.hit",
        "name": "ShardStatistics"
      },
      "properties": [
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "successful",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "ShardFailure"
              }
            }
          },
          "required": false
        },
        {
          "name": "skipped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "common_options.minimum_should_match",
        "name": "MinimumShouldMatch"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "integer"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.range",
        "name": "AggregationRange"
      },
      "properties": [
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.scripting",
        "name": "IndexedScript"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_options.scripting",
            "name": "ScriptBase"
          }
        }
      ],
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.scripting",
        "name": "InlineScript"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_options.scripting",
            "name": "ScriptBase"
          }
        }
      ],
      "properties": [
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "common_options.scripting",
        "name": "Script"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "common_options.scripting",
            "name": "InlineScript"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "common_options.scripting",
            "name": "IndexedScript"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.scripting",
        "name": "ScriptBase"
      },
      "properties": [
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.scripting",
        "name": "ScriptField"
      },
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "common_options.shape",
        "name": "ShapeRelation"
      },
      "members": [
        {
          "name": "intersects"
        },
        {
          "name": "disjoint"
        },
        {
          "name": "within"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "CompletionStats"
      },
      "properties": [
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "DocStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "FielddataStats"
      },
      "properties": [
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "FlushStats"
      },
      "properties": [
        {
          "name": "periodic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "GetStats"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exists_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "exists_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exists_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "missing_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "missing_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "missing_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "IndexingStats"
      },
      "properties": [
        {
          "name": "index_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "delete_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "delete_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "delete_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "delete_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "is_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "noop_update_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "types",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.stats",
                "name": "IndexingStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "MergesStats"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "current_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_auto_throttle",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_auto_throttle_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_stopped_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total__stopped_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_throttled_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_throttled_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "PluginStats"
      },
      "properties": [
        {
          "name": "classname",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "elasticsearch_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "extended_plugins",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "has_native_controller",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "java_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "QueryCacheStats"
      },
      "properties": [
        {
          "name": "cache_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "cache_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "hit_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "miss_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "RecoveryStats"
      },
      "properties": [
        {
          "name": "current_as_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_as_target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "RefreshStats"
      },
      "properties": [
        {
          "name": "external_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "external_total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "RequestCacheStats"
      },
      "properties": [
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "hit_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "miss_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "SearchStats"
      },
      "properties": [
        {
          "name": "fetch_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "fetch_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "fetch_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "open_contexts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "SegmentsStats"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "doc_values_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "file_sizes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_stats",
                "name": "ShardFileSizeInfo"
              }
            }
          },
          "required": true
        },
        {
          "name": "fixed_bit_set_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_writer_max_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_writer_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_unsafe_auto_id_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "norms_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "points_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "stored_fields_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "terms_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "term_vectors_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_map_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "StoreStats"
      },
      "properties": [
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "TranslogStats"
      },
      "properties": [
        {
          "name": "earliest_last_modified_age",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "operations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "uncommitted_operations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "uncommitted_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "uncommitted_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "common_options.stats",
        "name": "WarmerStats"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "common_options.time_unit",
        "name": "Time"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "integer"
          }
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "document",
        "name": "Result"
      },
      "members": [
        {
          "name": "Error"
        },
        {
          "name": "created"
        },
        {
          "name": "updated"
        },
        {
          "name": "deleted"
        },
        {
          "name": "not_found"
        },
        {
          "name": "noop"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple",
        "name": "BulkIndexByScrollFailure"
      },
      "properties": [
        {
          "name": "cause",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MainError"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple",
        "name": "Retries"
      },
      "properties": [
        {
          "name": "bulk",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.bulk",
        "name": "BulkRequest"
      },
      "description": "The operation definition and data (action-data pairs), separated by newlines",
      "annotations": {
        "type_stability": "stable"
      },
      "generics": [
        "TSource"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "Default index for items which don't provide one"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "Default document type for items which don't provide one"
        }
      ],
      "query": [
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The pipeline id to preprocess incoming documents with"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request"
        },
        {
          "name": "_source_excludes",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                }
              }
            ]
          },
          "required": false,
          "description": "Default list of fields to exclude from the returned _source field, can be overridden on each sub-request"
        },
        {
          "name": "_source_includes",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                }
              }
            ]
          },
          "required": false,
          "description": "Default list of fields to extract and return from the _source field, can be overridden on each sub-request"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "type_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "require_alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Sets require_alias for all incoming documents. Defaults to unset (false)"
        }
      ],
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "Array"
          },
          "generics": [
            {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "document.multiple.bulk.bulk_operation",
                    "name": "BulkOperationContainer"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "generic",
                    "name": "TSource"
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk",
        "name": "BulkResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "errors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "items",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.bulk.bulk_response_item",
                "name": "BulkResponseItemContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "ingest_took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkCreateOperation"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_operation",
            "name": "BulkOperation"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkDeleteOperation"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_operation",
            "name": "BulkOperation"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkIndexOperation"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_operation",
            "name": "BulkOperation"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkOperation"
      },
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "retry_on_conflict",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkOperationContainer"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_operation",
              "name": "BulkIndexOperation"
            }
          },
          "required": false
        },
        {
          "name": "create",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_operation",
              "name": "BulkCreateOperation"
            }
          },
          "required": false
        },
        {
          "name": "update",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_operation",
              "name": "BulkUpdateOperation"
            }
          },
          "required": false
        },
        {
          "name": "delete",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_operation",
              "name": "BulkDeleteOperation"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_operation",
        "name": "BulkUpdateOperation"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_operation",
            "name": "BulkOperation"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkCreateResponseItem"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_response_item",
            "name": "BulkResponseItemBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkDeleteResponseItem"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_response_item",
            "name": "BulkResponseItemBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkIndexResponseItem"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_response_item",
            "name": "BulkResponseItemBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkResponseItemBase"
      },
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "null"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "error",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "ErrorCause"
            }
          },
          "required": false
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": false
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "forced_refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "get",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.explain",
              "name": "InlineGet"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "LazyDocument"
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkResponseItemContainer"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_response_item",
              "name": "BulkIndexResponseItem"
            }
          },
          "required": false
        },
        {
          "name": "create",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_response_item",
              "name": "BulkCreateResponseItem"
            }
          },
          "required": false
        },
        {
          "name": "update",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_response_item",
              "name": "BulkUpdateResponseItem"
            }
          },
          "required": false
        },
        {
          "name": "delete",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.bulk.bulk_response_item",
              "name": "BulkDeleteResponseItem"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.bulk.bulk_response_item",
        "name": "BulkUpdateResponseItem"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.multiple.bulk.bulk_response_item",
            "name": "BulkResponseItemBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.delete_by_query",
        "name": "DeleteByQueryRequest"
      },
      "description": "The search definition using the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer to use for the query string"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        {
          "name": "conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Conflicts"
            }
          },
          "required": false,
          "description": "What to do when the delete by query hits version conflicts?"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The field to use as default where no field prefix is given in the query string"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Starting offset (default: 0)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the effected indexes be refreshed?"
        },
        {
          "name": "request_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify if request cache should be used for this request or not, defaults to index level setting"
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle for this request in sub-requests per second. -1 means no throttle."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "A comma-separated list of specific routing values"
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify how long a consistent view of the index should be maintained for scrolled search"
        },
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Size on the scroll request powering the delete by query"
        },
        {
          "name": "search_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit timeout for each search request. Defaults to no timeout."
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Deprecated, please use `max_docs` instead"
        },
        {
          "name": "slices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        },
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of <field>:<direction> pairs"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Specific 'tag' of the request for logging and statistical purposes"
        },
        {
          "name": "terminate_after",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early."
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Time each individual bulk request should wait for shards that are unavailable."
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to return document version as part of a hit"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the request should block until the delete by query is complete."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "max_docs",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "slice",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.scroll.scroll",
                "name": "SlicedScroll"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.delete_by_query",
        "name": "DeleteByQueryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "batches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple",
                "name": "BulkIndexByScrollFailure"
              }
            }
          },
          "required": true
        },
        {
          "name": "noops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple",
              "name": "Retries"
            }
          },
          "required": true
        },
        {
          "name": "slice_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": true
        },
        {
          "name": "throttled_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttled_until_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.delete_by_query_rethrottle",
        "name": "DeleteByQueryRethrottleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The task id to rethrottle"
        }
      ],
      "query": [
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle to set on this request in floating sub-requests per second. -1 means set no throttle."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.delete_by_query_rethrottle",
        "name": "DeleteByQueryRethrottleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "cluster.task_management.list_tasks",
            "name": "ListTasksResponse"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.multi_get.request",
        "name": "MultiGetOperation"
      },
      "properties": [
        {
          "name": "can_be_flattened",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.source_filtering",
                  "name": "SourceFilter"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.multi_get.request",
        "name": "MultiGetRequest"
      },
      "description": "Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to perform the operation in realtime or search mode"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Refresh the shard containing the document before performing the operation"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of stored fields to return in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "document.multiple.multi_get.request",
                  "name": "MultiGetOperation"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.multi_get.response",
        "name": "MultiGetHit"
      },
      "generics": [
        "TDocument"
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": true
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.multi_get.response",
        "name": "MultiGetResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "docs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.multi_get.response",
                "name": "MultiGetHit"
              },
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "generic",
                    "name": "TDocument"
                  }
                }
              ]
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.multi_term_vectors",
        "name": "MultiTermVectorOperation"
      },
      "properties": [
        {
          "name": "doc",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "object"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "field_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.single.term_vectors",
              "name": "TermVectorFilter"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "offsets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "payloads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "positions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": true
        },
        {
          "name": "term_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.multi_term_vectors",
        "name": "MultiTermVectorsRequest"
      },
      "description": "Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "The index in which the document resides."
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document."
        }
      ],
      "query": [
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "field_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "offsets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "payloads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "positions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if requests are real-time as opposed to near-real-time (default: true)."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "term_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "document.multiple.multi_term_vectors",
                  "name": "MultiTermVectorOperation"
                }
              }
            },
            "required": false
          },
          {
            "name": "ids",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Id"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.multi_term_vectors",
        "name": "MultiTermVectorsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "docs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "TermVectorsResult"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexDestination"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "op_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "OpType"
            }
          },
          "required": false
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.reindex",
              "name": "ReindexRouting"
            }
          },
          "required": false
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexRequest"
      },
      "description": "The search definition using the Query DSL and the prototype for the index request.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the affected indexes be refreshed?"
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle to set on this request in sub-requests per second. -1 means no throttle."
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Control how long to keep the search context alive"
        },
        {
          "name": "slices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Time each individual bulk request should wait for shards that are unavailable."
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the request should block until the reindex is complete."
        },
        {
          "name": "require_alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "conflicts",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "Conflicts"
              }
            },
            "required": false
          },
          {
            "name": "dest",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.reindex",
                "name": "ReindexDestination"
              }
            },
            "required": false
          },
          {
            "name": "max_docs",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "script",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "Script"
              }
            },
            "required": false
          },
          {
            "name": "size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.reindex",
                "name": "ReindexSource"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "batches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple",
                "name": "BulkIndexByScrollFailure"
              }
            }
          },
          "required": true
        },
        {
          "name": "noops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple",
              "name": "Retries"
            }
          },
          "required": true
        },
        {
          "name": "slice_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "updated",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexRouting"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexSource"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "remote",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.reindex",
              "name": "RemoteSource"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "slice",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.scroll.scroll",
              "name": "SlicedScroll"
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.sort",
                "name": "Sort"
              }
            }
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex",
        "name": "RemoteSource"
      },
      "properties": [
        {
          "name": "connect_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Uri"
            }
          },
          "required": true
        },
        {
          "name": "password",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "socket_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexNode"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "tasks",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "TaskId"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.reindex_rethrottle",
                "name": "ReindexTask"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexRethrottleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The task id to rethrottle"
        }
      ],
      "query": [
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle to set on this request in floating sub-requests per second. -1 means set no throttle."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexRethrottleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple.reindex_rethrottle",
                "name": "ReindexNode"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexStatus"
      },
      "properties": [
        {
          "name": "batches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "noops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple",
              "name": "Retries"
            }
          },
          "required": true
        },
        {
          "name": "throttled_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttled_until_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "updated",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexTask"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "cancellable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "running_time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple.reindex_rethrottle",
              "name": "ReindexStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.update_by_query",
        "name": "UpdateByQueryRequest"
      },
      "description": "The search definition using the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer to use for the query string"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        {
          "name": "conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Conflicts"
            }
          },
          "required": false,
          "description": "What to do when the update by query hits version conflicts?"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The field to use as default where no field prefix is given in the query string"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Starting offset (default: 0)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Ingest pipeline to set on index requests made by this action. (default: none)"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the affected indexes be refreshed?"
        },
        {
          "name": "request_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify if request cache should be used for this request or not, defaults to index level setting"
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle to set on this request in sub-requests per second. -1 means no throttle."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "A comma-separated list of specific routing values"
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify how long a consistent view of the index should be maintained for scrolled search"
        },
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Size on the scroll request powering the update by query"
        },
        {
          "name": "search_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit timeout for each search request. Defaults to no timeout."
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Deprecated, please use `max_docs` instead"
        },
        {
          "name": "slices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of slices this task should be divided into. Defaults to 1, meaning the task isn't sliced into subtasks. Can be set to `auto`."
        },
        {
          "name": "sort",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of <field>:<direction> pairs"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Specific 'tag' of the request for logging and statistical purposes"
        },
        {
          "name": "terminate_after",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early."
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Time each individual bulk request should wait for shards that are unavailable."
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to return document version as part of a hit"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the document increment the version number (internal) on hit or not (reindex)"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the request should block until the update by query operation is complete."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "max_docs",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "script",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "Script"
              }
            },
            "required": false
          },
          {
            "name": "slice",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.scroll.scroll",
                "name": "SlicedScroll"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.multiple.update_by_query",
        "name": "UpdateByQueryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "batches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.multiple",
                "name": "BulkIndexByScrollFailure"
              }
            }
          },
          "required": true
        },
        {
          "name": "noops",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.multiple",
              "name": "Retries"
            }
          },
          "required": true
        },
        {
          "name": "task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "updated",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_conflicts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.multiple.update_by_query_rethrottle",
        "name": "UpdateByQueryRethrottleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The task id to rethrottle"
        }
      ],
      "query": [
        {
          "name": "requests_per_second",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The throttle to set on this request in floating sub-requests per second. -1 means set no throttle."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single",
        "name": "WriteResponseBase"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document",
              "name": "Result"
            }
          },
          "required": true
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "forced_refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.create",
        "name": "CreateRequest"
      },
      "description": "The document",
      "annotations": {
        "type_stability": "stable"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The pipeline id to preprocess incoming documents with"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        }
      ],
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "namespace": "generic",
            "name": "TDocument"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.create",
        "name": "CreateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.single",
            "name": "WriteResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.delete",
        "name": "DeleteRequest"
      },
      "annotations": {
        "type_stability": "stable"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "if_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the delete operation if the last operation that has changed the document has the specified primary term"
        },
        {
          "name": "if_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the delete operation if the last operation that has changed the document has the specified sequence number"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.delete",
        "name": "DeleteResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.single",
            "name": "WriteResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.exists",
        "name": "DocumentExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document (use `_all` to fetch the first document matching the ID across all types)"
        }
      ],
      "query": [
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to perform the operation in realtime or search mode"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Refresh the shard containing the document before performing the operation"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of stored fields to return in the response"
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.get",
        "name": "GetRequest"
      },
      "annotations": {
        "type_stability": "stable"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document (use `_all` to fetch the first document matching the ID across all types)"
        }
      ],
      "query": [
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to perform the operation in realtime or search mode"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Refresh the shard containing the document before performing the operation"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "_source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A list of fields to exclude from the returned _source field"
        },
        {
          "name": "_source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A list of fields to extract and return from the _source field"
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of stored fields to return in the response"
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        },
        {
          "name": "_source",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  },
                  {
                    "kind": "array_of",
                    "value": {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "string"
                      }
                    }
                  }
                ]
              }
            ]
          },
          "required": false,
          "description": "True or false to return the _source field or not, or a list of fields to return"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.get",
        "name": "GetResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "LazyDocument"
              }
            }
          },
          "required": false
        },
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.index",
        "name": "IndexRequest"
      },
      "description": "The document",
      "annotations": {
        "type_stability": "stable"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "Document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "if_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the index operation if the last operation that has changed the document has the specified primary term"
        },
        {
          "name": "if_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the index operation if the last operation that has changed the document has the specified sequence number"
        },
        {
          "name": "op_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "OpType"
            }
          },
          "required": false,
          "description": "Explicit operation type. Defaults to `index` for requests with an explicit document ID, and to `create`for requests without an explicit document ID"
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The pipeline id to preprocess incoming documents with"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "require_alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "When true, requires destination to be an alias. Default is false"
        }
      ],
      "body": {
        "kind": "value",
        "value": {
          "kind": "instance_of",
          "type": {
            "namespace": "generic",
            "name": "TDocument"
          }
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.index",
        "name": "IndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "document.single",
            "name": "WriteResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.source",
        "name": "SourceRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document; deprecated and optional starting with 7.0"
        }
      ],
      "query": [
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to perform the operation in realtime or search mode"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Refresh the shard containing the document before performing the operation"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.source",
        "name": "SourceResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "body",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.source_exists",
        "name": "SourceExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document; deprecated and optional starting with 7.0"
        }
      ],
      "query": [
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to perform the operation in realtime or search mode"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Refresh the shard containing the document before performing the operation"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "FieldStatistics"
      },
      "properties": [
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "sum_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "sum_ttf",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVector"
      },
      "properties": [
        {
          "name": "field_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document.single.term_vectors",
              "name": "FieldStatistics"
            }
          },
          "required": true
        },
        {
          "name": "terms",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "TermVectorTerm"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorFilter"
      },
      "properties": [
        {
          "name": "max_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_num_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "min_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "min_term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "min_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorsRequest"
      },
      "description": "Define parameters and or supply a document to get termvectors for. See documentation.",
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The index in which the document resides."
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The id of the document, when not specified a doc param should be supplied."
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document."
        }
      ],
      "query": [
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields to return."
        },
        {
          "name": "field_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned."
        },
        {
          "name": "offsets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term offsets should be returned."
        },
        {
          "name": "payloads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term payloads should be returned."
        },
        {
          "name": "positions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if term positions should be returned."
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)."
        },
        {
          "name": "realtime",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if request is real-time as opposed to near-real-time (default: true)."
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value."
        },
        {
          "name": "term_statistics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specifies if total term frequency and document frequency should be returned."
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false,
          "description": "Specific version type"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "doc",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TDocument"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "SourceFormatter`1"
            }
          },
          {
            "name": "filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "TermVectorFilter"
              }
            },
            "required": false
          },
          {
            "name": "per_field_analyzer",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "term_vectors",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "TermVector"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "ResolvableReadOnlyDictionaryFormatter`2"
          }
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorsResult"
      },
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "term_vectors",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "TermVector"
              }
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorTerm"
      },
      "properties": [
        {
          "name": "doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "tokens",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "document.single.term_vectors",
                "name": "Token"
              }
            }
          },
          "required": true
        },
        {
          "name": "ttf",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.term_vectors",
        "name": "Token"
      },
      "properties": [
        {
          "name": "end_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "payload",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "position",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "start_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "document.single.update",
        "name": "UpdateRequest"
      },
      "description": "The request definition requires either `script` or partial `doc`",
      "annotations": {
        "type_stability": "stable"
      },
      "generics": [
        "TDocument",
        "TPartialDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "if_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the update operation if the last operation that has changed the document has the specified primary term"
        },
        {
          "name": "if_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only perform the update operation if the last operation that has changed the document has the specified sequence number"
        },
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The script language (default: painless)"
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes."
        },
        {
          "name": "require_alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "When true, requires destination is an alias. Default is false"
        },
        {
          "name": "retry_on_conflict",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Specify how many times should the operation be retried when a conflict occurs (default: 0)"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        },
        {
          "name": "_source",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  },
                  {
                    "kind": "array_of",
                    "value": {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "string"
                      }
                    }
                  }
                ]
              }
            ]
          },
          "required": false,
          "description": "True or false to return the _source field or not, or a list of fields to return"
        },
        {
          "name": "_source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A list of fields to exclude from the returned _source field"
        },
        {
          "name": "_source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A list of fields to extract and return from the _source field"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "detect_noop",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "doc",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TPartialDocument"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "SourceFormatter`1"
            }
          },
          {
            "name": "doc_as_upsert",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "script",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "Script"
              }
            },
            "required": false
          },
          {
            "name": "scripted_upsert",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "_source",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.source_filtering",
                    "name": "SourceFilter"
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "upsert",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TDocument"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "SourceFormatter`1"
            }
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "document.single.update",
        "name": "UpdateResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "document.single",
            "name": "WriteResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "get",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.explain",
              "name": "InlineGet"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "generic",
                  "name": "TDocument"
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "index_modules.index_settings",
        "name": "IndexState"
      },
      "properties": [
        {
          "name": "aliases",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.alias_management",
                "name": "Alias"
              }
            }
          },
          "required": true
        },
        {
          "name": "mappings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping",
              "name": "TypeMapping"
            }
          },
          "required": true
        },
        {
          "name": "settings",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management",
        "name": "Alias"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "index_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        },
        {
          "name": "is_hidden",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "is_write_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        },
        {
          "name": "search_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management",
        "name": "AliasDefinition"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "index_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "is_write_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "search_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.alias_management.alias",
        "name": "BulkAliasRequest"
      },
      "description": "The definition of `actions` to perform",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Request timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "actions",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management.alias.actions",
                  "name": "AliasAction"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.alias",
        "name": "BulkAliasResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.alias_management.alias_exists",
        "name": "AliasExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "A comma-separated list of alias names to return"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to filter aliases"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.alias.actions",
        "name": "AliasAction"
      },
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.alias_management.delete_alias",
        "name": "DeleteAliasRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names (supports wildcards); use `_all` for all indices"
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices."
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit timestamp for the document"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.delete_alias",
        "name": "DeleteAliasResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.alias_management.get_alias",
        "name": "GetAliasRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of alias names to return"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to filter aliases"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.get_alias",
        "name": "GetAliasResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.alias_management.get_alias",
                "name": "IndexAliases"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.get_alias",
        "name": "IndexAliases"
      },
      "properties": [
        {
          "name": "aliases",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.alias_management",
                "name": "AliasDefinition"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.alias_management.put_alias",
        "name": "PutAliasRequest"
      },
      "description": "The settings for the alias, such as `routing` or `filter`",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices."
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the alias to be created or updated"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit timestamp for the document"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "index_routing",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Routing"
              }
            },
            "required": false
          },
          {
            "name": "is_write_index",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "routing",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Routing"
              }
            },
            "required": false
          },
          {
            "name": "search_routing",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Routing"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.alias_management.put_alias",
        "name": "PutAliasResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "AnalyzeDetail"
      },
      "properties": [
        {
          "name": "charfilters",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.analyze",
                "name": "CharFilterDetail"
              }
            }
          },
          "required": true
        },
        {
          "name": "custom_analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "tokenfilters",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.analyze",
                "name": "TokenDetail"
              }
            }
          },
          "required": true
        },
        {
          "name": "tokenizer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.analyze",
              "name": "TokenDetail"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.analyze",
        "name": "AnalyzeRequest"
      },
      "description": "Define analyzer/tokenizer parameters and the text on which the analysis should be performed",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "The name of the index to scope the operation"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "analyzer",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "attributes",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "char_filter",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  },
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "analysis.char_filters",
                      "name": "CharFilterBase"
                    }
                  }
                ]
              }
            },
            "required": false
          },
          {
            "name": "explain",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "filter",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  },
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "analysis.token_filters",
                      "name": "TokenFilterBase"
                    }
                  }
                ]
              }
            },
            "required": false
          },
          {
            "name": "normalizer",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "text",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "tokenizer",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "analysis.tokenizers",
                    "name": "TokenizerBase"
                  }
                }
              ]
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "AnalyzeResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "detail",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.analyze",
              "name": "AnalyzeDetail"
            }
          },
          "required": true
        },
        {
          "name": "tokens",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.analyze",
                "name": "AnalyzeToken"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "AnalyzeToken"
      },
      "properties": [
        {
          "name": "end_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "position",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "position_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "token",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "CharFilterDetail"
      },
      "properties": [
        {
          "name": "filtered_text",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "ExplainAnalyzeToken"
      },
      "properties": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "end_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "keyword",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "position",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "positionLength",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "termFrequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "token",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.analyze",
        "name": "TokenDetail"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "tokens",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.analyze",
                "name": "ExplainAnalyzeToken"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.clone_index",
        "name": "CloneIndexRequest"
      },
      "description": "The configuration for the target index (`settings` and `aliases`)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the source index to clone"
        },
        {
          "name": "target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the target index to clone into"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Set the number of active shards to wait for on the cloned index before the operation returns."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.clone_index",
        "name": "CloneIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.create_index",
        "name": "CreateIndexRequest"
      },
      "description": "The configuration for the index (`settings` and `mappings`)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        }
      ],
      "query": [
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be expected in the body of the mappings."
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Set the number of active shards to wait for before the operation returns."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "mappings",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping",
                "name": "TypeMapping"
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.create_index",
        "name": "CreateIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.delete_index",
        "name": "DeleteIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore unavailable indexes (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.delete_index",
        "name": "DeleteIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "IndicesResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.freeze_index",
        "name": "FreezeIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index to freeze"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of active shards to wait for before the operation returns."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.freeze_index",
        "name": "FreezeIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.get_index",
        "name": "GetIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore unavailable indexes (default: false)"
        },
        {
          "name": "include_defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to return all default setting for each of the indices."
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to add the type name to the response (default: false)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.get_index",
        "name": "GetIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "index_modules.index_settings",
                "name": "IndexState"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "exists",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.indices_exists",
        "name": "IndexExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore if a wildcard expression resolves to no concrete indices (default: false)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether wildcard expressions should get expanded to open or closed indices (default: open)"
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore unavailable indexes (default: false)"
        },
        {
          "name": "include_defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to return all default setting for each of the indices."
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma separated list of indices to close"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of active shards to wait for before the operation returns."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.index_management.open_close_index.close_index",
                "name": "CloseIndexResult"
              }
            }
          },
          "required": true
        },
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseIndexResult"
      },
      "properties": [
        {
          "name": "closed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.index_management.open_close_index.close_index",
                "name": "CloseShardResult"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseShardResult"
      },
      "properties": [
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "ShardFailure"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.open_close_index.open_index",
        "name": "OpenIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma separated list of indices to open"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of active shards to wait for before the operation returns."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.open_close_index.open_index",
        "name": "OpenIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.rollover_index",
        "name": "RolloverConditions"
      },
      "properties": [
        {
          "name": "max_age",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.rollover_index",
        "name": "RolloverIndexRequest"
      },
      "description": "The conditions that needs to be met for executing rollover",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.alias_management",
              "name": "Alias"
            }
          },
          "required": true,
          "description": "The name of the alias to rollover"
        },
        {
          "name": "new_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "The name of the rollover index"
        }
      ],
      "query": [
        {
          "name": "dry_run",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false"
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be included in the body of the mappings."
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Set the number of active shards to wait for on the newly created rollover index before the operation returns."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "conditions",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.index_management.rollover_index",
                "name": "RolloverConditions"
              }
            },
            "required": false
          },
          {
            "name": "mappings",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping",
                "name": "TypeMapping"
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.rollover_index",
        "name": "RolloverIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "conditions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            }
          },
          "required": true
        },
        {
          "name": "dry_run",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "new_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "old_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rolled_over",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.shrink_index",
        "name": "ShrinkIndexRequest"
      },
      "description": "The configuration for the target index (`settings` and `aliases`)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the source index to shrink"
        },
        {
          "name": "target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the target index to shrink into"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Set the number of active shards to wait for on the shrunken index before the operation returns."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.shrink_index",
        "name": "ShrinkIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.split_index",
        "name": "SplitIndexRequest"
      },
      "description": "The configuration for the target index (`settings` and `aliases`)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the source index to split"
        },
        {
          "name": "target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the target index to split into"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Set the number of active shards to wait for on the shrunken index before the operation returns."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.split_index",
        "name": "SplitIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.types_exists",
        "name": "TypeExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names; use `_all` to check the types across all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": true,
          "description": "A comma-separated list of document types to check"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_management.unfreeze_index",
        "name": "UnfreezeIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index to unfreeze"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of active shards to wait for before the operation returns."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_management.unfreeze_index",
        "name": "UnfreezeIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "shards_acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.get_index_settings",
        "name": "GetIndexSettingsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "The name of the settings that should be included"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "include_defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to return all default setting for each of the indices."
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.get_index_settings",
        "name": "GetIndexSettingsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "index_modules.index_settings",
                "name": "IndexState"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.index_templates.delete_index_template",
        "name": "DeleteIndexTemplateRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the template"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.index_templates.delete_index_template",
        "name": "DeleteIndexTemplateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.index_templates.get_index_template",
        "name": "GetIndexTemplateRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "The comma separated names of the index templates"
        }
      ],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be returned in the body of the mappings."
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.index_templates.get_index_template",
        "name": "GetIndexTemplateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.index_settings.index_templates.get_index_template",
                "name": "TemplateMapping"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.index_templates.get_index_template",
        "name": "TemplateMapping"
      },
      "properties": [
        {
          "name": "aliases",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.alias_management",
                "name": "Alias"
              }
            }
          },
          "required": true
        },
        {
          "name": "index_patterns",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "mappings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping",
              "name": "TypeMapping"
            }
          },
          "required": true
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "settings",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.index_templates.index_template_exists",
        "name": "IndexTemplateExistsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "The comma separated names of the index templates"
        }
      ],
      "query": [
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.index_templates.put_index_template",
        "name": "PutIndexTemplateRequest"
      },
      "description": "The template definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the template"
        }
      ],
      "query": [
        {
          "name": "create",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether the index template should only be added if new or can also replace an existing one"
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be returned in the body of the mappings."
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aliases",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.alias_management",
                  "name": "Alias"
                }
              }
            },
            "required": false
          },
          {
            "name": "index_patterns",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "mappings",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping",
                "name": "TypeMapping"
              }
            },
            "required": false
          },
          {
            "name": "order",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "version",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.index_templates.put_index_template",
        "name": "PutIndexTemplateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.index_settings.update_index_settings",
        "name": "UpdateIndexSettingsRequest"
      },
      "description": "The index settings to be updated",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "flat_settings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return settings in flat format (default: false)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "preserve_existing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "index",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.index_settings.update_index_settings",
        "name": "UpdateIndexSettingsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.mapping_management.get_field_mapping",
        "name": "GetFieldMappingRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fields"
            }
          },
          "required": true,
          "description": "A comma-separated list of fields"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "include_defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether the default mapping values should be returned as well"
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be returned in the body of the mappings."
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.mapping_management.get_field_mapping",
        "name": "GetFieldMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.mapping_management.get_field_mapping",
                "name": "TypeFieldMappings"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.mapping_management.get_field_mapping",
        "name": "TypeFieldMappings"
      },
      "properties": [
        {
          "name": "mappings",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields",
                "name": "FieldMapping"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "ResolvableReadOnlyDictionaryFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.mapping_management.get_mapping",
        "name": "GetMappingRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to add the type name to the response (default: false)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.mapping_management.get_mapping",
        "name": "GetMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.mapping_management.get_mapping",
                "name": "IndexMappings"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.mapping_management.get_mapping",
        "name": "IndexMappings"
      },
      "properties": [
        {
          "name": "item",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping",
              "name": "TypeMapping"
            }
          },
          "required": true
        },
        {
          "name": "mappings",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping",
              "name": "TypeMapping"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.mapping_management.put_mapping",
        "name": "PutMappingRequest"
      },
      "description": "The mapping definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The name of the document type"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "include_type_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a type should be expected in the body of the mappings."
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "all_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.all",
                "name": "AllField"
              }
            },
            "required": false
          },
          {
            "name": "date_detection",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "dynamic",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "mapping",
                    "name": "DynamicMapping"
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "dynamic_date_formats",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "dynamic_templates",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "mapping.dynamic_template",
                  "name": "DynamicTemplate"
                }
              }
            },
            "required": false
          },
          {
            "name": "field_names_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.field_names",
                "name": "FieldNamesField"
              }
            },
            "required": false
          },
          {
            "name": "index_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.index",
                "name": "IndexField"
              }
            },
            "required": false
          },
          {
            "name": "meta",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "numeric_detection",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "properties",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "PropertyName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "mapping.types",
                  "name": "PropertyBase"
                }
              }
            },
            "required": false
          },
          {
            "name": "routing_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.routing",
                "name": "RoutingField"
              }
            },
            "required": false
          },
          {
            "name": "size_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.size",
                "name": "SizeField"
              }
            },
            "required": false
          },
          {
            "name": "source_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.meta_fields.source",
                "name": "SourceField"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.mapping_management.put_mapping",
        "name": "PutMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "IndicesResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryBytes"
      },
      "properties": [
        {
          "name": "percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "reused",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryFileDetails"
      },
      "properties": [
        {
          "name": "length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryFiles"
      },
      "properties": [
        {
          "name": "details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_recovery",
                "name": "RecoveryFileDetails"
              }
            }
          },
          "required": true
        },
        {
          "name": "percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "reused",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryIndexStatus"
      },
      "properties": [
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryBytes"
            }
          },
          "required": true
        },
        {
          "name": "files",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryFiles"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryBytes"
            }
          },
          "required": true
        },
        {
          "name": "source_throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "target_throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryOrigin"
      },
      "properties": [
        {
          "name": "hostname",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStartStatus"
      },
      "properties": [
        {
          "name": "check_index_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStatus"
      },
      "properties": [
        {
          "name": "shards",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_recovery",
                "name": "ShardRecovery"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "active_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Display only those recoveries that are currently on-going"
        },
        {
          "name": "detailed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to display detailed information about shard recovery"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_recovery",
                "name": "RecoveryStatus"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryTranslogStatus"
      },
      "properties": [
        {
          "name": "percent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "recovered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_on_start",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryVerifyIndex"
      },
      "properties": [
        {
          "name": "check_index_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "ShardRecovery"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryIndexStatus"
            }
          },
          "required": true
        },
        {
          "name": "primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryOrigin"
            }
          },
          "required": true
        },
        {
          "name": "stage",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "start",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryStartStatus"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeEpochMillisecondsFormatter"
          }
        },
        {
          "name": "stop_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeEpochMillisecondsFormatter"
          }
        },
        {
          "name": "target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryOrigin"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "translog",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryTranslogStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "verify_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_recovery",
              "name": "RecoveryVerifyIndex"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "IndexSegment"
      },
      "properties": [
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_segments",
                "name": "ShardsSegment"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "Segment"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "committed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "compound",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "deleted_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "generation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "num_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "SegmentsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "verbose",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Includes detailed memory usage by Lucene."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "SegmentsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_segments",
                "name": "IndexSegment"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "ShardSegmentRouting"
      },
      "properties": [
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "ShardsSegment"
      },
      "properties": [
        {
          "name": "num_committed_segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_segments",
              "name": "ShardSegmentRouting"
            }
          },
          "required": true
        },
        {
          "name": "num_search_segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "segments",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_segments",
                "name": "Segment"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "IndicesShardStores"
      },
      "properties": [
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_shard_stores",
                "name": "ShardStoreWrapper"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "IndicesShardStoresRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "status",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of statuses used to filter on shards to get store information for"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "IndicesShardStoresResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_shard_stores",
                "name": "IndicesShardStores"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "ShardStore"
      },
      "properties": [
        {
          "name": "allocation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_shard_stores",
              "name": "ShardStoreAllocation"
            }
          },
          "required": true
        },
        {
          "name": "allocation_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "legacy_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "store_exception",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_shard_stores",
              "name": "ShardStoreException"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "ShardStoreAllocation"
      },
      "members": [
        {
          "name": "primary"
        },
        {
          "name": "replica"
        },
        {
          "name": "unused"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "ShardStoreException"
      },
      "properties": [
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "ShardStoreWrapper"
      },
      "properties": [
        {
          "name": "stores",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_shard_stores",
                "name": "ShardStore"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndexStats"
      },
      "properties": [
        {
          "name": "completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "CompletionStats"
            }
          },
          "required": true
        },
        {
          "name": "docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "DocStats"
            }
          },
          "required": true
        },
        {
          "name": "fielddata",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "FielddataStats"
            }
          },
          "required": true
        },
        {
          "name": "flush",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "FlushStats"
            }
          },
          "required": true
        },
        {
          "name": "get",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "GetStats"
            }
          },
          "required": true
        },
        {
          "name": "indexing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "IndexingStats"
            }
          },
          "required": true
        },
        {
          "name": "merges",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "MergesStats"
            }
          },
          "required": true
        },
        {
          "name": "query_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "QueryCacheStats"
            }
          },
          "required": true
        },
        {
          "name": "recovery",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "RecoveryStats"
            }
          },
          "required": true
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "RefreshStats"
            }
          },
          "required": true
        },
        {
          "name": "request_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "RequestCacheStats"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "SearchStats"
            }
          },
          "required": true
        },
        {
          "name": "segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "SegmentsStats"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "StoreStats"
            }
          },
          "required": true
        },
        {
          "name": "translog",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "TranslogStats"
            }
          },
          "required": true
        },
        {
          "name": "warmer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.stats",
              "name": "WarmerStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndicesStats"
      },
      "properties": [
        {
          "name": "primaries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "IndexStats"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "indices.monitoring.indices_stats",
                  "name": "ShardStats"
                }
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "IndexStats"
            }
          },
          "required": true
        },
        {
          "name": "uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndicesStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Limit the information returned the specific metrics."
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "completion_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "fielddata_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"
        },
        {
          "name": "forbid_closed_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If set to false stats will also collected from closed indices if explicitly specified or if expand_wildcards expands to closed indices"
        },
        {
          "name": "groups",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of search groups for `search` index metric"
        },
        {
          "name": "include_segment_file_sizes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)"
        },
        {
          "name": "include_unloaded_segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If set to true segment stats will include stats for segments that are not currently loaded into memory"
        },
        {
          "name": "level",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Level"
            }
          },
          "required": false,
          "description": "Return stats aggregated at cluster, index or shard level"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndicesStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_stats",
                "name": "IndicesStats"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        },
        {
          "name": "_all",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "IndicesStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardCommit"
      },
      "properties": [
        {
          "name": "generation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "num_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "user_data",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardCompletion"
      },
      "properties": [
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardDocs"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardFielddata"
      },
      "properties": [
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardFileSizeInfo"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardFlush"
      },
      "properties": [
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardGet"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exists_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exists_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "missing_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "missing_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardIndexing"
      },
      "properties": [
        {
          "name": "delete_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "delete_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "delete_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "is_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "noop_update_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardMerges"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_auto_throttle_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_stopped_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_throttled_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardPath"
      },
      "properties": [
        {
          "name": "data_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "is_custom_data_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "state_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardQueryCache"
      },
      "properties": [
        {
          "name": "cache_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "cache_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "hit_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "miss_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardRefresh"
      },
      "properties": [
        {
          "name": "listeners",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardRequestCache"
      },
      "properties": [
        {
          "name": "evictions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "hit_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "miss_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardRouting"
      },
      "properties": [
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "relocating_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardRoutingState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardRoutingState"
      },
      "members": [
        {
          "name": "UNASSIGNED"
        },
        {
          "name": "INITIALIZING"
        },
        {
          "name": "STARTED"
        },
        {
          "name": "RELOCATING"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardSearch"
      },
      "properties": [
        {
          "name": "fetch_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "fetch_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "fetch_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "open_contexts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "query_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scroll_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "suggest_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardSegments"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "doc_values_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "file_sizes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.monitoring.indices_stats",
                "name": "ShardFileSizeInfo"
              }
            }
          },
          "required": true
        },
        {
          "name": "fixed_bit_set_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_writer_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_unsafe_auto_id_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "norms_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "points_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "stored_fields_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "terms_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "term_vectors_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "version_map_memory_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardSequenceNumber"
      },
      "properties": [
        {
          "name": "global_checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "local_checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardStats"
      },
      "properties": [
        {
          "name": "commit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardCommit"
            }
          },
          "required": true
        },
        {
          "name": "completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardCompletion"
            }
          },
          "required": true
        },
        {
          "name": "docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardDocs"
            }
          },
          "required": true
        },
        {
          "name": "fielddata",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardFielddata"
            }
          },
          "required": true
        },
        {
          "name": "flush",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardFlush"
            }
          },
          "required": true
        },
        {
          "name": "get",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardGet"
            }
          },
          "required": true
        },
        {
          "name": "indexing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardIndexing"
            }
          },
          "required": true
        },
        {
          "name": "merges",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardMerges"
            }
          },
          "required": true
        },
        {
          "name": "shard_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardPath"
            }
          },
          "required": true
        },
        {
          "name": "query_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardQueryCache"
            }
          },
          "required": true
        },
        {
          "name": "recovery",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardStatsRecovery"
            }
          },
          "required": true
        },
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardRefresh"
            }
          },
          "required": true
        },
        {
          "name": "request_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardRequestCache"
            }
          },
          "required": true
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardRouting"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardSearch"
            }
          },
          "required": true
        },
        {
          "name": "segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardSegments"
            }
          },
          "required": true
        },
        {
          "name": "seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardSequenceNumber"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardStatsStore"
            }
          },
          "required": true
        },
        {
          "name": "translog",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardTransactionLog"
            }
          },
          "required": true
        },
        {
          "name": "warmer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "indices.monitoring.indices_stats",
              "name": "ShardWarmer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardStatsRecovery"
      },
      "properties": [
        {
          "name": "current_as_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "current_as_target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "throttle_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardStatsStore"
      },
      "properties": [
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardTransactionLog"
      },
      "properties": [
        {
          "name": "operations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "uncommitted_operations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "uncommitted_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "ShardWarmer"
      },
      "properties": [
        {
          "name": "current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.reload_search_analyzers",
        "name": "ReloadDetails"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reloaded_analyzers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "reloaded_node_ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.reload_search_analyzers",
        "name": "ReloadSearchAnalyzersRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names to reload analyzers for"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.reload_search_analyzers",
        "name": "ReloadSearchAnalyzersResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "reload_details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.reload_search_analyzers",
                "name": "ReloadDetails"
              }
            }
          },
          "required": true
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.status_management.clear_cache",
        "name": "ClearCacheRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index name to limit the operation"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "fielddata",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Clear field data"
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields to clear when using the `fielddata` parameter (default: all)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Clear query caches"
        },
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Clear request cache"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.status_management.clear_cache",
        "name": "ClearCacheResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ShardsOperationResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.status_management.flush",
        "name": "FlushRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string for all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "wait_if_ongoing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.status_management.flush",
        "name": "FlushResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ShardsOperationResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.status_management.force_merge",
        "name": "ForceMergeRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "flush",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether the index should be flushed after performing the operation (default: true)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "max_num_segments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of segments the index should be merged into (default: dynamic)"
        },
        {
          "name": "only_expunge_deletes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether the operation should only expunge deleted documents"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.status_management.force_merge",
        "name": "ForceMergeResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ShardsOperationResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.status_management.refresh",
        "name": "RefreshRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.status_management.refresh",
        "name": "RefreshResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ShardsOperationResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "indices.status_management.synced_flush",
        "name": "SyncedFlushRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string for all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "indices.status_management.synced_flush",
        "name": "SyncedFlushResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ShardsOperationResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest",
        "name": "Pipeline"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "on_failure",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest",
                "name": "ProcessorContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "processors",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest",
                "name": "ProcessorContainer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest",
        "name": "ProcessorBase"
      },
      "properties": [
        {
          "name": "if",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ignore_failure",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "on_failure",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest",
                "name": "ProcessorContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "tag",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest",
        "name": "ProcessorContainer"
      },
      "properties": [
        {
          "name": "attachment",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors.plugins",
              "name": "AttachmentProcessor"
            }
          },
          "required": true
        },
        {
          "name": "append",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "AppendProcessor"
            }
          },
          "required": true
        },
        {
          "name": "csv",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "CsvProcessor"
            }
          },
          "required": true
        },
        {
          "name": "convert",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "ConvertProcessor"
            }
          },
          "required": true
        },
        {
          "name": "date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DateProcessor"
            }
          },
          "required": true
        },
        {
          "name": "date_index_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DateIndexNameProcessor"
            }
          },
          "required": true
        },
        {
          "name": "dot_expander",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DotExpanderProcessor"
            }
          },
          "required": true
        },
        {
          "name": "enrich",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "EnrichProcessor"
            }
          },
          "required": true
        },
        {
          "name": "fail",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "FailProcessor"
            }
          },
          "required": true
        },
        {
          "name": "foreach",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "ForeachProcessor"
            }
          },
          "required": true
        },
        {
          "name": "json",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "JsonProcessor"
            }
          },
          "required": true
        },
        {
          "name": "user_agent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors.plugins",
              "name": "UserAgentProcessor"
            }
          },
          "required": true
        },
        {
          "name": "kv",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "KeyValueProcessor"
            }
          },
          "required": true
        },
        {
          "name": "geoip",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors.plugins",
              "name": "GeoIpProcessor"
            }
          },
          "required": true
        },
        {
          "name": "grok",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "GrokProcessor"
            }
          },
          "required": true
        },
        {
          "name": "gsub",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "GsubProcessor"
            }
          },
          "required": true
        },
        {
          "name": "join",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "JoinProcessor"
            }
          },
          "required": true
        },
        {
          "name": "lowercase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "LowercaseProcessor"
            }
          },
          "required": true
        },
        {
          "name": "remove",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "RemoveProcessor"
            }
          },
          "required": true
        },
        {
          "name": "rename",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "RenameProcessor"
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "ScriptProcessor"
            }
          },
          "required": true
        },
        {
          "name": "set",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "SetProcessor"
            }
          },
          "required": true
        },
        {
          "name": "sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "SortProcessor"
            }
          },
          "required": true
        },
        {
          "name": "split",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "SplitProcessor"
            }
          },
          "required": true
        },
        {
          "name": "trim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "TrimProcessor"
            }
          },
          "required": true
        },
        {
          "name": "uppercase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "UppercaseProcessor"
            }
          },
          "required": true
        },
        {
          "name": "urldecode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "UrlDecodeProcessor"
            }
          },
          "required": true
        },
        {
          "name": "bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "BytesProcessor"
            }
          },
          "required": true
        },
        {
          "name": "dissect",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DissectProcessor"
            }
          },
          "required": true
        },
        {
          "name": "set_security_user",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "SetSecurityUserProcessor"
            }
          },
          "required": true
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "PipelineProcessor"
            }
          },
          "required": true
        },
        {
          "name": "drop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DropProcessor"
            }
          },
          "required": true
        },
        {
          "name": "circle",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "CircleProcessor"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "ingest.delete_pipeline",
        "name": "DeletePipelineRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Pipeline ID"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.delete_pipeline",
        "name": "DeletePipelineResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "ingest.get_pipeline",
        "name": "GetPipelineRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "Comma separated list of pipeline ids. Wildcards supported"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.get_pipeline",
        "name": "GetPipelineResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest",
                "name": "Pipeline"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "ingest.processor",
        "name": "GrokProcessorPatternsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processor",
        "name": "GrokProcessorPatternsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "patterns",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "AppendProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "BytesProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "CircleProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "error_distance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "shape_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "ShapeType"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "ConvertProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "ConvertProcessorType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "ingest.processors",
        "name": "ConvertProcessorType"
      },
      "members": [
        {
          "name": "integer"
        },
        {
          "name": "long"
        },
        {
          "name": "float"
        },
        {
          "name": "double"
        },
        {
          "name": "string"
        },
        {
          "name": "boolean"
        },
        {
          "name": "auto"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "CsvProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "empty_value",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "quote",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "separator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "trim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "DateIndexNameProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "date_formats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "date_rounding",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.processors",
              "name": "DateRounding"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "index_name_format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index_name_prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "locale",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timezone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "DateProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "formats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "locale",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "timezone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "ingest.processors",
        "name": "DateRounding"
      },
      "members": [
        {
          "name": "s"
        },
        {
          "name": "m"
        },
        {
          "name": "h"
        },
        {
          "name": "d"
        },
        {
          "name": "w"
        },
        {
          "name": "M"
        },
        {
          "name": "y"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "DissectProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "append_separator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "DotExpanderProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "DropProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "EnrichProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "max_matches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "override",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "policy_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shape_relation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "GeoShapeRelation"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "FailProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "ForeachProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "processor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest",
              "name": "ProcessorContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "GrokProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "pattern_definitions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "patterns",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "trace_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "GsubProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "replacement",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "JoinProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "separator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "JsonProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "add_to_root",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "KeyValueProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "exclude_keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "field_split",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "include_keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "strip_brackets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "trim_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "trim_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "value_split",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "LowercaseProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "PipelineProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "RemoveProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "RenameProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "ScriptProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "SetProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "override",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceWriteFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "SetSecurityUserProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "properties",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "ingest.processors",
        "name": "ShapeType"
      },
      "members": [
        {
          "name": "geo_shape"
        },
        {
          "name": "shape"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "SortProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "SortOrder"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "SplitProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "preserve_trailing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "separator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "TrimProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "UppercaseProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors",
        "name": "UrlDecodeProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors.plugins",
        "name": "AttachmentProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "indexed_chars",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "indexed_chars_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "properties",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors.plugins",
        "name": "GeoIpProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "database_file",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "first_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "properties",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.processors.plugins",
        "name": "UserAgentProcessor"
      },
      "inherits": [
        {
          "type": {
            "namespace": "ingest",
            "name": "ProcessorBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "ignore_missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "options",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest.processors.plugins.user_agent",
                "name": "UserAgentProperty"
              }
            }
          },
          "required": true
        },
        {
          "name": "regex_file",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "target_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "ingest.processors.plugins.user_agent",
        "name": "UserAgentProperty"
      },
      "members": [
        {
          "name": "NAME"
        },
        {
          "name": "MAJOR"
        },
        {
          "name": "MINOR"
        },
        {
          "name": "PATCH"
        },
        {
          "name": "OS"
        },
        {
          "name": "OS_NAME"
        },
        {
          "name": "OS_MAJOR"
        },
        {
          "name": "OS_MINOR"
        },
        {
          "name": "DEVICE"
        },
        {
          "name": "BUILD"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "ingest.put_pipeline",
        "name": "PutPipelineRequest"
      },
      "description": "The ingest definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Pipeline ID"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "on_failure",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "ingest",
                  "name": "ProcessorContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "processors",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "ingest",
                  "name": "ProcessorContainer"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.put_pipeline",
        "name": "PutPipelineResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "DocumentSimulation"
      },
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_ingest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.simulate_pipeline",
              "name": "Ingest"
            }
          },
          "required": true
        },
        {
          "name": "_parent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "LazyDocument"
            }
          },
          "required": true
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "Ingest"
      },
      "properties": [
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "PipelineSimulation"
      },
      "properties": [
        {
          "name": "doc",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "ingest.simulate_pipeline",
              "name": "DocumentSimulation"
            }
          },
          "required": true
        },
        {
          "name": "processor_results",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest.simulate_pipeline",
                "name": "PipelineSimulation"
              }
            }
          },
          "required": true
        },
        {
          "name": "tag",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "SimulatePipelineDocument"
      },
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "_source",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "SimulatePipelineRequest"
      },
      "description": "The simulate definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "Pipeline ID"
        }
      ],
      "query": [
        {
          "name": "verbose",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Verbose mode. Display data output for each processor in executed pipeline"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "docs",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "ingest.simulate_pipeline",
                  "name": "SimulatePipelineDocument"
                }
              }
            },
            "required": false
          },
          {
            "name": "pipeline",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest",
                "name": "Pipeline"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "ingest.simulate_pipeline",
        "name": "SimulatePipelineResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "docs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "ingest.simulate_pipeline",
                "name": "PipelineSimulation"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "AggregateName"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "CategoryId"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "Date"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "DateField"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "include_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "double"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "ErrorCause"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "caused_by",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "ErrorCause"
            }
          },
          "required": false
        },
        {
          "name": "shard",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "integer"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "stack_trace",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "bytes_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "bytes_wanted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "column",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "col",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "failed_shards",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "ShardFailure"
              }
            }
          },
          "required": false
        },
        {
          "name": "grouped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "index_uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "language",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "licensed_expired_feature",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "line",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "max_buckets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "phase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "resource_id",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "resource.id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "resource_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "resource.type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "script_stack",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "Field"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Fields"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "Field"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "float"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Fuzziness"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "integer"
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "GeoHashPrecision"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "GeoTilePrecision"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Id"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "number"
          }
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Ids"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "number"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "IndexName"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Indices"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "integer"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "LatLon"
      },
      "properties": [
        {
          "name": "lat",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "lon",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "LazyDocument"
      },
      "properties": []
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "long"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "number"
        }
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "internal",
        "name": "MainError"
      },
      "inherits": [
        {
          "type": {
            "namespace": "internal",
            "name": "ErrorCause"
          }
        }
      ],
      "properties": [
        {
          "name": "headers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "root_cause",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Metrics"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "MultiTermQueryRewrite"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "Name"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "Names"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "NodeIds"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "PropertyName"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "RelationName"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "Routing"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "number"
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "TaskId"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "TypeName"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "union",
      "name": {
        "namespace": "internal",
        "name": "TypeNames"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "array_of",
          "value": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          }
        }
      ]
    },
    {
      "kind": "type_alias",
      "name": {
        "namespace": "internal",
        "name": "Uri"
      },
      "type": {
        "kind": "instance_of",
        "type": {
          "namespace": "internal",
          "name": "string"
        }
      }
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "mapping",
        "name": "DynamicMapping"
      },
      "members": [
        {
          "name": "strict"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping",
        "name": "TypeMapping"
      },
      "properties": [
        {
          "name": "all_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.all",
              "name": "AllField"
            }
          },
          "required": false
        },
        {
          "name": "date_detection",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "dynamic",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "mapping",
                  "name": "DynamicMapping"
                }
              }
            ]
          },
          "required": false,
          "annotations": {
            "prop_serializer": "DynamicMappingFormatter"
          }
        },
        {
          "name": "dynamic_date_formats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "dynamic_templates",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.dynamic_template",
                "name": "DynamicTemplate"
              }
            }
          },
          "required": false
        },
        {
          "name": "_field_names",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.field_names",
              "name": "FieldNamesField"
            }
          },
          "required": false
        },
        {
          "name": "index_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.index",
              "name": "IndexField"
            }
          },
          "required": false
        },
        {
          "name": "_meta",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false
        },
        {
          "name": "numeric_detection",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "properties",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "PropertyName"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "mapping.types",
                "name": "PropertyBase"
              }
            }
          },
          "required": true
        },
        {
          "name": "_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.routing",
              "name": "RoutingField"
            }
          },
          "required": false
        },
        {
          "name": "_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.size",
              "name": "SizeField"
            }
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.meta_fields.source",
              "name": "SourceField"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.dynamic_template",
        "name": "DynamicTemplate"
      },
      "properties": [
        {
          "name": "mapping",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.types",
              "name": "PropertyBase"
            }
          },
          "required": true
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "match_mapping_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "match_pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "mapping.dynamic_template",
              "name": "MatchType"
            }
          },
          "required": true
        },
        {
          "name": "path_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "path_unmatch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "unmatch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "mapping.dynamic_template",
        "name": "MatchType"
      },
      "members": [
        {
          "name": "simple"
        },
        {
          "name": "regex"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields",
        "name": "FieldMapping"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.all",
        "name": "AllField"
      },
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "omit_norms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "search_analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "similarity",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "store",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "store_term_vector_offsets",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "store_term_vector_payloads",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "store_term_vector_positions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "store_term_vectors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.field_names",
        "name": "FieldNamesField"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.index",
        "name": "IndexField"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.routing",
        "name": "RoutingField"
      },
      "properties": [
        {
          "name": "required",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.size",
        "name": "SizeField"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.meta_fields.source",
        "name": "SourceField"
      },
      "properties": [
        {
          "name": "compress",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "compress_threshold",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "mapping.types",
        "name": "PropertyBase"
      },
      "properties": [
        {
          "name": "local_metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "meta",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "PropertyName"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting",
        "name": "StoredScript"
      },
      "properties": [
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.scripting.delete_script",
        "name": "DeleteScriptRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Script ID"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting.delete_script",
        "name": "DeleteScriptResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.scripting.execute_painless_script",
        "name": "ExecutePainlessScriptRequest"
      },
      "description": "The script to execute",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "context",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "context_setup",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.scripting.execute_painless_script",
                "name": "PainlessContextSetup"
              }
            },
            "required": false
          },
          {
            "name": "script",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "InlineScript"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting.execute_painless_script",
        "name": "ExecutePainlessScriptResponse"
      },
      "generics": [
        "TResult"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TResult"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting.execute_painless_script",
        "name": "PainlessContextSetup"
      },
      "properties": [
        {
          "name": "document",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.scripting.get_script",
        "name": "GetScriptRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Script ID"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting.get_script",
        "name": "GetScriptResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.scripting",
              "name": "StoredScript"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.scripting.put_script",
        "name": "PutScriptRequest"
      },
      "description": "The document",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Script ID"
        },
        {
          "name": "context",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "Script context"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for connection to master"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "script",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.scripting",
                "name": "StoredScript"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.scripting.put_script",
        "name": "PutScriptResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories",
        "name": "SnapshotRepository"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
        "name": "CleanupRepositoryRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
        "name": "CleanupRepositoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "results",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
              "name": "CleanupRepositoryResults"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
        "name": "CleanupRepositoryResults"
      },
      "properties": [
        {
          "name": "deleted_blobs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "deleted_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.create_repository",
        "name": "CreateRepositoryRequest"
      },
      "description": "The repository definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        },
        {
          "name": "verify",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to verify the repository after creation"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "repository",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.repositories",
                "name": "SnapshotRepository"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.create_repository",
        "name": "CreateRepositoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.delete_repository",
        "name": "DeleteRepositoryRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "Name of the snapshot repository to unregister. Wildcard (`*`) patterns are supported."
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.delete_repository",
        "name": "DeleteRepositoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.get_repository",
        "name": "GetRepositoryRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of repository names"
        }
      ],
      "query": [
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.get_repository",
        "name": "GetRepositoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "repositories",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.repositories",
                "name": "SnapshotRepository"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
        "name": "CompactNodeInfo"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
        "name": "VerifyRepositoryRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
        "name": "VerifyRepositoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
                "name": "CompactNodeInfo"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.restore",
        "name": "RestoreRequest"
      },
      "description": "Details of what to restore",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A snapshot name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should this request wait until the operation has completed before returning"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "ignore_index_settings",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "ignore_unavailable",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "include_aliases",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "include_global_state",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "index_settings",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "indices.index_settings.update_index_settings",
                "name": "UpdateIndexSettingsRequest"
              }
            },
            "required": false
          },
          {
            "name": "indices",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Indices"
              }
            },
            "required": false
          },
          {
            "name": "partial",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "rename_pattern",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "rename_replacement",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.restore",
        "name": "RestoreResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.restore",
              "name": "SnapshotRestore"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.restore",
        "name": "SnapshotRestore"
      },
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            }
          },
          "required": true
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot",
        "name": "SnapshotInfo"
      },
      "properties": [
        {
          "name": "duration_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "end_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "end_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.snapshot",
                "name": "SnapshotShardFailure"
              }
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        },
        {
          "name": "start_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot",
        "name": "SnapshotShardFailure"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IntStringFormatter"
          }
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot",
        "name": "DeleteSnapshotRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A snapshot name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot",
        "name": "DeleteSnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.get_snapshot",
        "name": "GetSnapshotRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "A comma-separated list of snapshot names"
        }
      ],
      "query": [
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "verbose",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to show verbose snapshot info or only show the basic info found in the repository index blob"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.get_snapshot",
        "name": "GetSnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "snapshots",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.snapshot",
                "name": "SnapshotInfo"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot",
        "name": "SnapshotRequest"
      },
      "description": "The snapshot definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A repository name"
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "A snapshot name"
        }
      ],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should this request wait until the operation has completed before returning"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "ignore_unavailable",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "include_global_state",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "indices",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Indices"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "IndicesMultiSyntaxFormatter"
            }
          },
          {
            "name": "metadata",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "partial",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot",
        "name": "SnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "accepted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot",
              "name": "SnapshotInfo"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "FileCountSnapshotStats"
      },
      "properties": [
        {
          "name": "file_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotIndexStats"
      },
      "properties": [
        {
          "name": "shards",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
                "name": "SnapshotShardsStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "shards_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "SnapshotShardsStats"
            }
          },
          "required": true
        },
        {
          "name": "stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "SnapshotStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotShardsStats"
      },
      "properties": [
        {
          "name": "done",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "finalizing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "initializing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStats"
      },
      "properties": [
        {
          "name": "incremental",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "FileCountSnapshotStats"
            }
          },
          "required": true
        },
        {
          "name": "start_time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "FileCountSnapshotStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStatus"
      },
      "properties": [
        {
          "name": "include_global_state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
                "name": "SnapshotIndexStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "SnapshotShardsStats"
            }
          },
          "required": true
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
              "name": "SnapshotStats"
            }
          },
          "required": true
        },
        {
          "name": "uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "A repository name"
        },
        {
          "name": "snapshot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of snapshot names"
        }
      ],
      "query": [
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown"
        },
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout for connection to master node"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "snapshots",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
                "name": "SnapshotStatus"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl",
        "name": "MatchAllQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "norm_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl",
        "name": "MatchNoneQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl",
        "name": "Operator"
      },
      "members": [
        {
          "name": "and"
        },
        {
          "name": "or"
        },
        {
          "name": "AND"
        },
        {
          "name": "OR"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.abstractions.container",
        "name": "QueryContainer"
      },
      "properties": [
        {
          "name": "bool",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.bool",
              "name": "BoolQuery"
            }
          },
          "required": false
        },
        {
          "name": "boosting",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.boosting",
              "name": "BoostingQuery"
            }
          },
          "required": false
        },
        {
          "name": "common",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.common_terms",
                    "name": "CommonTermsQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "constant_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.constant_score",
              "name": "ConstantScoreQuery"
            }
          },
          "required": false
        },
        {
          "name": "dis_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.dismax",
              "name": "DisMaxQuery"
            }
          },
          "required": false
        },
        {
          "name": "distance_feature",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "named_value_of",
                "value": {
                  "kind": "union_of",
                  "items": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "query_dsl.specialized.distance_feature",
                        "name": "DistanceFeatureQuery"
                      }
                    },
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "string"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.specialized.distance_feature",
                  "name": "DistanceFeatureQuery"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "exists",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.term_level.exists",
              "name": "ExistsQuery"
            }
          },
          "required": false
        },
        {
          "name": "function_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.function_score",
              "name": "FunctionScoreQuery"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.fuzzy",
                    "name": "FuzzyQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "geo_bounding_box",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.geo.bounding_box",
                    "name": "GeoBoundingBoxQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "geo_distance",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.geo.distance",
                    "name": "GeoDistanceQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "geo_polygon",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.geo.polygon",
                    "name": "GeoPolygonQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "geo_shape",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.geo.shape",
                    "name": "GeoShapeQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "has_child",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.has_child",
              "name": "HasChildQuery"
            }
          },
          "required": false
        },
        {
          "name": "has_parent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.has_parent",
              "name": "HasParentQuery"
            }
          },
          "required": false
        },
        {
          "name": "ids",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.term_level.ids",
              "name": "IdsQuery"
            }
          },
          "required": false
        },
        {
          "name": "intervals",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.intervals",
                    "name": "IntervalsQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "is_conditionless",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "is_strict",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "is_verbatim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "is_writable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "match",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.match",
                    "name": "MatchQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "float"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "match_all",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "MatchAllQuery"
            }
          },
          "required": false
        },
        {
          "name": "match_bool_prefix",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.match_bool_prefix",
                    "name": "MatchBoolPrefixQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "match_none",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "MatchNoneQuery"
            }
          },
          "required": false
        },
        {
          "name": "match_phrase",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.match_phrase",
                    "name": "MatchPhraseQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "match_phrase_prefix",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.full_text.match_phrase_prefix",
                    "name": "MatchPhrasePrefixQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "more_like_this",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.more_like_this",
              "name": "MoreLikeThisQuery"
            }
          },
          "required": false
        },
        {
          "name": "multi_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "MultiMatchQuery"
            }
          },
          "required": false
        },
        {
          "name": "nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.nested",
              "name": "NestedQuery"
            }
          },
          "required": false
        },
        {
          "name": "parent_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.parent_id",
              "name": "ParentIdQuery"
            }
          },
          "required": false
        },
        {
          "name": "percolate",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.percolate",
              "name": "PercolateQuery"
            }
          },
          "required": false
        },
        {
          "name": "pinned",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.pinned",
              "name": "PinnedQuery"
            }
          },
          "required": false
        },
        {
          "name": "prefix",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.prefix",
                    "name": "PrefixQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.query_string",
              "name": "QueryStringQuery"
            }
          },
          "required": false
        },
        {
          "name": "range",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.term_level.range",
                "name": "RangeQuery"
              }
            }
          },
          "required": false
        },
        {
          "name": "rank_feature",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.specialized.rank_feature",
                    "name": "RankFeatureQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "raw_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.nest_specific",
              "name": "RawQuery"
            }
          },
          "required": false
        },
        {
          "name": "regexp",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.regexp",
                    "name": "RegexpQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.script",
              "name": "ScriptQuery"
            }
          },
          "required": false
        },
        {
          "name": "script_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.script_score",
              "name": "ScriptScoreQuery"
            }
          },
          "required": false
        },
        {
          "name": "shape",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.specialized.shape",
                    "name": "ShapeQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "simple_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.simple_query_string",
              "name": "SimpleQueryStringQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_containing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.containing",
              "name": "SpanContainingQuery"
            }
          },
          "required": false
        },
        {
          "name": "field_masking_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.field_masking",
              "name": "SpanFieldMaskingQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_first",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.first",
              "name": "SpanFirstQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_multi",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.multi_term",
              "name": "SpanMultiTermQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_near",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.near",
              "name": "SpanNearQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_not",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.not",
              "name": "SpanNotQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_or",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.or",
              "name": "SpanOrQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_term",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.span.term",
                    "name": "SpanTermQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "span_within",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.within",
              "name": "SpanWithinQuery"
            }
          },
          "required": false
        },
        {
          "name": "term",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.term",
                    "name": "TermQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "float"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "terms",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.terms",
                    "name": "TermsQuery"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "terms_set",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.terms_set",
                    "name": "TermsSetQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "wildcard",
          "type": {
            "kind": "named_value_of",
            "value": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.term_level.wildcard",
                    "name": "WildcardQuery"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              ]
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.term_level.type",
              "name": "TypeQuery"
            }
          },
          "required": false,
          "annotations": {
            "obsolete": "7.0.0",
            "obsolete_description": "https://www.elastic.co/guide/en/elasticsearch/reference/7.x/removal-of-types.html"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.abstractions.field_lookup",
        "name": "FieldLookup"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.abstractions.query",
        "name": "QueryBase"
      },
      "properties": [
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": false
        },
        {
          "name": "_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.bool",
        "name": "BoolQuery"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.abstractions.container",
                  "name": "QueryContainer"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "must",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.abstractions.container",
                  "name": "QueryContainer"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "must_not",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.abstractions.container",
                  "name": "QueryContainer"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "should",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.abstractions.container",
                  "name": "QueryContainer"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "query_dsl.abstractions.container",
                    "name": "QueryContainer"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.boosting",
        "name": "BoostingQuery"
      },
      "properties": [
        {
          "name": "negative_boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "negative",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "positive",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.constant_score",
        "name": "ConstantScoreQuery"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.dismax",
        "name": "DisMaxQuery"
      },
      "properties": [
        {
          "name": "queries",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            }
          },
          "required": false
        },
        {
          "name": "tie_breaker",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.function_score",
        "name": "FunctionScoreQuery"
      },
      "properties": [
        {
          "name": "boost_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.function_score.functions",
              "name": "FunctionBoostMode"
            }
          },
          "required": false
        },
        {
          "name": "functions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.compound.function_score.functions",
                "name": "ScoreFunction"
              }
            }
          },
          "required": false
        },
        {
          "name": "max_boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "min_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "score_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.compound.function_score.functions",
              "name": "FunctionScoreMode"
            }
          },
          "required": false
        },
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.compound.function_score.functions",
        "name": "FunctionBoostMode"
      },
      "members": [
        {
          "name": "multiply"
        },
        {
          "name": "replace"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "max"
        },
        {
          "name": "min"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.compound.function_score.functions",
        "name": "FunctionScoreMode"
      },
      "members": [
        {
          "name": "multiply"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "first"
        },
        {
          "name": "max"
        },
        {
          "name": "min"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.compound.function_score.functions",
        "name": "ScoreFunction"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.common_terms",
        "name": "CommonTermsQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "cutoff_frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "high_freq_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "low_freq_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsAllOf"
      },
      "properties": [
        {
          "name": "intervals",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.full_text.intervals",
                "name": "IntervalsContainer"
              }
            }
          },
          "required": false
        },
        {
          "name": "max_gaps",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "ordered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsFilter"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsAnyOf"
      },
      "properties": [
        {
          "name": "intervals",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.full_text.intervals",
                "name": "IntervalsContainer"
              }
            }
          },
          "required": false
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsFilter"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsContainer"
      },
      "properties": [
        {
          "name": "all_of",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsAllOf"
            }
          },
          "required": false
        },
        {
          "name": "any_of",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsAnyOf"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsFuzzy"
            }
          },
          "required": false
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsMatch"
            }
          },
          "required": false
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsPrefix"
            }
          },
          "required": false
        },
        {
          "name": "wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsWildcard"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsFilter"
      },
      "properties": [
        {
          "name": "after",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "before",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "contained_by",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "containing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "not_contained_by",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "not_containing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "not_overlapping",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "overlapping",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsContainer"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsFuzzy"
      },
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": false
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "use_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsMatch"
      },
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "max_gaps",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "ordered",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "use_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsFilter"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsPrefix"
      },
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "use_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "all_of",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsAllOf"
            }
          },
          "required": false
        },
        {
          "name": "any_of",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsAnyOf"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsFuzzy"
            }
          },
          "required": false
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsMatch"
            }
          },
          "required": false
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsPrefix"
            }
          },
          "required": false
        },
        {
          "name": "wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.intervals",
              "name": "IntervalsWildcard"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.intervals",
        "name": "IntervalsWildcard"
      },
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "use_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.match",
        "name": "MatchQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "auto_generate_synonyms_phrase_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "cutoff_frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "float"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "zero_terms_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "ZeroTermsQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.match_bool_prefix",
        "name": "MatchBoolPrefixQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.match_phrase",
        "name": "MatchPhraseQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "slop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.match_phrase_prefix",
        "name": "MatchPhrasePrefixQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "slop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "zero_terms_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "ZeroTermsQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.multi_match",
        "name": "MultiMatchQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "auto_generate_synonyms_phrase_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "cutoff_frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "slop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "tie_breaker",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "TextQueryType"
            }
          },
          "required": false
        },
        {
          "name": "use_dis_max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "zero_terms_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "ZeroTermsQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.full_text.multi_match",
        "name": "TextQueryType"
      },
      "members": [
        {
          "name": "best_fields"
        },
        {
          "name": "most_fields"
        },
        {
          "name": "cross_fields"
        },
        {
          "name": "phrase"
        },
        {
          "name": "phrase_prefix"
        },
        {
          "name": "bool_prefix"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.full_text.multi_match",
        "name": "ZeroTermsQuery"
      },
      "members": [
        {
          "name": "all"
        },
        {
          "name": "none"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.query_string",
        "name": "QueryStringQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "allow_leading_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "auto_generate_synonyms_phrase_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "default_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "enable_position_increments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "escape",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "max_determinized_states",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "phrase_slop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "quote_analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "quote_field_suffix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "tie_breaker",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.multi_match",
              "name": "TextQueryType"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.full_text.simple_query_string",
        "name": "SimpleQueryStringFlags"
      },
      "members": [
        {
          "name": "NONE"
        },
        {
          "name": "AND"
        },
        {
          "name": "OR"
        },
        {
          "name": "NOT"
        },
        {
          "name": "PREFIX"
        },
        {
          "name": "PHRASE"
        },
        {
          "name": "PRECEDENCE"
        },
        {
          "name": "ESCAPE"
        },
        {
          "name": "WHITESPACE"
        },
        {
          "name": "FUZZY"
        },
        {
          "name": "NEAR"
        },
        {
          "name": "SLOP"
        },
        {
          "name": "ALL"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.full_text.simple_query_string",
        "name": "SimpleQueryStringQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "auto_generate_synonyms_phrase_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl",
              "name": "Operator"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "flags",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.full_text.simple_query_string",
              "name": "SimpleQueryStringFlags"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fuzzy_transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "quote_field_suffix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo",
        "name": "GeoCoordinate"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.geo",
            "name": "GeoLocation"
          }
        }
      ],
      "properties": [
        {
          "name": "z",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo",
        "name": "GeoLocation"
      },
      "properties": [
        {
          "name": "lat",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "lon",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.geo",
        "name": "GeoValidationMethod"
      },
      "members": [
        {
          "name": "coerce"
        },
        {
          "name": "ignore_malformed"
        },
        {
          "name": "strict"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.bounding_box",
        "name": "BoundingBox"
      },
      "properties": [
        {
          "name": "bottom_right",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoLocation"
            }
          },
          "required": false
        },
        {
          "name": "top_left",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoLocation"
            }
          },
          "required": false
        },
        {
          "name": "wkt",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.bounding_box",
        "name": "GeoBoundingBoxQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "bounding_box",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo.bounding_box",
              "name": "BoundingBox"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo.bounding_box",
              "name": "GeoExecution"
            }
          },
          "required": false
        },
        {
          "name": "validation_method",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoValidationMethod"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.geo.bounding_box",
        "name": "GeoExecution"
      },
      "members": [
        {
          "name": "memory"
        },
        {
          "name": "indexed"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.distance",
        "name": "GeoDistanceQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "distance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "Distance"
            }
          },
          "required": false
        },
        {
          "name": "distance_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "GeoDistanceType"
            }
          },
          "required": false
        },
        {
          "name": "location",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoLocation"
            }
          },
          "required": false
        },
        {
          "name": "validation_method",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoValidationMethod"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.polygon",
        "name": "GeoPolygonQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "points",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.geo",
                "name": "GeoLocation"
              }
            }
          },
          "required": false
        },
        {
          "name": "validation_method",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo",
              "name": "GeoValidationMethod"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.shape",
        "name": "GeoShape"
      },
      "properties": [
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.geo.shape",
        "name": "GeoShapeQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "indexed_shape",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.field_lookup",
              "name": "FieldLookup"
            }
          },
          "required": false
        },
        {
          "name": "relation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.geo",
              "name": "GeoShapeRelation"
            }
          },
          "required": false
        },
        {
          "name": "shape",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo.shape",
              "name": "GeoShape"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.joining.has_child",
        "name": "ChildScoreMode"
      },
      "members": [
        {
          "name": "none"
        },
        {
          "name": "avg"
        },
        {
          "name": "sum"
        },
        {
          "name": "max"
        },
        {
          "name": "min"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.joining.has_child",
        "name": "HasChildQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "inner_hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.inner_hits",
              "name": "InnerHits"
            }
          },
          "required": false
        },
        {
          "name": "max_children",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "min_children",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "score_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.has_child",
              "name": "ChildScoreMode"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "RelationName"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.joining.has_parent",
        "name": "HasParentQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "inner_hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.inner_hits",
              "name": "InnerHits"
            }
          },
          "required": false
        },
        {
          "name": "parent_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "RelationName"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.joining.nested",
        "name": "NestedQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "inner_hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.inner_hits",
              "name": "InnerHits"
            }
          },
          "required": false
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "score_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.joining.nested",
              "name": "NestedScoreMode"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.joining.nested",
        "name": "NestedScoreMode"
      },
      "members": [
        {
          "name": "avg"
        },
        {
          "name": "sum"
        },
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "none"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.joining.parent_id",
        "name": "ParentIdQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false
        },
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "RelationName"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.nest_specific",
        "name": "RawQuery"
      },
      "properties": [
        {
          "name": "raw",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span",
        "name": "SpanQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "span_containing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.containing",
              "name": "SpanContainingQuery"
            }
          },
          "required": false
        },
        {
          "name": "field_masking_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.field_masking",
              "name": "SpanFieldMaskingQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_first",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.first",
              "name": "SpanFirstQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_gap",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.gap",
              "name": "SpanGapQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_multi",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.multi_term",
              "name": "SpanMultiTermQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_near",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.near",
              "name": "SpanNearQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_not",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.not",
              "name": "SpanNotQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_or",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.or",
              "name": "SpanOrQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.term",
              "name": "SpanTermQuery"
            }
          },
          "required": false
        },
        {
          "name": "span_within",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span.within",
              "name": "SpanWithinQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.containing",
        "name": "SpanContainingQuery"
      },
      "properties": [
        {
          "name": "big",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        },
        {
          "name": "little",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.field_masking",
        "name": "SpanFieldMaskingQuery"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.first",
        "name": "SpanFirstQuery"
      },
      "properties": [
        {
          "name": "end",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.gap",
        "name": "SpanGapQuery"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "width",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.multi_term",
        "name": "SpanMultiTermQuery"
      },
      "properties": [
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.near",
        "name": "SpanNearQuery"
      },
      "properties": [
        {
          "name": "clauses",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.span",
                "name": "SpanQuery"
              }
            }
          },
          "required": false
        },
        {
          "name": "in_order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "slop",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.not",
        "name": "SpanNotQuery"
      },
      "properties": [
        {
          "name": "dist",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "exclude",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        },
        {
          "name": "post",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "pre",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.or",
        "name": "SpanOrQuery"
      },
      "properties": [
        {
          "name": "clauses",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.span",
                "name": "SpanQuery"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.term",
        "name": "SpanTermQuery"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.span.within",
        "name": "SpanWithinQuery"
      },
      "properties": [
        {
          "name": "big",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        },
        {
          "name": "little",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.span",
              "name": "SpanQuery"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.distance_feature",
        "name": "DistanceFeatureQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "origin",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Array"
                },
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "number"
                    }
                  }
                ]
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "query_dsl.geo",
                  "name": "GeoCoordinate"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "pivot",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.geo",
                  "name": "Distance"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.time_unit",
                  "name": "Time"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.more_like_this",
        "name": "MoreLikeThisQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "boost_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "include",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "like",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.specialized.more_like_this.like",
                "name": "Like"
              }
            }
          },
          "required": false
        },
        {
          "name": "max_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "max_query_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "max_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "min_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.minimum_should_match",
              "name": "MinimumShouldMatch"
            }
          },
          "required": false
        },
        {
          "name": "min_term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "min_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "per_field_analyzer",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        },
        {
          "name": "stop_words",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "analysis",
              "name": "StopWords"
            }
          },
          "required": false
        },
        {
          "name": "unlike",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.specialized.more_like_this.like",
                "name": "Like"
              }
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "version_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "VersionType"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "query_dsl.specialized.more_like_this.like",
        "name": "Like"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "query_dsl.specialized.more_like_this.like",
            "name": "LikeDocument"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.more_like_this.like",
        "name": "LikeDocument"
      },
      "properties": [
        {
          "name": "doc",
          "type": {
            "kind": "user_defined_value"
          },
          "required": false,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false
        },
        {
          "name": "per_field_analyzer",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.percolate",
        "name": "PercolateQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "document",
          "type": {
            "kind": "user_defined_value"
          },
          "required": false,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "documents",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": false,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.pinned",
        "name": "PinnedQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Id"
              }
            }
          },
          "required": false
        },
        {
          "name": "organic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.rank_feature",
        "name": "RankFeatureFunction"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.rank_feature",
        "name": "RankFeatureQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "function",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.specialized.rank_feature",
              "name": "RankFeatureFunction"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.script",
        "name": "ScriptQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.script_score",
        "name": "ScriptScoreQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.specialized.shape",
        "name": "ShapeQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "indexed_shape",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.field_lookup",
              "name": "FieldLookup"
            }
          },
          "required": false
        },
        {
          "name": "relation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.shape",
              "name": "ShapeRelation"
            }
          },
          "required": false
        },
        {
          "name": "shape",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.geo.shape",
              "name": "GeoShape"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.exists",
        "name": "ExistsQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.fuzzy",
        "name": "FuzzyQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "max_expansions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        },
        {
          "name": "transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.ids",
        "name": "IdsQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Id"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.prefix",
        "name": "PrefixQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.range",
        "name": "RangeQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "gt",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "gte",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "lt",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "lte",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "relation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.term_level.range",
              "name": "RangeRelation"
            }
          },
          "required": false
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "from",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "to",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.date_math",
                  "name": "DateMath"
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "query_dsl.term_level.range",
        "name": "RangeRelation"
      },
      "members": [
        {
          "name": "within"
        },
        {
          "name": "contains"
        },
        {
          "name": "intersects"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.regexp",
        "name": "RegexpQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "flags",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "max_determinized_states",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.term",
        "name": "TermQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "value",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "float"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              }
            ]
          },
          "required": false,
          "annotations": {
            "prop_serializer": "SourceWriteFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.terms",
        "name": "TermsQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "terms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.terms_set",
        "name": "TermsSetQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "minimum_should_match_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "minimum_should_match_script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": false
        },
        {
          "name": "terms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "annotations": {
            "prop_serializer": "SourceWriteFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.type",
        "name": "TypeQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "query_dsl.term_level.wildcard",
        "name": "WildcardQuery"
      },
      "inherits": [
        {
          "type": {
            "namespace": "query_dsl.abstractions.query",
            "name": "QueryBase"
          }
        }
      ],
      "properties": [
        {
          "name": "rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "MultiTermQueryRewrite"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.count",
        "name": "CountRequest"
      },
      "description": "A query to restrict the results specified with the Query DSL (optional)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of indices to restrict the results"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of types to restrict the results"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer to use for the query string"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The field to use as default where no field prefix is given in the query string"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "min_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false,
          "description": "Include only documents with a specific `_score` value in the result"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "A comma-separated list of specific routing values"
        },
        {
          "name": "terminate_after",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The maximum count for each shard, upon reaching which the query execution will terminate early"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.count",
        "name": "CountResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.explain",
        "name": "ExplainRequest"
      },
      "description": "The query definition using the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The document ID"
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The type of the document"
        }
      ],
      "query": [
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer for the query string query"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The default field for query string query (default: _all)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "source_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "source_excludes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "source_includes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of stored fields to return in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.explain",
        "name": "ExplainResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.explain",
              "name": "ExplanationDetail"
            }
          },
          "required": true
        },
        {
          "name": "get",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.explain",
              "name": "InlineGet"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "generic",
                  "name": "TDocument"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "matched",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.explain",
        "name": "Explanation"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.explain",
                "name": "ExplanationDetail"
              }
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.explain",
        "name": "ExplanationDetail"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.explain",
                "name": "ExplanationDetail"
              }
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.explain",
        "name": "InlineGet"
      },
      "generics": [
        "TDocument"
      ],
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "LazyDocument"
              }
            }
          },
          "required": false
        },
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.field_capabilities",
        "name": "FieldCapabilities"
      },
      "properties": [
        {
          "name": "aggregatable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "meta",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "non_aggregatable_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "non_searchable_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "searchable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.field_capabilities",
        "name": "FieldCapabilitiesRequest"
      },
      "description": "An index filter specified with the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "fields",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                }
              }
            ]
          },
          "required": false,
          "description": "A comma-separated list of field names"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "include_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether unmapped fields should be included in the response."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.field_capabilities",
        "name": "FieldCapabilitiesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.field_capabilities",
                  "name": "FieldCapabilities"
                }
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.multi_search",
        "name": "MultiSearchRequest"
      },
      "description": "The request definitions (metadata-search request definition pairs), separated by newlines",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to use as default"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to use as default"
        }
      ],
      "query": [
        {
          "name": "ccs_minimize_roundtrips",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"
        },
        {
          "name": "max_concurrent_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Controls the maximum number of concurrent searches the multi search api will execute"
        },
        {
          "name": "max_concurrent_shard_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of concurrent shard requests each sub search executes concurrently per node. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests"
        },
        {
          "name": "pre_filter_shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "typed_keys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "operations",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search",
                  "name": "SearchRequest"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.multi_search",
        "name": "MultiSearchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "responses",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search",
                "name": "SearchResponse"
              },
              "generics": [
                {
                  "kind": "user_defined_value"
                }
              ]
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.multi_search_template",
        "name": "MultiSearchTemplateRequest"
      },
      "description": "The request definitions (metadata-search request definition pairs), separated by newlines",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to use as default"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to use as default"
        }
      ],
      "query": [
        {
          "name": "ccs_minimize_roundtrips",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"
        },
        {
          "name": "max_concurrent_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Controls the maximum number of concurrent searches the multi search api will execute"
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "typed_keys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "operations",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search_template",
                  "name": "SearchTemplateRequest"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.scroll.clear_scroll",
        "name": "ClearScrollRequest"
      },
      "description": "A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "scroll_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Ids"
            }
          },
          "required": false,
          "description": "A comma-separated list of scroll IDs to clear"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "scroll_id",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.scroll.clear_scroll",
        "name": "ClearScrollResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.scroll.scroll",
        "name": "ScrollRequest"
      },
      "description": "The scroll ID if not passed by URL or query parameter.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "scroll_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The scroll ID"
        }
      ],
      "query": [
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify how long a consistent view of the index should be maintained for scrolled search"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "scroll",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "scroll_id",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.scroll.scroll",
        "name": "ScrollResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "search.search",
            "name": "SearchResponse"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TDocument"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.scroll.scroll",
        "name": "SlicedScroll"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.search",
        "name": "SearchRequest"
      },
      "description": "The search definition using the Query DSL",
      "annotations": {
        "type_stability": "stable"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "allow_partial_search_results",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicate if an error should be returned if there is a partial search failure or timeout"
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer to use for the query string"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        {
          "name": "batched_reduce_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large."
        },
        {
          "name": "ccs_minimize_roundtrips",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The field to use as default where no field prefix is given in the query string"
        },
        {
          "name": "docvalue_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of fields to return as the docvalue representation of a field for each hit"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "max_concurrent_shard_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "pre_filter_shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "request_cache",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify if request cache should be used for this request or not, defaults to index level setting"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "A comma-separated list of specific routing values"
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify how long a consistent view of the index should be maintained for scrolled search"
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "sequence_number_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Specific 'tag' of the request for logging and statistical purposes"
        },
        {
          "name": "stored_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false,
          "description": "A comma-separated list of stored fields to return as part of a hit"
        },
        {
          "name": "suggest_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false,
          "description": "Specify which field to use for suggestions"
        },
        {
          "name": "suggest_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SuggestMode"
            }
          },
          "required": false,
          "description": "Specify suggest mode"
        },
        {
          "name": "suggest_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "How many suggestions to return in response"
        },
        {
          "name": "suggest_text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The source text for which the suggestions should be returned"
        },
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "track_total_hits",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "integer"
                }
              }
            ]
          },
          "required": false,
          "description": "Indicate if the number of documents that match the query should be tracked"
        },
        {
          "name": "typed_keys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"
        },
        {
          "name": "rest_total_hits_as_int",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether hits.total should be rendered as an integer or an object in the rest search response"
        },
        {
          "name": "_source_excludes",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                }
              }
            ]
          },
          "required": false,
          "description": "A list of fields to exclude from the returned _source field"
        },
        {
          "name": "_source_includes",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                }
              }
            ]
          },
          "required": false,
          "description": "A list of fields to extract and return from the _source field"
        },
        {
          "name": "seq_no_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to return sequence number and primary term of the last modification of each hit"
        },
        {
          "name": "q",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Query in the Lucene query string syntax"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "Number of hits to return (default: 10)"
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "Starting offset (default: 0)"
        },
        {
          "name": "sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Array"
            },
            "generics": [
              {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "Field"
                    }
                  },
                  {
                    "kind": "named_value_of",
                    "value": {
                      "kind": "union_of",
                      "items": [
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "search.search.sort",
                            "name": "Sort"
                          }
                        },
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "search.search.sort",
                            "name": "SortOrder"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "required": false,
          "description": "A comma-separated list of <field>:<direction> pairs"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggs",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "aggregations",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "collapse",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.collapsing",
                "name": "FieldCollapse"
              }
            },
            "required": false
          },
          {
            "name": "explain",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "from",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "highlight",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.highlighting",
                "name": "Highlight"
              }
            },
            "required": false
          },
          {
            "name": "track_total_hits",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "integer"
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "indices_boost",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Array"
              },
              "generics": [
                {
                  "kind": "dictionary_of",
                  "key": {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "IndexName"
                    }
                  },
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "double"
                    }
                  }
                }
              ]
            },
            "required": false,
            "annotations": {
              "prop_serializer": "IndicesBoostFormatter"
            }
          },
          {
            "name": "docvalue_fields",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.source_filtering",
                    "name": "DocValueField"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Array"
                  },
                  "generics": [
                    {
                      "kind": "union_of",
                      "items": [
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "internal",
                            "name": "Field"
                          }
                        },
                        {
                          "kind": "instance_of",
                          "type": {
                            "namespace": "search.search.source_filtering",
                            "name": "DocValueField"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "required": false
          },
          {
            "name": "min_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "post_filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "profile",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "rescore",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.rescoring",
                    "name": "Rescore"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "search.search.rescoring",
                      "name": "Rescore"
                    }
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "script_fields",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.scripting",
                  "name": "ScriptField"
                }
              }
            },
            "required": false
          },
          {
            "name": "search_after",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Array"
              },
              "generics": [
                {
                  "kind": "union_of",
                  "items": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "integer"
                      }
                    },
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            },
            "required": false
          },
          {
            "name": "size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "slice",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.scroll.scroll",
                "name": "SlicedScroll"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Array"
              },
              "generics": [
                {
                  "kind": "union_of",
                  "items": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "Field"
                      }
                    },
                    {
                      "kind": "named_value_of",
                      "value": {
                        "kind": "union_of",
                        "items": [
                          {
                            "kind": "instance_of",
                            "type": {
                              "namespace": "search.search.sort",
                              "name": "Sort"
                            }
                          },
                          {
                            "kind": "instance_of",
                            "type": {
                              "namespace": "search.search.sort",
                              "name": "SortOrder"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "required": false
          },
          {
            "name": "_source",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Fields"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.source_filtering",
                    "name": "SourceFilter"
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "fields",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Array"
              },
              "generics": [
                {
                  "kind": "union_of",
                  "items": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "Field"
                      }
                    },
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "internal",
                        "name": "DateField"
                      }
                    }
                  ]
                }
              ]
            },
            "required": false
          },
          {
            "name": "suggest",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.suggesters",
                  "name": "SuggestBucket"
                }
              }
            },
            "required": false
          },
          {
            "name": "terminate_after",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "track_scores",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "version",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "seq_no_primary_term",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "stored_fields",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "Field"
                  }
                },
                {
                  "kind": "array_of",
                  "value": {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "Field"
                    }
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "pit",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.point_in_time",
                "name": "PointInTimeReference"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search",
        "name": "SearchResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        },
        {
          "name": "hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "HitsMetadata"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "generic",
                  "name": "TDocument"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "AggregateName"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "Aggregate"
              }
            }
          },
          "required": false
        },
        {
          "name": "_clusters",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ClusterStatistics"
            }
          },
          "required": false
        },
        {
          "name": "documents",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TDocument"
              }
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "LazyDocument"
              }
            }
          },
          "required": false
        },
        {
          "name": "max_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "num_reduce_phases",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "profile",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.profile",
              "name": "Profile"
            }
          },
          "required": false
        },
        {
          "name": "pit_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_scroll_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "suggest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters",
              "name": "SuggestDictionary"
            },
            "generics": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "generic",
                  "name": "TDocument"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "terminated_early",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search_shards",
        "name": "SearchNode"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search_shards",
        "name": "SearchShard"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "primary",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "relocating_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.search_shards",
        "name": "SearchShardsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search_shards",
        "name": "SearchShardsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search_shards",
                "name": "SearchNode"
              }
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search_shards",
                  "name": "SearchShard"
                }
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.search_template",
        "name": "SearchTemplateRequest"
      },
      "description": "The search definition template and its params",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "ccs_minimize_roundtrips",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "explain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to return detailed information about score computation as part of a hit"
        },
        {
          "name": "ignore_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete, expanded or aliased indices should be ignored when throttled"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "preference",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Specify the node or shard the operation should be performed on (default: random)"
        },
        {
          "name": "profile",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether to profile the query execution"
        },
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "A comma-separated list of specific routing values"
        },
        {
          "name": "scroll",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify how long a consistent view of the index should be maintained for scrolled search"
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false,
          "description": "Search operation type"
        },
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "typed_keys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "id",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "params",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.search_template.render_search_template",
        "name": "RenderSearchTemplateRequest"
      },
      "description": "The search definition template and its params",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "file",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "params",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search_template.render_search_template",
        "name": "RenderSearchTemplateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "template_output",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "LazyDocument"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.collapsing",
        "name": "FieldCollapse"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "inner_hits",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.inner_hits",
                  "name": "InnerHits"
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.inner_hits",
                    "name": "InnerHits"
                  }
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "max_concurrent_group_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "BoundaryScanner"
      },
      "members": [
        {
          "name": "chars"
        },
        {
          "name": "sentence"
        },
        {
          "name": "word"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "Highlight"
      },
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.highlighting",
                "name": "HighlightField"
              }
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterType"
            }
          },
          "required": false
        },
        {
          "name": "boundary_chars",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "boundary_max_scan",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "boundary_scanner",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "BoundaryScanner"
            }
          },
          "required": false
        },
        {
          "name": "boundary_scanner_locale",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "encoder",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterEncoder"
            }
          },
          "required": false
        },
        {
          "name": "fragmenter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterFragmenter"
            }
          },
          "required": false
        },
        {
          "name": "fragment_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fragment_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "max_fragment_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "no_match_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "number_of_fragments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterOrder"
            }
          },
          "required": false
        },
        {
          "name": "post_tags",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "pre_tags",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "require_field_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "tags_schema",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterTagsSchema"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlighterEncoder"
      },
      "members": [
        {
          "name": "default"
        },
        {
          "name": "html"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlighterFragmenter"
      },
      "members": [
        {
          "name": "simple"
        },
        {
          "name": "span"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlighterOrder"
      },
      "members": [
        {
          "name": "score"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlighterTagsSchema"
      },
      "members": [
        {
          "name": "styled"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlighterType"
      },
      "members": [
        {
          "name": "plain"
        },
        {
          "name": "fvh"
        },
        {
          "name": "unified"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.highlighting",
        "name": "HighlightField"
      },
      "properties": [
        {
          "name": "boundary_chars",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "boundary_max_scan",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "boundary_scanner",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "BoundaryScanner"
            }
          },
          "required": false
        },
        {
          "name": "boundary_scanner_locale",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": false
        },
        {
          "name": "force_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "fragmenter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterFragmenter"
            }
          },
          "required": false
        },
        {
          "name": "fragment_offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "fragment_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "highlight_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": false
        },
        {
          "name": "matched_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "max_fragment_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "no_match_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "number_of_fragments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterOrder"
            }
          },
          "required": false
        },
        {
          "name": "phrase_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "post_tags",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "pre_tags",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "require_field_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "tags_schema",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "HighlighterTagsSchema"
            }
          },
          "required": false
        },
        {
          "name": "type",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.highlighting",
                  "name": "HighlighterType"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "Hit"
      },
      "generics": [
        "TDocument"
      ],
      "properties": [
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        },
        {
          "name": "_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false
        },
        {
          "name": "_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.explain",
              "name": "Explanation"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "LazyDocument"
              }
            }
          },
          "required": false
        },
        {
          "name": "highlight",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            }
          },
          "required": false
        },
        {
          "name": "inner_hits",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.hits",
                "name": "InnerHitsResult"
              }
            }
          },
          "required": false,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "matched_queries",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "_nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "NestedIdentity"
            }
          },
          "required": false
        },
        {
          "name": "_ignored",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "_shard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": false
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Array"
            },
            "generics": [
              {
                "kind": "union_of",
                "items": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "long"
                    }
                  },
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "double"
                    }
                  },
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "internal",
                      "name": "string"
                    }
                  }
                ]
              }
            ]
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "HitsMetadata"
      },
      "generics": [
        "T"
      ],
      "properties": [
        {
          "name": "total",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.hits",
                  "name": "TotalHits"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "long"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "hits",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.hits",
                "name": "Hit"
              },
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "generic",
                    "name": "T"
                  }
                }
              ]
            }
          },
          "required": true
        },
        {
          "name": "max_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "InnerHitsMetadata"
      },
      "properties": [
        {
          "name": "total",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.hits",
                  "name": "TotalHits"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "long"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "hits",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.hits",
                "name": "Hit"
              },
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "LazyDocument"
                  }
                }
              ]
            }
          },
          "required": true
        },
        {
          "name": "max_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "InnerHitsResult"
      },
      "properties": [
        {
          "name": "hits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "InnerHitsMetadata"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "NestedIdentity"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "_nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "NestedIdentity"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.hits",
        "name": "TotalHits"
      },
      "properties": [
        {
          "name": "relation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.hits",
              "name": "TotalHitsRelation"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.hits",
        "name": "TotalHitsRelation"
      },
      "members": [
        {
          "name": "eq"
        },
        {
          "name": "gte"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.inner_hits",
        "name": "InnerHits"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "collapse",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.collapsing",
              "name": "FieldCollapse"
            }
          },
          "required": false
        },
        {
          "name": "docvalue_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "explain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "highlight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.highlighting",
              "name": "Highlight"
            }
          },
          "required": false
        },
        {
          "name": "ignore_unmapped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "script_fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "ScriptField"
              }
            }
          },
          "required": false
        },
        {
          "name": "seq_no_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": false
        },
        {
          "name": "sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Array"
            },
            "generics": [
              {
                "kind": "named_value_of",
                "value": {
                  "kind": "union_of",
                  "items": [
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "search.search.sort",
                        "name": "Sort"
                      }
                    },
                    {
                      "kind": "instance_of",
                      "type": {
                        "namespace": "search.search.sort",
                        "name": "SortOrder"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "_source",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "boolean"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.source_filtering",
                  "name": "SourceFilter"
                }
              }
            ]
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.point_in_time",
        "name": "PointInTimeReference"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "keep_alive",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "AggregationBreakdown"
      },
      "properties": [
        {
          "name": "build_aggregation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "build_aggregation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "build_leaf_collector",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "build_leaf_collector_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "collect",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "collect_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "initialize",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "initialize_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "reduce",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "reduce_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "AggregationProfile"
      },
      "properties": [
        {
          "name": "breakdown",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.profile",
              "name": "AggregationBreakdown"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "debug",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.profile",
              "name": "AggregationProfileDebug"
            }
          },
          "required": true
        },
        {
          "name": "children",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "AggregationProfileDebug"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "AggregationProfileDebug"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "Collector"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "children",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "Collector"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "Profile"
      },
      "properties": [
        {
          "name": "shards",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "ShardProfile"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "QueryBreakdown"
      },
      "properties": [
        {
          "name": "advance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "advance_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "build_scorer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "build_scorer_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "create_weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "create_weight_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "match_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "shallow_advance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "shallow_advance_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "next_doc",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "next_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "score_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "compute_max_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "compute_max_score_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "set_min_competitive_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "set_min_competitive_score_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "QueryProfile"
      },
      "properties": [
        {
          "name": "breakdown",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.profile",
              "name": "QueryBreakdown"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_in_nanos",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "children",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "QueryProfile"
              }
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "SearchProfile"
      },
      "properties": [
        {
          "name": "collector",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "Collector"
              }
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "QueryProfile"
              }
            }
          },
          "required": true
        },
        {
          "name": "rewrite_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.profile",
        "name": "ShardProfile"
      },
      "properties": [
        {
          "name": "aggregations",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "AggregationProfile"
              }
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "searches",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.profile",
                "name": "SearchProfile"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.rescoring",
        "name": "Rescore"
      },
      "properties": [
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.rescoring",
              "name": "RescoreQuery"
            }
          },
          "required": true
        },
        {
          "name": "window_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.rescoring",
        "name": "RescoreQuery"
      },
      "properties": [
        {
          "name": "rescore_query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true,
          "annotations": {
            "alternate_name": "Query"
          }
        },
        {
          "name": "query_weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "rescore_query_weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "score_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.rescoring",
              "name": "ScoreMode"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.rescoring",
        "name": "ScoreMode"
      },
      "members": [
        {
          "name": "avg"
        },
        {
          "name": "max"
        },
        {
          "name": "min"
        },
        {
          "name": "multiply"
        },
        {
          "name": "total"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.sort",
        "name": "NestedSort"
      },
      "properties": [
        {
          "name": "nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "NestedSortValue"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.sort",
        "name": "NestedSortValue"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        },
        {
          "name": "max_children",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.sort",
        "name": "NumericType"
      },
      "members": [
        {
          "name": "long"
        },
        {
          "name": "double"
        },
        {
          "name": "date"
        },
        {
          "name": "date_nanos"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.sort",
        "name": "Sort"
      },
      "properties": [
        {
          "name": "missing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "aggregations",
              "name": "Missing"
            }
          },
          "required": false
        },
        {
          "name": "mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "SortMode"
            }
          },
          "required": false
        },
        {
          "name": "nested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "NestedSort"
            }
          },
          "required": false
        },
        {
          "name": "numeric_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "NumericType"
            }
          },
          "required": false
        },
        {
          "name": "unmapped_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "order",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search.sort",
              "name": "SortOrder"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.sort",
        "name": "SortMode"
      },
      "members": [
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "median"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.search.sort",
        "name": "SortOrder"
      },
      "members": [
        {
          "name": "asc"
        },
        {
          "name": "desc"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.source_filtering",
        "name": "DocValueField"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.search.source_filtering",
        "name": "SourceFilter"
      },
      "properties": [
        {
          "name": "excludes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fields"
            }
          },
          "required": false
        },
        {
          "name": "includes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fields"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters",
        "name": "Suggest"
      },
      "generics": [
        "T"
      ],
      "properties": [
        {
          "name": "length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "offset",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "options",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.suggesters",
                "name": "SuggestOption"
              },
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "generic",
                    "name": "T"
                  }
                }
              ]
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters",
        "name": "SuggestBucket"
      },
      "properties": [
        {
          "name": "completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.completion_suggester",
              "name": "CompletionSuggester"
            }
          },
          "required": true
        },
        {
          "name": "phrase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester",
              "name": "PhraseSuggester"
            }
          },
          "required": true
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "regex",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.term_suggester",
              "name": "TermSuggester"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters",
        "name": "SuggestDictionary"
      },
      "generics": [
        "T"
      ],
      "properties": [
        {
          "name": "item",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.suggesters",
                "name": "Suggest"
              },
              "generics": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "generic",
                    "name": "T"
                  }
                }
              ]
            }
          },
          "required": true
        },
        {
          "name": "keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.suggesters",
                  "name": "Suggest"
                },
                "generics": [
                  {
                    "kind": "instance_of",
                    "type": {
                      "namespace": "generic",
                      "name": "T"
                    }
                  }
                ]
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters",
        "name": "SuggestOption"
      },
      "generics": [
        "TDocument"
      ],
      "properties": [
        {
          "name": "collate_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "contexts",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.suggesters.context_suggester",
                  "name": "Context"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "LazyDocument"
              }
            }
          },
          "required": true
        },
        {
          "name": "freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "highlighted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true,
          "description": "This is a comment that will be exposed",
          "annotations": {
            "alternate_name": "SuggestScore",
            "prop_x": "he\n*"
          }
        },
        {
          "name": "score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true,
          "annotations": {
            "alternate_name": "DocumentScore *"
          }
        },
        {
          "name": "_source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "generic",
              "name": "TDocument"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.completion_suggester",
        "name": "CompletionSuggester"
      },
      "properties": [
        {
          "name": "contexts",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.suggesters.context_suggester",
                  "name": "SuggestContextQuery"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "fuzzy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.completion_suggester",
              "name": "SuggestFuzziness"
            }
          },
          "required": true
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "regex",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "skip_duplicates",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.completion_suggester",
        "name": "SuggestFuzziness"
      },
      "properties": [
        {
          "name": "fuzziness",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Fuzziness"
            }
          },
          "required": true
        },
        {
          "name": "min_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "transpositions",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "unicode_aware",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "union",
      "name": {
        "namespace": "search.suggesters.context_suggester",
        "name": "Context"
      },
      "items": [
        {
          "kind": "instance_of",
          "type": {
            "namespace": "internal",
            "name": "string"
          }
        },
        {
          "kind": "instance_of",
          "type": {
            "namespace": "query_dsl.geo",
            "name": "GeoLocation"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.context_suggester",
        "name": "SuggestContextQuery"
      },
      "properties": [
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "context",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.context_suggester",
              "name": "Context"
            }
          },
          "required": true
        },
        {
          "name": "neighbours",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "common_options.geo",
                    "name": "Distance"
                  }
                }
              },
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "integer"
                  }
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "precision",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.geo",
                  "name": "Distance"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "integer"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "prefix",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester",
        "name": "DirectGenerator"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "max_edits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_inspections",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "max_term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "min_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "min_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "post_filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pre_filter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "suggest_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SuggestMode"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester",
        "name": "PhraseSuggestCollate"
      },
      "properties": [
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "prune",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester",
              "name": "PhraseSuggestCollateQuery"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester",
        "name": "PhraseSuggestCollateQuery"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester",
        "name": "PhraseSuggester"
      },
      "properties": [
        {
          "name": "collate",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester",
              "name": "PhraseSuggestCollate"
            }
          },
          "required": true
        },
        {
          "name": "confidence",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "direct_generator",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.suggesters.phrase_suggester",
                "name": "DirectGenerator"
              }
            }
          },
          "required": true
        },
        {
          "name": "force_unigrams",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "gram_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "highlight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester",
              "name": "PhraseSuggestHighlight"
            }
          },
          "required": true
        },
        {
          "name": "max_errors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "real_word_error_likelihood",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "separator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "smoothing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester.smoothing_model",
              "name": "SmoothingModelContainer"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "token_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester",
        "name": "PhraseSuggestHighlight"
      },
      "properties": [
        {
          "name": "post_tag",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pre_tag",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester.smoothing_model",
        "name": "LaplaceSmoothingModel"
      },
      "properties": [
        {
          "name": "alpha",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester.smoothing_model",
        "name": "LinearInterpolationSmoothingModel"
      },
      "properties": [
        {
          "name": "bigram_lambda",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "trigram_lambda",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "unigram_lambda",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester.smoothing_model",
        "name": "SmoothingModelContainer"
      },
      "properties": [
        {
          "name": "laplace",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester.smoothing_model",
              "name": "LaplaceSmoothingModel"
            }
          },
          "required": true
        },
        {
          "name": "linear_interpolation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester.smoothing_model",
              "name": "LinearInterpolationSmoothingModel"
            }
          },
          "required": true
        },
        {
          "name": "stupid_backoff",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.phrase_suggester.smoothing_model",
              "name": "StupidBackoffSmoothingModel"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.phrase_suggester.smoothing_model",
        "name": "StupidBackoffSmoothingModel"
      },
      "properties": [
        {
          "name": "discount",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.suggesters.term_suggester",
        "name": "StringDistance"
      },
      "members": [
        {
          "name": "internal"
        },
        {
          "name": "damerau_levenshtein"
        },
        {
          "name": "levenshtein"
        },
        {
          "name": "jaro_winkler"
        },
        {
          "name": "ngram"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "search.suggesters.term_suggester",
        "name": "SuggestSort"
      },
      "members": [
        {
          "name": "score"
        },
        {
          "name": "frequency"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.suggesters.term_suggester",
        "name": "TermSuggester"
      },
      "properties": [
        {
          "name": "lowercase_terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "max_edits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_inspections",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_term_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "min_doc_freq",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "float"
            }
          },
          "required": true
        },
        {
          "name": "min_word_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "prefix_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "shard_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "sort",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.term_suggester",
              "name": "SuggestSort"
            }
          },
          "required": true
        },
        {
          "name": "string_distance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.suggesters.term_suggester",
              "name": "StringDistance"
            }
          },
          "required": true
        },
        {
          "name": "suggest_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SuggestMode"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "search.validate",
        "name": "ValidateQueryRequest"
      },
      "description": "The query definition specified with the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        {
          "name": "all_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Execute validation on all shards instead of one random shard per index"
        },
        {
          "name": "analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The analyzer to use for the query string"
        },
        {
          "name": "analyze_wildcard",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        {
          "name": "default_operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "DefaultOperator"
            }
          },
          "required": false,
          "description": "The default operator for query string query (AND or OR)"
        },
        {
          "name": "df",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "The field to use as default where no field prefix is given in the query string"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        {
          "name": "explain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return detailed information about the error"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        {
          "name": "lenient",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        {
          "name": "query_on_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "rewrite",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Provide a more detailed explanation showing the actual Lucene query that will be executed."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.validate",
        "name": "ValidateQueryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "explanations",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.validate",
                "name": "ValidationExplanation"
              }
            }
          },
          "required": true
        },
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        },
        {
          "name": "valid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "search.validate",
        "name": "ValidationExplanation"
      },
      "properties": [
        {
          "name": "error",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "valid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.async_search.delete",
        "name": "AsyncSearchDeleteRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The async search ID"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.async_search.delete",
        "name": "AsyncSearchDeleteResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.async_search.get",
        "name": "AsyncSearchGetRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The async search ID"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "keep_alive",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "typed_keys",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "wait_for_completion_timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.async_search.get",
        "name": "AsyncSearchGetResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.async_search.submit",
        "name": "AsyncSearchSubmitRequest"
      },
      "description": "The search definition using the Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": false,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggs",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "allow_no_indices",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "allow_partial_search_results",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "analyzer",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "analyze_wildcard",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "batched_reduce_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "collapse",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.collapsing",
                "name": "FieldCollapse"
              }
            },
            "required": false
          },
          {
            "name": "default_operator",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "DefaultOperator"
              }
            },
            "required": false
          },
          {
            "name": "df",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "docvalue_fields",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              }
            },
            "required": false
          },
          {
            "name": "expand_wildcards",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "ExpandWildcards"
              }
            },
            "required": false
          },
          {
            "name": "explain",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "from",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "highlight",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "search.search.highlighting",
                "name": "Highlight"
              }
            },
            "required": false
          },
          {
            "name": "ignore_throttled",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "ignore_unavailable",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "indices_boost",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "IndexName"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "double"
                }
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "IndicesBoostFormatter"
            }
          },
          {
            "name": "keep_alive",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "keep_on_completion",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "lenient",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "max_concurrent_shard_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "min_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "post_filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "preference",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "profile",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "query_on_query_string",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "request_cache",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "rescore",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.rescoring",
                  "name": "Rescore"
                }
              }
            },
            "required": false
          },
          {
            "name": "routing",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Routing"
              }
            },
            "required": false
          },
          {
            "name": "script_fields",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.scripting",
                  "name": "ScriptField"
                }
              }
            },
            "required": false
          },
          {
            "name": "search_after",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "search_type",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "SearchType"
              }
            },
            "required": false
          },
          {
            "name": "sequence_number_primary_term",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.search.sort",
                  "name": "Sort"
                }
              }
            },
            "required": false
          },
          {
            "name": "_source",
            "type": {
              "kind": "union_of",
              "items": [
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "boolean"
                  }
                },
                {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "search.search.source_filtering",
                    "name": "SourceFilter"
                  }
                }
              ]
            },
            "required": false
          },
          {
            "name": "stats",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "stored_fields",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              }
            },
            "required": false
          },
          {
            "name": "suggest",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "search.suggesters",
                  "name": "SuggestBucket"
                }
              }
            },
            "required": false
          },
          {
            "name": "suggest_field",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "suggest_mode",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "SuggestMode"
              }
            },
            "required": false
          },
          {
            "name": "suggest_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "suggest_text",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "terminate_after",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "track_scores",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "track_total_hits",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "typed_keys",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "version",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "wait_for_completion_timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.async_search.submit",
        "name": "AsyncSearchSubmitResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern",
        "name": "CreateAutoFollowPatternRequest"
      },
      "description": "The specification of the auto follow pattern",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the auto follow pattern."
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "follow_index_pattern",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "leader_index_patterns",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "max_outstanding_read_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_outstanding_write_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "max_poll_timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_retry_delay",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "remote_cluster",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern",
        "name": "CreateAutoFollowPatternResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern",
        "name": "DeleteAutoFollowPatternRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the auto follow pattern."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern",
        "name": "DeleteAutoFollowPatternResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
        "name": "AutoFollowPattern"
      },
      "properties": [
        {
          "name": "follow_index_pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "leader_index_patterns",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "max_outstanding_read_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_outstanding_write_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "read_poll_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_read_request_operation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_read_request_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_retry_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_write_buffer_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_write_buffer_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_write_request_operation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_write_request_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "remote_cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
        "name": "GetAutoFollowPatternRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "The name of the auto follow pattern."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
        "name": "GetAutoFollowPatternResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "patterns",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
                "name": "AutoFollowPattern"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "AutoFollowPatternFormatter"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern",
        "name": "PauseAutoFollowPatternRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the auto follow pattern that should pause discovering new indices to follow."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern",
        "name": "PauseAutoFollowPatternResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern",
        "name": "ResumeAutoFollowPatternRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the auto follow pattern to resume discovering new indices to follow."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern",
        "name": "ResumeAutoFollowPatternResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.create_follow_index",
        "name": "CreateFollowIndexRequest"
      },
      "description": "The name of the leader index and other optional ccr related parameters",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the follower index"
        }
      ],
      "query": [
        {
          "name": "wait_for_active_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Sets the number of shard copies that must be active before returning. Defaults to 0. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "leader_index",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          },
          {
            "name": "max_outstanding_read_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_outstanding_write_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_retry_delay",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "read_poll_timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "remote_cluster",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.create_follow_index",
        "name": "CreateFollowIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "follow_index_created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "follow_index_shards_acked",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "index_following_started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexReadException"
      },
      "properties": [
        {
          "name": "exception",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "ErrorCause"
            }
          },
          "required": true
        },
        {
          "name": "from_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retries",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexShardStats"
      },
      "properties": [
        {
          "name": "bytes_read",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failed_read_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "failed_write_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "fatal_exception",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "ErrorCause"
            }
          },
          "required": true
        },
        {
          "name": "follower_aliases_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "follower_global_checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "follower_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "follower_mapping_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "follower_max_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "follower_settings_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "last_requested_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "leader_global_checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "leader_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "leader_max_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "operations_read",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "operations_written",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "outstanding_read_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "outstanding_write_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "read_exceptions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
                "name": "FollowIndexReadException"
              }
            }
          },
          "required": true
        },
        {
          "name": "remote_cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shard_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "successful_read_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "successful_write_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_since_last_read_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_read_remote_exec_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_read_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_write_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "write_buffer_operation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "write_buffer_size_in_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexStats"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "shards",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
                "name": "FollowIndexShardStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index patterns; use `_all` to perform the operation on all indices"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
                "name": "FollowIndexStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowConfig"
      },
      "properties": [
        {
          "name": "max_outstanding_read_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_outstanding_write_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_read_request_operation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_read_request_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_retry_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_write_buffer_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_write_buffer_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_write_request_operation_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "max_write_request_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "read_poll_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowerIndexStatus"
      },
      "members": [
        {
          "name": "active"
        },
        {
          "name": "paused"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowerInfo"
      },
      "properties": [
        {
          "name": "follower_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "leader_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "parameters",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
              "name": "FollowConfig"
            }
          },
          "required": true
        },
        {
          "name": "remote_cluster",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
              "name": "FollowerIndexStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index patterns; use `_all` to perform the operation on all indices"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "follower_indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
                "name": "FollowerInfo"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index",
        "name": "ForgetFollowerIndexRequest"
      },
      "description": "the name and UUID of the follower index, the name of the cluster containing the follower index, and the alias from the perspective of that cluster for the remote cluster containing the leader index",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "the name of the leader index for which specified follower retention leases should be removed"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "follower_cluster",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "follower_index",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          },
          {
            "name": "follower_index_uuid",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "leader_remote_cluster",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index",
        "name": "ForgetFollowerIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_shards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.hit",
              "name": "ShardStatistics"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index",
        "name": "PauseFollowIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the follower index that should pause following its leader index."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index",
        "name": "PauseFollowIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index",
        "name": "ResumeFollowIndexRequest"
      },
      "description": "The name of the leader index and other optional ccr related parameters",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the follow index to resume following."
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "max_outstanding_read_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_outstanding_write_requests",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_read_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_retry_delay",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_write_buffer_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_operation_count",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "max_write_request_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "read_poll_timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index",
        "name": "ResumeFollowIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.unfollow_index",
        "name": "UnfollowIndexRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the follower index that should be turned into a regular index."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.follow.unfollow_index",
        "name": "UnfollowIndexResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "AutoFollowedCluster"
      },
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "last_seen_metadata_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_since_last_check_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrAutoFollowStats"
      },
      "properties": [
        {
          "name": "auto_followed_clusters",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.stats",
                "name": "AutoFollowedCluster"
              }
            }
          },
          "required": true
        },
        {
          "name": "number_of_failed_follow_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "number_of_failed_remote_cluster_state_requests",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "number_of_successful_follow_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "recent_auto_follow_errors",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrFollowStats"
      },
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
                "name": "FollowIndexStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "auto_follow_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.cross_cluster_replication.stats",
              "name": "CcrAutoFollowStats"
            }
          },
          "required": true
        },
        {
          "name": "follow_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.cross_cluster_replication.stats",
              "name": "CcrFollowStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich",
        "name": "EnrichPolicy"
      },
      "properties": [
        {
          "name": "enrich_fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "match_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich",
        "name": "NamedPolicy"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.enrich",
            "name": "EnrichPolicy"
          }
        }
      ],
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich",
        "name": "NamedPolicyConfig"
      },
      "properties": [
        {
          "name": "geo_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.enrich",
              "name": "NamedPolicy"
            }
          },
          "required": true
        },
        {
          "name": "match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.enrich",
              "name": "NamedPolicy"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich",
        "name": "NamedPolicyMetadata"
      },
      "properties": [
        {
          "name": "config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.enrich",
              "name": "NamedPolicyConfig"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.enrich.delete_policy",
        "name": "DeleteEnrichPolicyRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the enrich policy"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.delete_policy",
        "name": "DeleteEnrichPolicyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "EnrichPolicyPhase"
      },
      "members": [
        {
          "name": "SCHEDULED"
        },
        {
          "name": "RUNNING"
        },
        {
          "name": "COMPLETE"
        },
        {
          "name": "FAILED"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "ExecuteEnrichPolicyRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the enrich policy"
        }
      ],
      "query": [
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should the request should block until the execution is complete."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "ExecuteEnrichPolicyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.enrich.execute_policy",
              "name": "ExecuteEnrichPolicyStatus"
            }
          },
          "required": true
        },
        {
          "name": "task_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TaskId"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "ExecuteEnrichPolicyStatus"
      },
      "properties": [
        {
          "name": "phase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.enrich.execute_policy",
              "name": "EnrichPolicyPhase"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.enrich.get_policy",
        "name": "GetEnrichPolicyRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of enrich policy names"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.get_policy",
        "name": "GetEnrichPolicyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "policies",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.enrich",
                "name": "NamedPolicyMetadata"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.enrich.put_policy",
        "name": "PutEnrichPolicyRequest"
      },
      "description": "The enrich policy to register",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the enrich policy"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "geo_match",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.enrich",
                "name": "EnrichPolicy"
              }
            },
            "required": false
          },
          {
            "name": "match",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.enrich",
                "name": "EnrichPolicy"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.put_policy",
        "name": "PutEnrichPolicyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.stats",
        "name": "CoordinatorStats"
      },
      "properties": [
        {
          "name": "executed_searches_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "node_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "queue_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "remote_requests_current",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "remote_requests_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.enrich.stats",
        "name": "EnrichStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.stats",
        "name": "EnrichStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "coordinator_stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.enrich.stats",
                "name": "CoordinatorStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "executing_policies",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.enrich.stats",
                "name": "ExecutingPolicy"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.enrich.stats",
        "name": "ExecutingPolicy"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "task",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "cluster.task_management.get_task",
              "name": "TaskInfo"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.graph.explore",
        "name": "GraphExploreRequest"
      },
      "description": "Graph Query DSL",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeNames"
            }
          },
          "required": false,
          "description": "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      ],
      "query": [
        {
          "name": "routing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Routing"
            }
          },
          "required": false,
          "description": "Specific routing value"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Explicit operation timeout"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "connections",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.request",
                "name": "Hop"
              }
            },
            "required": false
          },
          {
            "name": "controls",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.request",
                "name": "GraphExploreControls"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "vertices",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.graph.explore.request",
                  "name": "GraphVertexDefinition"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore",
        "name": "GraphExploreResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "connections",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.response",
                "name": "GraphConnection"
              }
            }
          },
          "required": true
        },
        {
          "name": "failures",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common",
                "name": "ShardFailure"
              }
            }
          },
          "required": true
        },
        {
          "name": "timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "took",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "vertices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.response",
                "name": "GraphVertex"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.request",
        "name": "GraphExploreControls"
      },
      "properties": [
        {
          "name": "sample_diversity",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.graph.explore.request",
              "name": "SampleDiversity"
            }
          },
          "required": true
        },
        {
          "name": "sample_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "use_significance",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.request",
        "name": "GraphVertexDefinition"
      },
      "properties": [
        {
          "name": "exclude",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "include",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.request",
                "name": "GraphVertexInclude"
              }
            }
          },
          "required": true
        },
        {
          "name": "min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "shard_min_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.request",
        "name": "GraphVertexInclude"
      },
      "properties": [
        {
          "name": "boost",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.request",
        "name": "Hop"
      },
      "properties": [
        {
          "name": "connections",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.graph.explore.request",
              "name": "Hop"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        },
        {
          "name": "vertices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.graph.explore.request",
                "name": "GraphVertexDefinition"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.request",
        "name": "SampleDiversity"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "max_docs_per_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.response",
        "name": "GraphConnection"
      },
      "properties": [
        {
          "name": "doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "target",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.graph.explore.response",
        "name": "GraphVertex"
      },
      "properties": [
        {
          "name": "depth",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "weight",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm",
        "name": "Phase"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm.actions",
                "name": "LifecycleAction"
              }
            }
          },
          "required": true
        },
        {
          "name": "min_age",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm",
        "name": "Phases"
      },
      "properties": [
        {
          "name": "cold",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phase"
            }
          },
          "required": true
        },
        {
          "name": "delete",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phase"
            }
          },
          "required": true
        },
        {
          "name": "hot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phase"
            }
          },
          "required": true
        },
        {
          "name": "warm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phase"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm",
        "name": "Policy"
      },
      "properties": [
        {
          "name": "phases",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phases"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.actions",
        "name": "LifecycleAction"
      },
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.delete_lifecycle",
        "name": "DeleteLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the index lifecycle policy"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.delete_lifecycle",
        "name": "DeleteLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.explain_lifecycle",
        "name": "ExplainLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index to explain"
        }
      ],
      "query": [
        {
          "name": "only_errors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "filters the indices included in the response to ones in an ILM error state, implies only_managed"
        },
        {
          "name": "only_managed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "filters the indices included in the response to ones managed by ILM"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.explain_lifecycle",
        "name": "ExplainLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "indices",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm.explain_lifecycle",
                "name": "LifecycleExplain"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.explain_lifecycle",
        "name": "LifecycleExplain"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "action_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "age",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "failed_step",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "failed_step_retry_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "is_auto_retryable_error",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "lifecycle_date_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "managed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "phase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "phase_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "step",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "step_info",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "step_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.get_lifecycle",
        "name": "GetLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "The name of the index lifecycle policy"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.get_lifecycle",
        "name": "GetLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm.get_lifecycle",
                "name": "LifecyclePolicy"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.get_lifecycle",
        "name": "LifecyclePolicy"
      },
      "properties": [
        {
          "name": "modified_date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Policy"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.get_status",
        "name": "GetIlmStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.get_status",
        "name": "GetIlmStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "operation_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm.get_status",
              "name": "LifecycleOperationMode"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.ilm.get_status",
        "name": "LifecycleOperationMode"
      },
      "members": [
        {
          "name": "RUNNING"
        },
        {
          "name": "STOPPING"
        },
        {
          "name": "STOPPED"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.move_to_step",
        "name": "MoveToStepRequest"
      },
      "description": "The new lifecycle step to move to",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index whose lifecycle step is to change"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "current_step",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm.move_to_step",
                "name": "StepKey"
              }
            },
            "required": false
          },
          {
            "name": "next_step",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm.move_to_step",
                "name": "StepKey"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.move_to_step",
        "name": "MoveToStepResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.move_to_step",
        "name": "StepKey"
      },
      "properties": [
        {
          "name": "action",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "phase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.put_lifecycle",
        "name": "PutLifecycleRequest"
      },
      "description": "The lifecycle policy definition to register",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The name of the index lifecycle policy"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "policy",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ilm",
                "name": "Policy"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.put_lifecycle",
        "name": "PutLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.remove_policy",
        "name": "RemovePolicyRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the index to remove policy on"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.remove_policy",
        "name": "RemovePolicyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "failed_indexes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "has_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.retry",
        "name": "RetryIlmRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true,
          "description": "The name of the indices (comma-separated) whose failed lifecycle step is to be retry"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.retry",
        "name": "RetryIlmResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.start",
        "name": "StartIlmRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.start",
        "name": "StartIlmResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ilm.stop",
        "name": "StopIlmRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ilm.stop",
        "name": "StopIlmResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "MinimalLicenseInformation"
      },
      "properties": [
        {
          "name": "expiry_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseType"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseType"
            }
          },
          "required": true
        },
        {
          "name": "uid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "NativeCodeInformation"
      },
      "properties": [
        {
          "name": "build_hash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackBuildInformation"
      },
      "properties": [
        {
          "name": "date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "hash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackFeature"
      },
      "properties": [
        {
          "name": "available",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "native_code_info",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "NativeCodeInformation"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackFeatures"
      },
      "properties": [
        {
          "name": "analytics",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "ccr",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "data_frame",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "data_science",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "enrich",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "flattened",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "frozen_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "graph",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "ilm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "logstash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "ml",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "monitoring",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "rollup",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "security",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "slm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "spatial",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "sql",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "transform",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "vectors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "voting_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        },
        {
          "name": "watcher",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeature"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "categories",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Comma-separated list of info categories. Can be any of: build, license, features"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "build",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackBuildInformation"
            }
          },
          "required": true
        },
        {
          "name": "features",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "XPackFeatures"
            }
          },
          "required": true
        },
        {
          "name": "license",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_info",
              "name": "MinimalLicenseInformation"
            }
          },
          "required": true
        },
        {
          "name": "tagline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "AlertingCount"
      },
      "properties": [
        {
          "name": "active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "AlertingExecution"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "ExecutionAction"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "AlertingInput"
      },
      "properties": [
        {
          "name": "input",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "AlertingCount"
              }
            }
          },
          "required": true
        },
        {
          "name": "trigger",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "AlertingCount"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "AlertingUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "AlertingCount"
            }
          },
          "required": true
        },
        {
          "name": "execution",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "AlertingExecution"
            }
          },
          "required": true
        },
        {
          "name": "watch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "AlertingInput"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "AuditUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "SecurityFeatureToggle"
          }
        }
      ],
      "properties": [
        {
          "name": "outputs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "CcrUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "auto_follow_patterns_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "follower_indices_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "DataFeed"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "ExecutionAction"
      },
      "properties": [
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "FlattenedUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "IlmPolicyStatistics"
      },
      "properties": [
        {
          "name": "indices_managed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "phases",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm",
              "name": "Phases"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "IlmUsage"
      },
      "properties": [
        {
          "name": "policy_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "policy_stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "IlmPolicyStatistics"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "IpFilterUsage"
      },
      "properties": [
        {
          "name": "http",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "transport",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "Job"
      },
      "properties": [
        {
          "name": "allow_lazy_open",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "analysis_config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "AnalysisConfig"
            }
          },
          "required": true
        },
        {
          "name": "analysis_limits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "AnalysisLimits"
            }
          },
          "required": true
        },
        {
          "name": "background_persist_interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "data_description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "DataDescription"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "finished_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_plot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "ModelPlotConfig"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshot_retention_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "renormalization_window_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "results_index_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "results_retention_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "JobStatistics"
      },
      "properties": [
        {
          "name": "avg",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "max",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "min",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "MachineLearningUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "datafeeds",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "DataFeed"
              }
            }
          },
          "required": true
        },
        {
          "name": "jobs",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "Job"
              }
            }
          },
          "required": true
        },
        {
          "name": "node_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "MonitoringUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "collection_enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "enabled_exporters",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "QueryUsage"
      },
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "paging",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "RealmUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "order",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "RoleMappingUsage"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "RoleUsage"
      },
      "properties": [
        {
          "name": "dls",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "fls",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SecurityFeatureToggle"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SecurityUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "anonymous",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SecurityFeatureToggle"
            }
          },
          "required": true
        },
        {
          "name": "audit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "AuditUsage"
            }
          },
          "required": true
        },
        {
          "name": "ipfilter",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "IpFilterUsage"
            }
          },
          "required": true
        },
        {
          "name": "realms",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "RealmUsage"
              }
            }
          },
          "required": true
        },
        {
          "name": "role_mapping",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "RoleMappingUsage"
              }
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "RoleUsage"
              }
            }
          },
          "required": true
        },
        {
          "name": "ssl",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SslUsage"
            }
          },
          "required": true
        },
        {
          "name": "system_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SecurityFeatureToggle"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SlmUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "policy_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "policy_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SnapshotLifecycleStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SnapshotLifecycleStats"
      },
      "properties": [
        {
          "name": "retention_deletion_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "retention_deletion_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_runs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshot_deletion_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_taken",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SqlUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "features",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        },
        {
          "name": "queries",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "QueryUsage"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "SslUsage"
      },
      "properties": [
        {
          "name": "http",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SecurityFeatureToggle"
            }
          },
          "required": true
        },
        {
          "name": "transport",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SecurityFeatureToggle"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "VectorUsage"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.info.x_pack_usage",
            "name": "XPackUsage"
          }
        }
      ],
      "properties": [
        {
          "name": "dense_vector_dims_avg_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "dense_vector_fields_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "sparse_vector_fields_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "XPackUsage"
      },
      "properties": [
        {
          "name": "available",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "XPackUsageRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "master_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Specify timeout for watch write operation"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "XPackUsageResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "watcher",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "AlertingUsage"
            }
          },
          "required": true
        },
        {
          "name": "ccr",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "CcrUsage"
            }
          },
          "required": true
        },
        {
          "name": "data_frame",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "data_science",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "enrich",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "flattened",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "FlattenedUsage"
            }
          },
          "required": true
        },
        {
          "name": "graph",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "ilm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "IlmUsage"
            }
          },
          "required": true
        },
        {
          "name": "logstash",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "ml",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "MachineLearningUsage"
            }
          },
          "required": true
        },
        {
          "name": "monitoring",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "MonitoringUsage"
            }
          },
          "required": true
        },
        {
          "name": "rollup",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "security",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SecurityUsage"
            }
          },
          "required": true
        },
        {
          "name": "slm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SlmUsage"
            }
          },
          "required": true
        },
        {
          "name": "sql",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "SqlUsage"
            }
          },
          "required": true
        },
        {
          "name": "transform",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        },
        {
          "name": "vectors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "VectorUsage"
            }
          },
          "required": true
        },
        {
          "name": "voting_only",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "XPackUsage"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.delete_license",
        "name": "DeleteLicenseRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.delete_license",
        "name": "DeleteLicenseResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.get_basic_license_status",
        "name": "GetBasicLicenseStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.get_basic_license_status",
        "name": "GetBasicLicenseStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "eligible_to_start_basic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "GetLicenseRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "accept_enterprise",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If the active license is an enterprise license, return type as 'enterprise' (default: false)"
        },
        {
          "name": "local",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Return local information, do not retrieve the state from master node (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "GetLicenseResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "license",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseInformation"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "License"
      },
      "properties": [
        {
          "name": "expiry_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "issue_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "issued_to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "issuer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "signature",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseType"
            }
          },
          "required": true
        },
        {
          "name": "uid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "LicenseInformation"
      },
      "properties": [
        {
          "name": "expiry_date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "expiry_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "issue_date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "issue_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "issued_to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "issuer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_nodes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "max_resource_units",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseStatus"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseType"
            }
          },
          "required": true
        },
        {
          "name": "uid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "expirty_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "start_date_in_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "LicenseStatus"
      },
      "members": [
        {
          "name": "active"
        },
        {
          "name": "valid"
        },
        {
          "name": "invalid"
        },
        {
          "name": "expired"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.license.get_license",
        "name": "LicenseType"
      },
      "members": [
        {
          "name": "missing"
        },
        {
          "name": "trial"
        },
        {
          "name": "basic"
        },
        {
          "name": "standard"
        },
        {
          "name": "dev"
        },
        {
          "name": "silver"
        },
        {
          "name": "gold"
        },
        {
          "name": "platinum"
        },
        {
          "name": "enterprise"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.get_trial_license_status",
        "name": "GetTrialLicenseStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.get_trial_license_status",
        "name": "GetTrialLicenseStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "eligible_to_start_trial",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.post_license",
        "name": "LicenseAcknowledgement"
      },
      "properties": [
        {
          "name": "license",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.post_license",
        "name": "PostLicenseRequest"
      },
      "description": "licenses to be installed",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "acknowledge",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "whether the user has acknowledged acknowledge messages (default: false)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "license",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.license.get_license",
                "name": "License"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.post_license",
        "name": "PostLicenseResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "acknowledge",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.post_license",
              "name": "LicenseAcknowledgement"
            }
          },
          "required": true
        },
        {
          "name": "acknowledged",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "license_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.license.get_license",
              "name": "LicenseStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.start_basic_license",
        "name": "StartBasicLicenseRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "acknowledge",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "whether the user has acknowledged acknowledge messages (default: false)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.start_basic_license",
        "name": "StartBasicLicenseResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "acknowledge",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "basic_was_started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "error_message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.license.start_trial_license",
        "name": "StartTrialLicenseRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "acknowledge",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "whether the user has acknowledged acknowledge messages (default: false)"
        },
        {
          "name": "type_query_string",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.license.start_trial_license",
        "name": "StartTrialLicenseResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "error_message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "trial_was_started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.close_job",
        "name": "CloseJobRequest"
      },
      "description": "The URL params optionally sent in the body",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The name of the job to close"
        }
      ],
      "query": [
        {
          "name": "allow_no_jobs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"
        },
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "True if the job should be forcefully closed"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Controls the time to wait until a job has closed. Default to 30 minutes"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.close_job",
        "name": "CloseJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "closed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "ChunkingConfig"
      },
      "properties": [
        {
          "name": "mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "ChunkingMode"
            }
          },
          "required": true
        },
        {
          "name": "time_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "ChunkingMode"
      },
      "members": [
        {
          "name": "auto"
        },
        {
          "name": "manual"
        },
        {
          "name": "off"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "DatafeedConfig"
      },
      "properties": [
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "chunking_config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "ChunkingConfig"
            }
          },
          "required": true
        },
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_empty_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        },
        {
          "name": "query_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "script_fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "ScriptField"
              }
            }
          },
          "required": true
        },
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "DatafeedState"
      },
      "members": [
        {
          "name": "started"
        },
        {
          "name": "stopped"
        },
        {
          "name": "starting"
        },
        {
          "name": "stopping"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "DatafeedStats"
      },
      "properties": [
        {
          "name": "assignment_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "DiscoveryNode"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "DatafeedState"
            }
          },
          "required": true
        },
        {
          "name": "timing_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "DatafeedTimingStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "DatafeedTimingStats"
      },
      "properties": [
        {
          "name": "bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exponential_average_search_time_per_hour_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "search_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_search_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.datafeed",
        "name": "DiscoveryNode"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2"
          }
        },
        {
          "name": "ephemeral_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar",
        "name": "DeleteCalendarRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to delete"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar",
        "name": "DeleteCalendarResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar_event",
        "name": "DeleteCalendarEventRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to modify"
        },
        {
          "name": "event_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the event to remove from the calendar"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar_event",
        "name": "DeleteCalendarEventResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar_job",
        "name": "DeleteCalendarJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to modify"
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to remove from the calendar"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_calendar_job",
        "name": "DeleteCalendarJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Id"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_datafeed",
        "name": "DeleteDatafeedRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to delete"
        }
      ],
      "query": [
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "True if the datafeed should be forcefully deleted"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_datafeed",
        "name": "DeleteDatafeedResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_expired_data",
        "name": "DeleteExpiredDataRequest"
      },
      "description": "deleting expired data parameters",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_expired_data",
        "name": "DeleteExpiredDataResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_filter",
        "name": "DeleteFilterRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the filter to delete"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_filter",
        "name": "DeleteFilterResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_forecast",
        "name": "DeleteForecastRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job from which to delete forecasts"
        },
        {
          "name": "forecast_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the forecast to delete, can be comma delimited list. Leaving blank implies `_all`"
        }
      ],
      "query": [
        {
          "name": "allow_no_forecasts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if `_all` matches no forecasts"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Controls the time to wait until the forecast(s) are deleted. Default to 30 seconds"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_forecast",
        "name": "DeleteForecastResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_job",
        "name": "DeleteJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to delete"
        }
      ],
      "query": [
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "True if the job should be forcefully deleted"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Should this request wait until the operation has completed before returning"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_job",
        "name": "DeleteJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.delete_model_snapshot",
        "name": "DeleteModelSnapshotRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to fetch"
        },
        {
          "name": "snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the snapshot to delete"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.delete_model_snapshot",
        "name": "DeleteModelSnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.estimate_model_memory",
        "name": "EstimateModelMemoryRequest"
      },
      "description": "The analysis config, plus cardinality estimates for fields it references",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "analysis_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisConfig"
              }
            },
            "required": false
          },
          {
            "name": "max_bucket_cardinality",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "long"
                }
              }
            },
            "required": false
          },
          {
            "name": "overall_cardinality",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Field"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "long"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.estimate_model_memory",
        "name": "EstimateModelMemoryResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "model_memory_estimate",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.flush_job",
        "name": "FlushJobRequest"
      },
      "description": "Flush parameters",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The name of the job to flush"
        }
      ],
      "query": [
        {
          "name": "skip_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Skips time to the given value without generating results or updating the model for the skipped interval"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "advance_time",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          },
          {
            "name": "calc_interim",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.flush_job",
        "name": "FlushJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "flushed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.forecast_job",
        "name": "ForecastJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to forecast for"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "duration",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "expires_in",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.forecast_job",
        "name": "ForecastJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "forecast_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_anomaly_records",
        "name": "GetAnomalyRecordsRequest"
      },
      "description": "Record selection criteria",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "desc",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          },
          {
            "name": "exclude_interim",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          },
          {
            "name": "record_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_anomaly_records",
        "name": "GetAnomalyRecordsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "records",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "AnomalyRecord"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_buckets",
        "name": "GetBucketsRequest"
      },
      "description": "Bucket selection details if not provided in URI",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "ID of the job to get bucket results from"
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The timestamp of the desired single bucket result"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "anomaly_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "desc",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          },
          {
            "name": "exclude_interim",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "expand",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_buckets",
        "name": "GetBucketsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "buckets",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "ResultBucket"
              }
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_calendar_events",
        "name": "GetCalendarEventsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar containing the events"
        }
      ],
      "query": [
        {
          "name": "end",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": false,
          "description": "Get events before this time"
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Get events for the job. When this option is used calendar_id must be '_all'"
        },
        {
          "name": "start",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "Get events after this time"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "from",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_calendar_events",
        "name": "GetCalendarEventsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "events",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.post_calendar_events",
                "name": "ScheduledEvent"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_calendars",
        "name": "Calendar"
      },
      "properties": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_calendars",
        "name": "GetCalendarsRequest"
      },
      "description": "The from and size parameters optionally sent in the body",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the calendar to fetch"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_calendars",
        "name": "GetCalendarsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "calendars",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.get_calendars",
                "name": "Calendar"
              }
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_categories",
        "name": "GetCategoriesRequest"
      },
      "description": "Category selection details if not provided in URI",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The name of the job"
        },
        {
          "name": "category_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "CategoryId"
            }
          },
          "required": false,
          "description": "The identifier of the category definition of interest"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_categories",
        "name": "GetCategoriesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "categories",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "CategoryDefinition"
              }
            }
          },
          "required": true
        },
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_datafeed_stats",
        "name": "GetDatafeedStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the datafeeds stats to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_datafeeds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_datafeed_stats",
        "name": "GetDatafeedStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "datafeeds",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.datafeed",
                "name": "DatafeedStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_datafeeds",
        "name": "GetDatafeedsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the datafeeds to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_datafeeds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_datafeeds",
        "name": "GetDatafeedsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "datafeeds",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.datafeed",
                "name": "DatafeedConfig"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_filters",
        "name": "Filter"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "items",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_filters",
        "name": "GetFiltersRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the filter to fetch"
        }
      ],
      "query": [
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "skips a number of filters"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "specifies a max number of filters to get"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_filters",
        "name": "GetFiltersResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "filters",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.get_filters",
                "name": "Filter"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_influencers",
        "name": "GetInfluencersRequest"
      },
      "description": "Influencer selection criteria",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "Identifier for the anomaly detection job"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "descending",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          },
          {
            "name": "exclude_interim",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "influencer_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_influencers",
        "name": "GetInfluencersResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "influencers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "BucketInfluencer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_job_stats",
        "name": "GetJobStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the jobs stats to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_jobs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_job_stats",
        "name": "GetJobStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "JobStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_jobs",
        "name": "GetJobsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the jobs to fetch"
        }
      ],
      "query": [
        {
          "name": "allow_no_jobs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_jobs",
        "name": "GetJobsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.info.x_pack_usage",
                "name": "Job"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_model_snapshots",
        "name": "GetModelSnapshotsRequest"
      },
      "description": "Model snapshot selection criteria",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to fetch"
        },
        {
          "name": "snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the snapshot to fetch"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "desc",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          },
          {
            "name": "page",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job",
                "name": "Page"
              }
            },
            "required": false
          },
          {
            "name": "sort",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_model_snapshots",
        "name": "GetModelSnapshotsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshots",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.process",
                "name": "ModelSnapshot"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.get_overall_buckets",
        "name": "GetOverallBucketsRequest"
      },
      "description": "Overall bucket selection details if not provided in URI",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The job IDs for which to calculate overall bucket results"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "allow_no_jobs",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "bucket_span",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          },
          {
            "name": "exclude_interim",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "overall_score",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            },
            "required": false
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false
          },
          {
            "name": "top_n",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.get_overall_buckets",
        "name": "GetOverallBucketsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "overall_buckets",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "OverallBucket"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job",
        "name": "Page"
      },
      "properties": [
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "AnalysisConfig"
      },
      "properties": [
        {
          "name": "bucket_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "categorization_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "categorization_filters",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "detectors",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "Detector"
              }
            }
          },
          "required": true
        },
        {
          "name": "influencers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "latency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "multivariate_by_fields",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "summary_count_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "AnalysisLimits"
      },
      "properties": [
        {
          "name": "categorization_examples_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "model_memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "AnalysisMemoryLimit"
      },
      "properties": [
        {
          "name": "model_memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "DataDescription"
      },
      "properties": [
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time_field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "time_format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "JobForecastStatistics"
      },
      "properties": [
        {
          "name": "memory_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "JobStatistics"
            }
          },
          "required": true
        },
        {
          "name": "processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "JobStatistics"
            }
          },
          "required": true
        },
        {
          "name": "records",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.info.x_pack_usage",
              "name": "JobStatistics"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            }
          },
          "required": true
        },
        {
          "name": "total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "JobState"
      },
      "members": [
        {
          "name": "closing"
        },
        {
          "name": "closed"
        },
        {
          "name": "opened"
        },
        {
          "name": "failed"
        },
        {
          "name": "opening"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "JobStats"
      },
      "properties": [
        {
          "name": "assignment_explanation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "data_counts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.process",
              "name": "DataCounts"
            }
          },
          "required": true
        },
        {
          "name": "forecasts_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "JobForecastStatistics"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_size_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.process",
              "name": "ModelSizeStats"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "DiscoveryNode"
            }
          },
          "required": true
        },
        {
          "name": "open_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "JobState"
            }
          },
          "required": true
        },
        {
          "name": "timing_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "TimingStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "MemoryStatus"
      },
      "members": [
        {
          "name": "ok"
        },
        {
          "name": "soft_limit"
        },
        {
          "name": "hard_limit"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "ModelPlotConfig"
      },
      "properties": [
        {
          "name": "terms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "ModelPlotConfigEnabled"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.config",
        "name": "TimingStats"
      },
      "properties": [
        {
          "name": "average_bucket_processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exponential_average_bucket_processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "exponential_average_bucket_processing_time_per_hour_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "maximum_bucket_processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "minimum_bucket_processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "AppliesTo"
      },
      "members": [
        {
          "name": "actual"
        },
        {
          "name": "typical"
        },
        {
          "name": "diff_from_typical"
        },
        {
          "name": "time"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "ConditionOperator"
      },
      "members": [
        {
          "name": "gt"
        },
        {
          "name": "gte"
        },
        {
          "name": "lt"
        },
        {
          "name": "lte"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "DetectionRule"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "RuleAction"
              }
            }
          },
          "required": true
        },
        {
          "name": "conditions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "RuleCondition"
              }
            }
          },
          "required": true
        },
        {
          "name": "scope",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "FilterRef"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "Detector"
      },
      "properties": [
        {
          "name": "custom_rules",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "DetectionRule"
              }
            }
          },
          "required": true
        },
        {
          "name": "detector_description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "detector_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "exclude_frequent",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.put_job",
              "name": "ExcludeFrequent"
            }
          },
          "required": true
        },
        {
          "name": "function",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "use_null",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "FilterRef"
      },
      "properties": [
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "filter_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.detectors",
              "name": "RuleFilterType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "RuleAction"
      },
      "members": [
        {
          "name": "skip_result"
        },
        {
          "name": "skip_model_update"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "RuleCondition"
      },
      "properties": [
        {
          "name": "applies_to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.detectors",
              "name": "AppliesTo"
            }
          },
          "required": true
        },
        {
          "name": "operator",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.detectors",
              "name": "ConditionOperator"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.job.detectors",
        "name": "RuleFilterType"
      },
      "members": [
        {
          "name": "include"
        },
        {
          "name": "exclude"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.process",
        "name": "DataCounts"
      },
      "properties": [
        {
          "name": "bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "earliest_record_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "empty_bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_record_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "invalid_date_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "last_data_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "latest_empty_bucket_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "latest_record_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "latest_sparse_bucket_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "missing_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "out_of_order_timestamp_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processed_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processed_record_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "sparse_bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.process",
        "name": "ModelSizeStats"
      },
      "properties": [
        {
          "name": "bucket_allocation_failures_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "log_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "memory_status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "MemoryStatus"
            }
          },
          "required": true
        },
        {
          "name": "model_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "result_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "total_by_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_over_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_partition_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.process",
        "name": "ModelSnapshot"
      },
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "latest_record_time_stamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "latest_result_time_stamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "model_size_stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.process",
              "name": "ModelSizeStats"
            }
          },
          "required": true
        },
        {
          "name": "retain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "snapshot_doc_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "AnomalyCause"
      },
      "properties": [
        {
          "name": "actual",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        },
        {
          "name": "by_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "by_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "correlated_by_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "function",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "function_description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "influencers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "Influence"
              }
            }
          },
          "required": true
        },
        {
          "name": "over_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "over_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "probability",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "typical",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "AnomalyRecord"
      },
      "properties": [
        {
          "name": "actual",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        },
        {
          "name": "bucket_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "by_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "by_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "causes",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "AnomalyCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "detector_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "function",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "function_description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "influencers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "Influence"
              }
            }
          },
          "required": true
        },
        {
          "name": "initial_record_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "is_interim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "over_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "over_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "probability",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "record_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "result_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "typical",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "double"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "BucketInfluencer"
      },
      "properties": [
        {
          "name": "bucket_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "influencer_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "influencer_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "influencer_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "initial_influencer_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "is_interim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "probability",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "result_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "CategoryDefinition"
      },
      "properties": [
        {
          "name": "category_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "examples",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_matching_length",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "regex",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "Influence"
      },
      "properties": [
        {
          "name": "influencer_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "influencer_field_values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "OverallBucket"
      },
      "properties": [
        {
          "name": "bucket_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "is_interim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "OverallBucketJobInfo"
              }
            }
          },
          "required": true
        },
        {
          "name": "overall_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "result_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "OverallBucketJobInfo"
      },
      "properties": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_anomaly_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "PartitionScore"
      },
      "properties": [
        {
          "name": "initial_record_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_field_value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "probability",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "record_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.job.results",
        "name": "ResultBucket"
      },
      "properties": [
        {
          "name": "anomaly_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "bucket_influencers",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "BucketInfluencer"
              }
            }
          },
          "required": true
        },
        {
          "name": "bucket_span",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "event_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "initial_anomaly_score",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "is_interim",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "partition_scores",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.results",
                "name": "PartitionScore"
              }
            }
          },
          "required": true
        },
        {
          "name": "processing_time_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "result_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "AnomalyDetectors"
      },
      "properties": [
        {
          "name": "categorization_analyzer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.machine_learning_info",
              "name": "CategorizationAnalyzer"
            }
          },
          "required": true
        },
        {
          "name": "categorization_examples_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "model_memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshot_retention_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "CategorizationAnalyzer"
      },
      "properties": [
        {
          "name": "filter",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "analysis.token_filters",
                "name": "TokenFilterBase"
              }
            }
          },
          "required": true
        },
        {
          "name": "tokenizer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "Datafeeds"
      },
      "properties": [
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "Defaults"
      },
      "properties": [
        {
          "name": "anomaly_detectors",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.machine_learning_info",
              "name": "AnomalyDetectors"
            }
          },
          "required": true
        },
        {
          "name": "datafeeds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.machine_learning_info",
              "name": "Datafeeds"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "Limits"
      },
      "properties": [
        {
          "name": "max_model_memory_limit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "MachineLearningInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "MachineLearningInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "defaults",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.machine_learning_info",
              "name": "Defaults"
            }
          },
          "required": true
        },
        {
          "name": "limits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.machine_learning_info",
              "name": "Limits"
            }
          },
          "required": true
        },
        {
          "name": "upgrade_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.open_job",
        "name": "OpenJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to open"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.open_job",
        "name": "OpenJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "opened",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.post_calendar_events",
        "name": "PostCalendarEventsRequest"
      },
      "description": "A list of events",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to modify"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "events",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.machine_learning.post_calendar_events",
                  "name": "ScheduledEvent"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.post_calendar_events",
        "name": "PostCalendarEventsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "events",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.post_calendar_events",
                "name": "ScheduledEvent"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.post_calendar_events",
        "name": "ScheduledEvent"
      },
      "properties": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "end_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "event_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true
        },
        {
          "name": "start_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.post_job_data",
        "name": "PostJobDataRequest"
      },
      "description": "The data to process",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The name of the job receiving the data"
        }
      ],
      "query": [
        {
          "name": "reset_end",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": false,
          "description": "Optional parameter to specify the end of the bucket resetting range"
        },
        {
          "name": "reset_start",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": false,
          "description": "Optional parameter to specify the start of the bucket resetting range"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "data",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.post_job_data",
        "name": "PostJobDataResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "earliest_record_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "empty_bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_bytes",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "input_record_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "invalid_date_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "last_data_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "latest_record_timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "missing_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "out_of_order_timestamp_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processed_field_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processed_record_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "sparse_bucket_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.preview_datafeed",
        "name": "PreviewDatafeedRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to preview"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.preview_datafeed",
        "name": "PreviewDatafeedResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "data",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TDocument"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.put_calendar",
        "name": "PutCalendarRequest"
      },
      "description": "The calendar details",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to create"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.put_calendar",
        "name": "PutCalendarResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.put_calendar_job",
        "name": "PutCalendarJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the calendar to modify"
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to add to the calendar"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.put_calendar_job",
        "name": "PutCalendarJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "calendar_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_ids",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.put_datafeed",
        "name": "PutDatafeedRequest"
      },
      "description": "The datafeed config",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to create"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore if the source indices expressions resolves to no concrete indices (default: true)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether source index expressions should get expanded to open or closed indices (default: open)"
        },
        {
          "name": "ignore_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore indices that are marked as throttled (default: true)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore unavailable indexes (default: false)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggregations",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "chunking_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.datafeed",
                "name": "ChunkingConfig"
              }
            },
            "required": false
          },
          {
            "name": "frequency",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "indices",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Indices"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "IndicesFormatter"
            }
          },
          {
            "name": "job_id",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Id"
              }
            },
            "required": false
          },
          {
            "name": "max_empty_searches",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "query_delay",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "script_fields",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.scripting",
                  "name": "ScriptField"
                }
              }
            },
            "required": false
          },
          {
            "name": "scroll_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.put_datafeed",
        "name": "PutDatafeedResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "chunking_config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "ChunkingConfig"
            }
          },
          "required": true
        },
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_empty_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        },
        {
          "name": "query_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "script_fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "ScriptField"
              }
            }
          },
          "required": true
        },
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.put_filter",
        "name": "PutFilterRequest"
      },
      "description": "The filter details",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the filter to create"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "items",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.put_filter",
        "name": "PutFilterResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "items",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.machine_learning.put_job",
        "name": "ExcludeFrequent"
      },
      "members": [
        {
          "name": "all"
        },
        {
          "name": "none"
        },
        {
          "name": "by"
        },
        {
          "name": "over"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.put_job",
        "name": "PutJobRequest"
      },
      "description": "The job",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to create"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "allow_lazy_open",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "analysis_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisConfig"
              }
            },
            "required": false
          },
          {
            "name": "analysis_limits",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisLimits"
              }
            },
            "required": false
          },
          {
            "name": "data_description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "DataDescription"
              }
            },
            "required": false
          },
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "model_plot",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "ModelPlotConfig"
              }
            },
            "required": false
          },
          {
            "name": "model_snapshot_retention_days",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "results_index_name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.put_job",
        "name": "PutJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "allow_lazy_open",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "analysis_config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "AnalysisConfig"
            }
          },
          "required": true
        },
        {
          "name": "analysis_limits",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "AnalysisLimits"
            }
          },
          "required": true
        },
        {
          "name": "background_persist_interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "data_description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "DataDescription"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_plot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.config",
              "name": "ModelPlotConfig"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "model_snapshot_retention_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "renormalization_window_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "results_index_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "results_retention_days",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.revert_model_snapshot",
        "name": "RevertModelSnapshotRequest"
      },
      "description": "Reversion options",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to fetch"
        },
        {
          "name": "snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the snapshot to revert to"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "delete_intervening_results",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.revert_model_snapshot",
        "name": "RevertModelSnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "model",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.process",
              "name": "ModelSnapshot"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.set_upgrade_mode",
        "name": "SetUpgradeModeRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to enable upgrade_mode ML setting or not. Defaults to false."
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Controls the time to wait before action times out. Defaults to 30 seconds"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.set_upgrade_mode",
        "name": "SetUpgradeModeResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.start_datafeed",
        "name": "StartDatafeedRequest"
      },
      "description": "The start datafeed parameters",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to start"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "end",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          },
          {
            "name": "start",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Date"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
            }
          },
          {
            "name": "timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.start_datafeed",
        "name": "StartDatafeedResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.stop_datafeed",
        "name": "StopDatafeedRequest"
      },
      "description": "The URL params optionally sent in the body",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to stop"
        }
      ],
      "query": [
        {
          "name": "allow_no_datafeeds",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "force",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "timeout",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.stop_datafeed",
        "name": "StopDatafeedResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "stopped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.update_data_feed",
        "name": "UpdateDatafeedRequest"
      },
      "description": "The datafeed update settings",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the datafeed to update"
        }
      ],
      "query": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore if the source indices expressions resolves to no concrete indices (default: true)"
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": false,
          "description": "Whether source index expressions should get expanded to open or closed indices (default: open)"
        },
        {
          "name": "ignore_throttled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore indices that are marked as throttled (default: true)"
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Ignore unavailable indexes (default: false)"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggregations",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "chunking_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.datafeed",
                "name": "ChunkingConfig"
              }
            },
            "required": false
          },
          {
            "name": "frequency",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "indices",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Indices"
              }
            },
            "required": false,
            "annotations": {
              "prop_serializer": "IndicesFormatter"
            }
          },
          {
            "name": "job_id",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Id"
              }
            },
            "required": false
          },
          {
            "name": "max_empty_searches",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "query_delay",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "script_fields",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "common_options.scripting",
                  "name": "ScriptField"
                }
              }
            },
            "required": false
          },
          {
            "name": "scroll_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.update_data_feed",
        "name": "UpdateDatafeedResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "chunking_config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.datafeed",
              "name": "ChunkingConfig"
            }
          },
          "required": true
        },
        {
          "name": "datafeed_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_empty_searches",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        },
        {
          "name": "query_delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "script_fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.scripting",
                "name": "ScriptField"
              }
            }
          },
          "required": true
        },
        {
          "name": "scroll_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.update_filter",
        "name": "UpdateFilterRequest"
      },
      "description": "The filter update",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the filter to update"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "add_items",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "remove_items",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.update_filter",
        "name": "UpdateFilterResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "filter_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "items",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.update_job",
        "name": "UpdateJobRequest"
      },
      "description": "The job update settings",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to create"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "allow_lazy_open",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "analysis_limits",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisMemoryLimit"
              }
            },
            "required": false
          },
          {
            "name": "background_persist_interval",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "custom_settings",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "model_plot_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "ModelPlotConfigEnabled"
              }
            },
            "required": false
          },
          {
            "name": "model_snapshot_retention_days",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "renormalization_window_days",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "results_retention_days",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.update_job",
        "name": "UpdateJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.update_model_snapshot",
        "name": "UpdateModelSnapshotRequest"
      },
      "description": "The model snapshot properties to update",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to fetch"
        },
        {
          "name": "snapshot_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the snapshot to update"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "retain",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.update_model_snapshot",
        "name": "UpdateModelSnapshotResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "model",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.machine_learning.job.process",
              "name": "ModelSnapshot"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.validate_detector",
        "name": "ValidateDetectorRequest"
      },
      "description": "The detector",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "detector",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.detectors",
                "name": "Detector"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.validate_detector",
        "name": "ValidateDetectorResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.machine_learning.validate_job",
        "name": "ValidateJobRequest"
      },
      "description": "The job config",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "analysis_config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisConfig"
              }
            },
            "required": false
          },
          {
            "name": "analysis_limits",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "AnalysisLimits"
              }
            },
            "required": false
          },
          {
            "name": "data_description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "DataDescription"
              }
            },
            "required": false
          },
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "model_plot",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.machine_learning.job.config",
                "name": "ModelPlotConfig"
              }
            },
            "required": false
          },
          {
            "name": "model_snapshot_retention_days",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "results_index_name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.machine_learning.validate_job",
        "name": "ValidateJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationInfo"
      },
      "properties": [
        {
          "name": "details",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "level",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.migration.deprecation_info",
              "name": "DeprecationWarningLevel"
            }
          },
          "required": true
        },
        {
          "name": "message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationInfoRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": false,
          "description": "Index pattern"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationInfoResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_settings",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.migration.deprecation_info",
                "name": "DeprecationInfo"
              }
            }
          },
          "required": true
        },
        {
          "name": "index_settings",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.migration.deprecation_info",
                  "name": "DeprecationInfo"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "node_settings",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.migration.deprecation_info",
                "name": "DeprecationInfo"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationWarningLevel"
      },
      "members": [
        {
          "name": "none"
        },
        {
          "name": "info"
        },
        {
          "name": "warning"
        },
        {
          "name": "critical"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.create_rollup_job",
        "name": "CreateRollupJobRequest"
      },
      "description": "The job configuration",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to create"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "cron",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "groups",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.rollup_configuration",
                "name": "RollupGroupings"
              }
            },
            "required": false
          },
          {
            "name": "index_pattern",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "metrics",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.roll_up.rollup_configuration",
                  "name": "RollupFieldMetric"
                }
              }
            },
            "required": false
          },
          {
            "name": "page_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "long"
              }
            },
            "required": false
          },
          {
            "name": "rollup_index",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.create_rollup_job",
        "name": "CreateRollupJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.delete_rollup_job",
        "name": "DeleteRollupJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to delete"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.delete_rollup_job",
        "name": "DeleteRollupJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "GetRollupCapabilitiesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the index to check rollup capabilities on, or left blank for all jobs"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "GetRollupCapabilitiesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.get_rollup_capabilities",
                "name": "RollupCapabilities"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "RollupCapabilities"
      },
      "properties": [
        {
          "name": "rollup_jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.get_rollup_capabilities",
                "name": "RollupCapabilitiesJob"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "RollupCapabilitiesJob"
      },
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            }
          },
          "required": true
        },
        {
          "name": "index_pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rollup_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "GetRollupIndexCapabilitiesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The rollup index or index pattern to obtain rollup capabilities from."
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "GetRollupIndexCapabilitiesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
                "name": "RollupIndexCapabilities"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "RollupIndexCapabilities"
      },
      "properties": [
        {
          "name": "rollup_jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
                "name": "RollupIndexCapabilitiesJob"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "RollupIndexCapabilitiesJob"
      },
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            },
            "value": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "index_pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "job_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rollup_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "GetRollupJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": false,
          "description": "The ID of the job(s) to fetch. Accepts glob patterns, or left blank for all jobs"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "GetRollupJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "jobs",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.get_rollup_job",
                "name": "RollupJobInformation"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "IndexingJobState"
      },
      "members": [
        {
          "name": "started"
        },
        {
          "name": "indexing"
        },
        {
          "name": "stopping"
        },
        {
          "name": "stopped"
        },
        {
          "name": "aborting"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "RollupJobConfiguration"
      },
      "properties": [
        {
          "name": "cron",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "groups",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.rollup_configuration",
              "name": "RollupGroupings"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index_pattern",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "metrics",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.rollup_configuration",
                "name": "RollupFieldMetric"
              }
            }
          },
          "required": true
        },
        {
          "name": "page_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "rollup_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "RollupJobInformation"
      },
      "properties": [
        {
          "name": "config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.get_rollup_job",
              "name": "RollupJobConfiguration"
            }
          },
          "required": true
        },
        {
          "name": "stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.get_rollup_job",
              "name": "RollupJobStats"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.get_rollup_job",
              "name": "RollupJobStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "RollupJobStats"
      },
      "properties": [
        {
          "name": "documents_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_time_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "pages_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "rollups_indexed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_time_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "trigger_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "RollupJobStatus"
      },
      "properties": [
        {
          "name": "current_position",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "job_state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.get_rollup_job",
              "name": "IndexingJobState"
            }
          },
          "required": true
        },
        {
          "name": "upgraded_doc_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "DateHistogramRollupGrouping"
      },
      "properties": [
        {
          "name": "delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "time_zone",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "HistogramRollupGrouping"
      },
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "RollupFieldMetric"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "metrics",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.roll_up.rollup_configuration",
                "name": "RollupMetric"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "RollupGroupings"
      },
      "properties": [
        {
          "name": "date_histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.rollup_configuration",
              "name": "DateHistogramRollupGrouping"
            }
          },
          "required": true
        },
        {
          "name": "histogram",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.rollup_configuration",
              "name": "HistogramRollupGrouping"
            }
          },
          "required": true
        },
        {
          "name": "terms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.roll_up.rollup_configuration",
              "name": "TermsRollupGrouping"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "RollupMetric"
      },
      "members": [
        {
          "name": "min"
        },
        {
          "name": "max"
        },
        {
          "name": "sum"
        },
        {
          "name": "avg"
        },
        {
          "name": "value_count"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_configuration",
        "name": "TermsRollupGrouping"
      },
      "properties": [
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.rollup_search",
        "name": "RollupSearchRequest"
      },
      "description": "The search request body",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "description": "The indices or index-pattern(s) (containing rollup or regular data) that should be searched"
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "TypeName"
            }
          },
          "required": false,
          "description": "The doc type inside the index"
        }
      ],
      "query": [
        {
          "name": "total_hits_as_integer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false
        },
        {
          "name": "typed_keys",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether aggregation and suggester names should be prefixed by their respective types in the response"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "aggs",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "aggregations",
                  "name": "AggregationContainer"
                }
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.rollup_search",
        "name": "RollupSearchResponse"
      },
      "generics": [
        "TDocument"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.start_rollup_job",
        "name": "StartRollupJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to start"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.start_rollup_job",
        "name": "StartRollupJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "started",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.roll_up.stop_rollup_job",
        "name": "StopRollupJobRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Id"
            }
          },
          "required": true,
          "description": "The ID of the job to stop"
        }
      ],
      "query": [
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Block for (at maximum) the specified duration while waiting for the job to stop.  Defaults to 30s."
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "True if the API should block until the job has fully stopped, false if should be executed async. Defaults to false."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.roll_up.stop_rollup_job",
        "name": "StopRollupJobResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "stopped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security",
        "name": "SecurityNode"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "ApiKeyPrivileges"
      },
      "properties": [
        {
          "name": "names",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "ApiKeyRole"
      },
      "properties": [
        {
          "name": "cluster",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.api_key.create_api_key",
                "name": "ApiKeyPrivileges"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "CreateApiKeyRequest"
      },
      "description": "The api key request to create an API key",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "expiration",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "role_descriptors",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.api_key.create_api_key",
                  "name": "ApiKeyRole"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "CreateApiKeyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "api_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "expiration",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.get_api_key",
        "name": "ApiKeys"
      },
      "properties": [
        {
          "name": "creation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "expiration",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "invalidated",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "realm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.api_key.get_api_key",
        "name": "GetApiKeyRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "API key id of the API key to be retrieved"
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "API key name of the API key to be retrieved"
        },
        {
          "name": "owner",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "flag to query API keys owned by the currently authenticated user"
        },
        {
          "name": "realm_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "realm name of the user who created this API key to be retrieved"
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "user name of the user who created this API key to be retrieved"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.get_api_key",
        "name": "GetApiKeyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "api_keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.api_key.get_api_key",
                "name": "ApiKeys"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.api_key.invalidate_api_key",
        "name": "InvalidateApiKeyRequest"
      },
      "description": "The api key request to invalidate API key(s)",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "id",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "owner",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "realm_name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "username",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.api_key.invalidate_api_key",
        "name": "InvalidateApiKeyResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "error_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "error_details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "invalidated_api_keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "previously_invalidated_api_keys",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.authenticate",
        "name": "AuthenticateRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.authenticate",
        "name": "AuthenticateResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "authentication_realm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.authenticate",
              "name": "RealmInfo"
            }
          },
          "required": true
        },
        {
          "name": "email",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "full_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "lookup_realm",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.authenticate",
              "name": "RealmInfo"
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.authenticate",
        "name": "RealmInfo"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.clear_cached_realms",
        "name": "ClearCachedRealmsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "realms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "Comma-separated list of realms to clear"
        }
      ],
      "query": [
        {
          "name": "usernames",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false,
          "description": "Comma-separated list of usernames to clear from the cache"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.clear_cached_realms",
        "name": "ClearCachedRealmsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security",
                "name": "SecurityNode"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.delete_privileges",
        "name": "DeletePrivilegesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Application name"
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Privilege name"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.delete_privileges",
        "name": "DeletePrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.delete_privileges",
                  "name": "FoundUserPrivilege"
                }
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.delete_privileges",
        "name": "FoundUserPrivilege"
      },
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.get_builtin_privileges",
        "name": "GetBuiltinPrivilegesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_builtin_privileges",
        "name": "GetBuiltinPrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.get_privileges",
        "name": "GetPrivilegesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "Application name"
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "Privilege name"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_privileges",
        "name": "GetPrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.put_privileges",
                  "name": "PrivilegesActions"
                }
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "ApplicationGlobalUserPrivileges"
      },
      "properties": [
        {
          "name": "manage",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.privileges.get_user_privileges",
              "name": "ManageUserPrivileges"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "ApplicationResourcePrivileges"
      },
      "properties": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "resources",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "FieldSecuritySettings"
      },
      "properties": [
        {
          "name": "except",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "grant",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "GetUserPrivilegesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "GetUserPrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "applications",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.privileges.get_user_privileges",
                "name": "ApplicationResourcePrivileges"
              }
            }
          },
          "required": true
        },
        {
          "name": "cluster",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "global",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.privileges.get_user_privileges",
                "name": "GlobalPrivileges"
              }
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.privileges.get_user_privileges",
                "name": "UserIndicesPrivileges"
              }
            }
          },
          "required": true
        },
        {
          "name": "run_as",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "GlobalPrivileges"
      },
      "properties": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.privileges.get_user_privileges",
              "name": "ApplicationGlobalUserPrivileges"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "ManageUserPrivileges"
      },
      "properties": [
        {
          "name": "applications",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "QueryUserPrivileges"
      },
      "properties": [
        {
          "name": "term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.privileges.get_user_privileges",
              "name": "TermUserPrivileges"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "TermUserPrivileges"
      },
      "properties": [
        {
          "name": "apps",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "UserIndicesPrivileges"
      },
      "properties": [
        {
          "name": "field_security",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.privileges.get_user_privileges",
              "name": "FieldSecuritySettings"
            }
          },
          "required": true
        },
        {
          "name": "names",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.privileges.get_user_privileges",
              "name": "QueryUserPrivileges"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "ApplicationPrivilegesCheck"
      },
      "properties": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "resources",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "HasPrivilegesRequest"
      },
      "description": "The privileges to test",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "user",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "Username"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "application",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.has_privileges",
                  "name": "ApplicationPrivilegesCheck"
                }
              }
            },
            "required": false
          },
          {
            "name": "cluster",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "index",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.has_privileges",
                  "name": "IndexPrivilegesCheck"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "HasPrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "application",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.has_privileges",
                  "name": "ResourcePrivileges"
                }
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "ApplicationsPrivilegesFormatter"
          }
        },
        {
          "name": "cluster",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            }
          },
          "required": true
        },
        {
          "name": "has_all_requested",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.privileges.has_privileges",
                "name": "ResourcePrivileges"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesPrivilegesFormatter"
          }
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "IndexPrivilegesCheck"
      },
      "properties": [
        {
          "name": "names",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "ResourcePrivileges"
      },
      "properties": [
        {
          "name": "privileges",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            }
          },
          "required": true
        },
        {
          "name": "resource",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PrivilegesActions"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PutPrivilegesRequest"
      },
      "description": "The privilege(s) to add",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "applications",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "dictionary_of",
                "key": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                },
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "x_pack.security.privileges.put_privileges",
                    "name": "PrivilegesActions"
                  }
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PutPrivilegesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.privileges.put_privileges",
                  "name": "PutPrivilegesStatus"
                }
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PutPrivilegesStatus"
      },
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role",
        "name": "FieldSecurity"
      },
      "properties": [
        {
          "name": "except",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        },
        {
          "name": "grant",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "Field"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role_mapping.delete_role_mapping",
        "name": "DeleteRoleMappingRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Role-mapping name"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.delete_role_mapping",
        "name": "DeleteRoleMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role_mapping.get_role_mapping",
        "name": "GetRoleMappingRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "A comma-separated list of role-mapping names"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.get_role_mapping",
        "name": "GetRoleMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.role_mapping.get_role_mapping",
                "name": "XPackRoleMapping"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.get_role_mapping",
        "name": "XPackRoleMapping"
      },
      "properties": [
        {
          "name": "enabled",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "rules",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.role_mapping.rules.role",
              "name": "RoleMappingRuleBase"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role_mapping.put_role_mapping",
        "name": "PutRoleMappingRequest"
      },
      "description": "The role mapping to add",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Role-mapping name"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "enabled",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "metadata",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "roles",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "rules",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.role_mapping.rules.role",
                "name": "RoleMappingRuleBase"
              }
            },
            "required": false
          },
          {
            "name": "run_as",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.put_role_mapping",
        "name": "PutRoleMappingResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "role_mapping",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.role_mapping.put_role_mapping",
              "name": "PutRoleMappingStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.put_role_mapping",
        "name": "PutRoleMappingStatus"
      },
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role_mapping.rules.role",
        "name": "RoleMappingRuleBase"
      },
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role.clear_cached_roles",
        "name": "ClearCachedRolesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": true,
          "description": "Role name"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.clear_cached_roles",
        "name": "ClearCachedRolesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "nodes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security",
                "name": "SecurityNode"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role.delete_role",
        "name": "DeleteRoleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Role name"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.delete_role",
        "name": "DeleteRoleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role.get_role",
        "name": "GetRoleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "A comma-separated list of role names"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.get_role",
        "name": "GetRoleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.role.get_role",
                "name": "XPackRole"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.get_role",
        "name": "XPackRole"
      },
      "properties": [
        {
          "name": "cluster",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.role.put_role",
                "name": "IndicesPrivileges"
              }
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "run_as",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.put_role",
        "name": "ApplicationPrivileges"
      },
      "properties": [
        {
          "name": "application",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "resources",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.put_role",
        "name": "IndicesPrivileges"
      },
      "properties": [
        {
          "name": "field_security",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.role",
              "name": "FieldSecurity"
            }
          },
          "required": true
        },
        {
          "name": "names",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "privileges",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.role.put_role",
        "name": "PutRoleRequest"
      },
      "description": "The role to add",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Role name"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "applications",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.role.put_role",
                  "name": "ApplicationPrivileges"
                }
              }
            },
            "required": false
          },
          {
            "name": "cluster",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          },
          {
            "name": "global",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "indices",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.security.role.put_role",
                  "name": "IndicesPrivileges"
                }
              }
            },
            "required": false
          },
          {
            "name": "metadata",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "run_as",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.put_role",
        "name": "PutRoleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "role",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.security.role.put_role",
              "name": "PutRoleStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.role.put_role",
        "name": "PutRoleStatus"
      },
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.change_password",
        "name": "ChangePasswordRequest"
      },
      "description": "the new password for the user",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "The username of the user to change the password for"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "password",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.change_password",
        "name": "ChangePasswordResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.delete_user",
        "name": "DeleteUserRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "username"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.delete_user",
        "name": "DeleteUserResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.disable_user",
        "name": "DisableUserRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The username of the user to disable"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.disable_user",
        "name": "DisableUserResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.enable_user",
        "name": "EnableUserRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The username of the user to enable"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.enable_user",
        "name": "EnableUserResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.get_user",
        "name": "GetUserRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of usernames"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.get_user",
        "name": "GetUserResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.user.get_user",
                "name": "XPackUser"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.get_user",
        "name": "XPackUser"
      },
      "properties": [
        {
          "name": "email",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "full_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "roles",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.security.user.get_user_access_token",
        "name": "AccessTokenGrantType"
      },
      "members": [
        {
          "name": "password"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.get_user_access_token",
        "name": "GetUserAccessTokenRequest"
      },
      "description": "The token request to get",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "grant_type",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.security.user.get_user_access_token",
                "name": "AccessTokenGrantType"
              }
            },
            "required": false
          },
          {
            "name": "scope",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.get_user_access_token",
        "name": "GetUserAccessTokenResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "access_token",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "expires_in",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "scope",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.invalidate_user_access_token",
        "name": "InvalidateUserAccessTokenRequest"
      },
      "description": "The token to invalidate",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.invalidate_user_access_token",
        "name": "InvalidateUserAccessTokenResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "error_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "error_details",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "ErrorCause"
              }
            }
          },
          "required": true
        },
        {
          "name": "invalidated_tokens",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "previously_invalidated_tokens",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.security.user.put_user",
        "name": "PutUserRequest"
      },
      "description": "The user to add",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The username of the User"
        }
      ],
      "query": [
        {
          "name": "refresh",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "Refresh"
            }
          },
          "required": false,
          "description": "If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "email",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "full_name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "metadata",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "password",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "password_hash",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "roles",
            "type": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.security.user.put_user",
        "name": "PutUserResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotLifecycleConfig"
      },
      "properties": [
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "include_global_state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesMultiSyntaxFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotLifecycleInProgress"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "start_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "uuid",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotLifecycleInvocationRecord"
      },
      "properties": [
        {
          "name": "snapshot_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotLifecyclePolicy"
      },
      "properties": [
        {
          "name": "config",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotLifecycleConfig"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "repository",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "retention",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotRetentionConfiguration"
            }
          },
          "required": true
        },
        {
          "name": "schedule",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "CronExpression"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotLifecyclePolicyMetadata"
      },
      "properties": [
        {
          "name": "in_progress",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotLifecycleInProgress"
            }
          },
          "required": true
        },
        {
          "name": "last_failure",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotLifecycleInvocationRecord"
            }
          },
          "required": true
        },
        {
          "name": "last_success",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotLifecycleInvocationRecord"
            }
          },
          "required": true
        },
        {
          "name": "modified_date_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "next_execution_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "DateTimeOffsetEpochMillisecondsFormatter"
          }
        },
        {
          "name": "policy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.slm",
              "name": "SnapshotLifecyclePolicy"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm",
        "name": "SnapshotRetentionConfiguration"
      },
      "properties": [
        {
          "name": "expire_after",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "max_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "min_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.delete_lifecycle",
        "name": "DeleteSnapshotLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the snapshot lifecycle policy to remove"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.delete_lifecycle",
        "name": "DeleteSnapshotLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.execute_lifecycle",
        "name": "ExecuteSnapshotLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the snapshot lifecycle policy to be executed"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.execute_lifecycle",
        "name": "ExecuteSnapshotLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "snapshot_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.execute_retention",
        "name": "ExecuteRetentionRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.execute_retention",
        "name": "ExecuteRetentionResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.get_lifecycle",
        "name": "GetSnapshotLifecycleRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "Comma-separated list of snapshot lifecycle policies to retrieve"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.get_lifecycle",
        "name": "GetSnapshotLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "DictionaryResponseBase"
          },
          "generics": [
            {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.slm",
                "name": "SnapshotLifecyclePolicyMetadata"
              }
            }
          ]
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.get_stats",
        "name": "GetSnapshotLifecycleStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.get_stats",
        "name": "GetSnapshotLifecycleStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "retention_deletion_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "retention_deletion_time_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_runs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "retention_timed_out",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_deleted",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshot_deletion_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_failed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "total_snapshots_taken",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.get_status",
        "name": "GetSnapshotLifecycleManagementStatusRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.get_status",
        "name": "GetSnapshotLifecycleManagementStatusResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "operation_mode",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.ilm.get_status",
              "name": "LifecycleOperationMode"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.put_lifecycle",
        "name": "PutSnapshotLifecycleRequest"
      },
      "description": "The snapshot lifecycle policy definition to register",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "policy_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the snapshot lifecycle policy"
        }
      ],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "config",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.slm",
                "name": "SnapshotLifecycleConfig"
              }
            },
            "required": false
          },
          {
            "name": "name",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "repository",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "retention",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.slm",
                "name": "SnapshotRetentionConfiguration"
              }
            },
            "required": false
          },
          {
            "name": "schedule",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "CronExpression"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.put_lifecycle",
        "name": "PutSnapshotLifecycleResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.start",
        "name": "StartSnapshotLifecycleManagementRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.start",
        "name": "StartSnapshotLifecycleManagementResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.slm.stop",
        "name": "StopSnapshotLifecycleManagementRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.slm.stop",
        "name": "StopSnapshotLifecycleManagementResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.sql.clear_sql_cursor",
        "name": "ClearSqlCursorRequest"
      },
      "description": "Specify the cursor value in the `cursor` element to clean the cursor.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "cursor",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.sql.clear_sql_cursor",
        "name": "ClearSqlCursorResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "succeeded",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.sql.query_sql",
        "name": "QuerySqlRequest"
      },
      "description": "Use the `query` element to start a query. Use the `cursor` element to continue a query.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false,
          "description": "a short version of the Accept header, e.g. json, yaml"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "columnar",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "cursor",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "fetch_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "time_zone",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.sql.query_sql",
        "name": "QuerySqlResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "columns",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.sql.query_sql",
                "name": "SqlColumn"
              }
            }
          },
          "required": true
        },
        {
          "name": "cursor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "rows",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.sql.query_sql",
                  "name": "SqlValue"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "values",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.sql.query_sql",
                  "name": "SqlValue"
                }
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.sql.query_sql",
        "name": "SqlColumn"
      },
      "properties": [
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.sql.query_sql",
        "name": "SqlValue"
      },
      "inherits": [
        {
          "type": {
            "namespace": "internal",
            "name": "LazyDocument"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.sql.translate_sql",
        "name": "TranslateSqlRequest"
      },
      "description": "Specify the query in the `query` element.",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "fetch_size",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            },
            "required": false
          },
          {
            "name": "filter",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "query_dsl.abstractions.container",
                "name": "QueryContainer"
              }
            },
            "required": false
          },
          {
            "name": "query",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "time_zone",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.sql.translate_sql",
        "name": "TranslateSqlResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search",
              "name": "SearchRequest"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ssl.get_certificates",
        "name": "ClusterCertificateInformation"
      },
      "properties": [
        {
          "name": "alias",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "expiry",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "format",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "has_private_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "serial_number",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "subject_dn",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.ssl.get_certificates",
        "name": "GetCertificatesRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.ssl.get_certificates",
        "name": "GetCertificatesResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "certificates",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.ssl.get_certificates",
                "name": "ClusterCertificateInformation"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform",
        "name": "TransformDestination"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "pipeline",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform",
        "name": "TransformSource"
      },
      "properties": [
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Indices"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "IndicesFormatter"
          }
        },
        {
          "name": "query",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "query_dsl.abstractions.container",
              "name": "QueryContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform",
        "name": "TransformSyncContainer"
      },
      "properties": [
        {
          "name": "time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform",
              "name": "TransformTimeSync"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform",
        "name": "TransformTimeSync"
      },
      "properties": [
        {
          "name": "delay",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.delete_transform",
        "name": "DeleteTransformRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the transform to delete"
        }
      ],
      "query": [
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "When `true`, the transform is deleted regardless of its current state. The default value is `false`, meaning that the transform must be `stopped` before it can be deleted."
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.delete_transform",
        "name": "DeleteTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.get_transform",
        "name": "GetTransformRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "The id or comma delimited list of id expressions of the transforms to get, '_all' or '*' implies get all transforms"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "skips a number of transform configs, defaults to 0"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false,
          "description": "specifies a max number of transforms to get, defaults to 100"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform",
        "name": "GetTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "transforms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.transform",
                "name": "Transform"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "GetTransformStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the transform for which to get stats. '_all' or '*' implies all transforms"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "skips a number of transform stats, defaults to 0"
        },
        {
          "name": "size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "specifies a max number of transform stats to get, defaults to 100"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "GetTransformStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "transforms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform.get_transform_stats",
                "name": "TransformStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "NodeAttributes"
      },
      "properties": [
        {
          "name": "attributes",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "ephemeral_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "transport_address",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "TransformCheckpointingInfo"
      },
      "properties": [
        {
          "name": "changes_last_detected_at",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "changes_last_detected_at_date_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "last",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "TransformCheckpointStats"
            }
          },
          "required": true
        },
        {
          "name": "next",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "TransformCheckpointStats"
            }
          },
          "required": true
        },
        {
          "name": "operations_behind",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "TransformCheckpointStats"
      },
      "properties": [
        {
          "name": "checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "checkpoint_progress",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "TransformProgress"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "timestamp_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "time_upper_bound",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "time_upper_bound_millis",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "TransformIndexerStats"
      },
      "properties": [
        {
          "name": "documents_indexed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "documents_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "exponential_avg_checkpoint_duration_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "exponential_avg_documents_indexed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "exponential_avg_documents_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "index_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_time_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "index_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "pages_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processing_time_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "processing_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_failures",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_time_in_ms",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "search_total",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "trigger_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "TransformProgress"
      },
      "properties": [
        {
          "name": "docs_indexed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "docs_processed",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "docs_remaining",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "percent_complete",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "double"
            }
          },
          "required": true
        },
        {
          "name": "total_docs",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "TransformStats"
      },
      "properties": [
        {
          "name": "checkpointing",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "TransformCheckpointingInfo"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "NodeAttributes"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "stats",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.get_transform_stats",
              "name": "TransformIndexerStats"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.pivot",
        "name": "SingleGroupSource"
      },
      "properties": [
        {
          "name": "field",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Field"
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.scripting",
              "name": "Script"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.pivot",
        "name": "TransformPivot"
      },
      "properties": [
        {
          "name": "aggregations",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "aggregations",
                "name": "AggregationContainer"
              }
            }
          },
          "required": true
        },
        {
          "name": "group_by",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform.pivot",
                "name": "SingleGroupSource"
              }
            }
          },
          "required": true
        },
        {
          "name": "max_page_search_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.preview_transform",
        "name": "PreviewTransformRequest"
      },
      "description": "The definition for the transform to preview",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": [],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "dest",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformDestination"
              }
            },
            "required": false
          },
          {
            "name": "frequency",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "pivot",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform.pivot",
                "name": "TransformPivot"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSource"
              }
            },
            "required": false
          },
          {
            "name": "sync",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSyncContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.preview_transform",
        "name": "PreviewTransformResponse"
      },
      "generics": [
        "TTransform"
      ],
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "generated_dest_index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "index_modules.index_settings",
              "name": "IndexState"
            }
          },
          "required": true
        },
        {
          "name": "preview",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "generic",
                "name": "TTransform"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SourceFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.put_transform",
        "name": "PutTransformRequest"
      },
      "description": "The transform definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the new transform."
        }
      ],
      "query": [
        {
          "name": "defer_validation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If validations should be deferred until transform starts, defaults to false."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "dest",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformDestination"
              }
            },
            "required": false
          },
          {
            "name": "frequency",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "pivot",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform.pivot",
                "name": "TransformPivot"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSource"
              }
            },
            "required": false
          },
          {
            "name": "sync",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSyncContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.put_transform",
        "name": "PutTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.start_transform",
        "name": "StartTransformRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the transform to start"
        }
      ],
      "query": [
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Controls the time to wait for the transform to start"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.start_transform",
        "name": "StartTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.stop_transform",
        "name": "StopTransformRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the transform to stop"
        }
      ],
      "query": [
        {
          "name": "allow_no_match",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to ignore if a wildcard expression matches no transforms. (This includes `_all` string or when no transforms have been specified)"
        },
        {
          "name": "force",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to force stop a failed transform or not. Default to false"
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false,
          "description": "Controls the time to wait until the transform has stopped. Default to 30 seconds"
        },
        {
          "name": "wait_for_checkpoint",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to wait for the transform to reach a checkpoint before stopping. Default to false"
        },
        {
          "name": "wait_for_completion",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Whether to wait for the transform to fully stop before returning or not. Default to false"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.stop_transform",
        "name": "StopTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.transform.update_transform",
        "name": "UpdateTransformRequest"
      },
      "description": "The update transform definition",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "transform_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "The id of the transform."
        }
      ],
      "query": [
        {
          "name": "defer_validation",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "If validations should be deferred until transform starts, defaults to false."
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "description",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "dest",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformDestination"
              }
            },
            "required": false
          },
          {
            "name": "frequency",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "common_options.time_unit",
                "name": "Time"
              }
            },
            "required": false
          },
          {
            "name": "source",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSource"
              }
            },
            "required": false
          },
          {
            "name": "sync",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.transform",
                "name": "TransformSyncContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.transform.update_transform",
        "name": "UpdateTransformResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "create_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "create_time_date_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "dest",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform",
              "name": "TransformDestination"
            }
          },
          "required": true
        },
        {
          "name": "frequency",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pivot",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform.pivot",
              "name": "TransformPivot"
            }
          },
          "required": true
        },
        {
          "name": "source",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform",
              "name": "TransformSource"
            }
          },
          "required": true
        },
        {
          "name": "sync",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.transform",
              "name": "TransformSyncContainer"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher",
        "name": "Watch"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.action",
                "name": "Action"
              }
            }
          },
          "required": true
        },
        {
          "name": "condition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ConditionContainer"
            }
          },
          "required": true
        },
        {
          "name": "input",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "InputContainer"
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "WatchStatus"
            }
          },
          "required": true
        },
        {
          "name": "throttle_period",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "transform",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.transform",
              "name": "TransformContainer"
            }
          },
          "required": true
        },
        {
          "name": "trigger",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.trigger",
              "name": "TriggerContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgementState"
      },
      "members": [
        {
          "name": "awaits_successful_execution"
        },
        {
          "name": "ackable"
        },
        {
          "name": "acked"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgeState"
      },
      "properties": [
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "AcknowledgementState"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgeWatchRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "watch_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        },
        {
          "name": "action_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Names"
            }
          },
          "required": false,
          "description": "A comma-separated list of the action ids to be acked"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgeWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "WatchStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "ActionStatus"
      },
      "properties": [
        {
          "name": "ack",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "AcknowledgeState"
            }
          },
          "required": true
        },
        {
          "name": "last_execution",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "ExecutionState"
            }
          },
          "required": true
        },
        {
          "name": "last_successful_execution",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "ExecutionState"
            }
          },
          "required": true
        },
        {
          "name": "last_throttle",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "ThrottleState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "ActivationState"
      },
      "properties": [
        {
          "name": "active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "ExecutionState"
      },
      "properties": [
        {
          "name": "successful",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "ThrottleState"
      },
      "properties": [
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "timestamp",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "WatchStatus"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.acknowledge_watch",
                "name": "ActionStatus"
              }
            }
          },
          "required": true
        },
        {
          "name": "last_checked",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "last_met_condition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "ActivationState"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action",
        "name": "Action"
      },
      "properties": [
        {
          "name": "action_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action",
              "name": "ActionType"
            }
          },
          "required": true
        },
        {
          "name": "condition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ConditionContainer"
            }
          },
          "required": true
        },
        {
          "name": "foreach",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "max_iterations",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "throttle_period",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        },
        {
          "name": "transform",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.transform",
              "name": "TransformContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.action",
        "name": "ActionType"
      },
      "members": [
        {
          "name": "email"
        },
        {
          "name": "webhook"
        },
        {
          "name": "index"
        },
        {
          "name": "logging"
        },
        {
          "name": "slack"
        },
        {
          "name": "pagerduty"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.email",
        "name": "EmailBody"
      },
      "properties": [
        {
          "name": "html",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.action.email",
        "name": "EmailPriority"
      },
      "members": [
        {
          "name": "lowest"
        },
        {
          "name": "low"
        },
        {
          "name": "normal"
        },
        {
          "name": "high"
        },
        {
          "name": "highest"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.pager_duty",
        "name": "PagerDutyContext"
      },
      "properties": [
        {
          "name": "href",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "src",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.pager_duty",
              "name": "PagerDutyContextType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.action.pager_duty",
        "name": "PagerDutyContextType"
      },
      "members": [
        {
          "name": "link"
        },
        {
          "name": "image"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.pager_duty",
        "name": "PagerDutyEvent"
      },
      "properties": [
        {
          "name": "account",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "attach_payload",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "client",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "client_url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "context",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.action.pager_duty",
                "name": "PagerDutyContext"
              }
            }
          },
          "required": true
        },
        {
          "name": "description",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "event_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.pager_duty",
              "name": "PagerDutyEventType"
            }
          },
          "required": true
        },
        {
          "name": "incident_key",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.action.pager_duty",
        "name": "PagerDutyEventType"
      },
      "members": [
        {
          "name": "trigger"
        },
        {
          "name": "resolve"
        },
        {
          "name": "acknowledge"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.slack",
        "name": "SlackAttachment"
      },
      "properties": [
        {
          "name": "author_icon",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "author_link",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "author_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "color",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fallback",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "fields",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.action.slack",
                "name": "SlackAttachmentField"
              }
            }
          },
          "required": true
        },
        {
          "name": "footer",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "footer_icon",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "image_url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "pretext",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "thumb_url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "title",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "title_link",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "ts",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "NullableDateTimeOffsetEpochSecondsFormatter"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.slack",
        "name": "SlackAttachmentField"
      },
      "properties": [
        {
          "name": "short",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "title",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.slack",
        "name": "SlackDynamicAttachment"
      },
      "properties": [
        {
          "name": "attachment_template",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.slack",
              "name": "SlackAttachment"
            }
          },
          "required": true
        },
        {
          "name": "list_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.action.slack",
        "name": "SlackMessage"
      },
      "properties": [
        {
          "name": "attachments",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.action.slack",
                "name": "SlackAttachment"
              }
            }
          },
          "required": true
        },
        {
          "name": "dynamic_attachments",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.slack",
              "name": "SlackDynamicAttachment"
            }
          },
          "required": true
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "icon",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "to",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.activate_watch",
        "name": "ActivateWatchRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "watch_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.activate_watch",
        "name": "ActivateWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.activate_watch",
              "name": "ActivationStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.activate_watch",
        "name": "ActivationStatus"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.acknowledge_watch",
                "name": "ActionStatus"
              }
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "ActivationState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "AlwaysCondition"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "ArrayCompareCondition"
      },
      "properties": [
        {
          "name": "array_path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "comparison",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "quantifier",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "Quantifier"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "CompareCondition"
      },
      "properties": [
        {
          "name": "comparison",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "value",
          "type": {
            "kind": "user_defined_value"
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "ConditionContainer"
      },
      "properties": [
        {
          "name": "always",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "AlwaysCondition"
            }
          },
          "required": true
        },
        {
          "name": "array_compare",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ArrayCompareCondition"
            }
          },
          "required": true
        },
        {
          "name": "compare",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "CompareCondition"
            }
          },
          "required": true
        },
        {
          "name": "never",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "NeverCondition"
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ScriptCondition"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "ConditionType"
      },
      "members": [
        {
          "name": "always"
        },
        {
          "name": "never"
        },
        {
          "name": "script"
        },
        {
          "name": "compare"
        },
        {
          "name": "array_compare"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "NeverCondition"
      },
      "properties": []
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "Quantifier"
      },
      "members": [
        {
          "name": "some"
        },
        {
          "name": "all"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.condition",
        "name": "ScriptCondition"
      },
      "properties": [
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.deactivate_watch",
        "name": "DeactivateWatchRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "watch_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.deactivate_watch",
        "name": "DeactivateWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.activate_watch",
              "name": "ActivationStatus"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.delete_watch",
        "name": "DeleteWatchRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.delete_watch",
        "name": "DeleteWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ActionExecutionState"
      },
      "members": [
        {
          "name": "awaits_execution"
        },
        {
          "name": "checking"
        },
        {
          "name": "execution_not_needed"
        },
        {
          "name": "throttled"
        },
        {
          "name": "executed"
        },
        {
          "name": "failed"
        },
        {
          "name": "deleted_while_queued"
        },
        {
          "name": "not_executed_already_queued"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecuteWatchRequest"
      },
      "description": "Execution control",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": false,
          "description": "Watch ID"
        }
      ],
      "query": [
        {
          "name": "debug",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "indicates whether the watch should execute in debug mode"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "action_modes",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.watcher.execution",
                  "name": "ActionExecutionMode"
                }
              }
            },
            "required": false
          },
          {
            "name": "alternative_input",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "ignore_condition",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "record_execution",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "boolean"
              }
            },
            "required": false
          },
          {
            "name": "simulated_actions",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.execution",
                "name": "SimulatedActions"
              }
            },
            "required": false
          },
          {
            "name": "trigger_data",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "ScheduleTriggerEvent"
              }
            },
            "required": false
          },
          {
            "name": "watch",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher",
                "name": "Watch"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecuteWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "watch_record",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "WatchRecord"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecutionResult"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.execute_watch",
                "name": "ExecutionResultAction"
              }
            }
          },
          "required": true
        },
        {
          "name": "condition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "ExecutionResultCondition"
            }
          },
          "required": true
        },
        {
          "name": "execution_duration",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        },
        {
          "name": "execution_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "input",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "ExecutionResultInput"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecutionResultAction"
      },
      "properties": [
        {
          "name": "email",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.email",
              "name": "EmailActionResult"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.index",
              "name": "IndexActionResult"
            }
          },
          "required": true
        },
        {
          "name": "logging",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.logging",
              "name": "LoggingActionResult"
            }
          },
          "required": true
        },
        {
          "name": "pagerduty",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.pager_duty",
              "name": "PagerDutyActionResult"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "slack",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.slack",
              "name": "SlackActionResult"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "Status"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action",
              "name": "ActionType"
            }
          },
          "required": true
        },
        {
          "name": "webhook",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.webhook",
              "name": "WebhookActionResult"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecutionResultCondition"
      },
      "properties": [
        {
          "name": "met",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "Status"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ConditionType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecutionResultInput"
      },
      "properties": [
        {
          "name": "payload",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "Status"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "InputType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "TriggerEventResult"
      },
      "properties": [
        {
          "name": "manual",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.trigger",
              "name": "TriggerEventContainer"
            }
          },
          "required": true
        },
        {
          "name": "triggered_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "WatchRecord"
      },
      "properties": [
        {
          "name": "condition",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.condition",
              "name": "ConditionContainer"
            }
          },
          "required": true
        },
        {
          "name": "input",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "InputContainer"
            }
          },
          "required": true
        },
        {
          "name": "messages",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "metadata",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        },
        {
          "name": "node",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "ExecutionResult"
            }
          },
          "required": true
        },
        {
          "name": "state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "ActionExecutionState"
            }
          },
          "required": true
        },
        {
          "name": "trigger_event",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execute_watch",
              "name": "TriggerEventResult"
            }
          },
          "required": true
        },
        {
          "name": "user",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "watch_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.execution",
        "name": "ActionExecutionMode"
      },
      "members": [
        {
          "name": "simulate"
        },
        {
          "name": "force_simulate"
        },
        {
          "name": "execute"
        },
        {
          "name": "force_execute"
        },
        {
          "name": "skip"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution",
        "name": "HttpInputRequestResult"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.watcher.input",
            "name": "HttpInputRequest"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution",
        "name": "HttpInputResponseResult"
      },
      "properties": [
        {
          "name": "body",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "headers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "array_of",
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution",
        "name": "SimulatedActions"
      },
      "properties": [
        {
          "name": "actions",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "all",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "SimulatedActions"
            }
          },
          "required": true
        },
        {
          "name": "use_all",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.execution",
        "name": "Status"
      },
      "members": [
        {
          "name": "success"
        },
        {
          "name": "failure"
        },
        {
          "name": "simulated"
        },
        {
          "name": "throttled"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.email",
        "name": "EmailActionResult"
      },
      "properties": [
        {
          "name": "account",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.email",
              "name": "EmailResult"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.email",
        "name": "EmailResult"
      },
      "properties": [
        {
          "name": "bcc",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "body",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.email",
              "name": "EmailBody"
            }
          },
          "required": true
        },
        {
          "name": "cc",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "from",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "priority",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.email",
              "name": "EmailPriority"
            }
          },
          "required": true
        },
        {
          "name": "reply_to",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "sent_date",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "subject",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "to",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.index",
        "name": "IndexActionResult"
      },
      "properties": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "response",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.index",
              "name": "IndexActionResultIndexResponse"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.index",
        "name": "IndexActionResultIndexResponse"
      },
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "index",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "IndexName"
            }
          },
          "required": true
        },
        {
          "name": "result",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "document",
              "name": "Result"
            }
          },
          "required": true
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.logging",
        "name": "LoggingActionResult"
      },
      "properties": [
        {
          "name": "logged_text",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.pager_duty",
        "name": "PagerDutyActionEventResult"
      },
      "properties": [
        {
          "name": "event",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.pager_duty",
              "name": "PagerDutyEvent"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputRequestResult"
            }
          },
          "required": true
        },
        {
          "name": "response",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputResponseResult"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.pager_duty",
        "name": "PagerDutyActionResult"
      },
      "properties": [
        {
          "name": "sent_event",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution.pager_duty",
              "name": "PagerDutyActionEventResult"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.slack",
        "name": "SlackActionMessageResult"
      },
      "properties": [
        {
          "name": "message",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.action.slack",
              "name": "SlackMessage"
            }
          },
          "required": true
        },
        {
          "name": "reason",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputRequestResult"
            }
          },
          "required": true
        },
        {
          "name": "response",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputResponseResult"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "Status"
            }
          },
          "required": true
        },
        {
          "name": "to",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.slack",
        "name": "SlackActionResult"
      },
      "properties": [
        {
          "name": "account",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "sent_messages",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.execution.slack",
                "name": "SlackActionMessageResult"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.execution.webhook",
        "name": "WebhookActionResult"
      },
      "properties": [
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputRequestResult"
            }
          },
          "required": true
        },
        {
          "name": "response",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.execution",
              "name": "HttpInputResponseResult"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.get_watch",
        "name": "GetWatchRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        }
      ],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.get_watch",
        "name": "GetWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "found",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "status",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.acknowledge_watch",
              "name": "WatchStatus"
            }
          },
          "required": true
        },
        {
          "name": "watch",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher",
              "name": "Watch"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "ChainInput"
      },
      "properties": [
        {
          "name": "inputs",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.input",
                "name": "InputContainer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "ConnectionScheme"
      },
      "members": [
        {
          "name": "http"
        },
        {
          "name": "https"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInput"
      },
      "properties": [
        {
          "name": "extract",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInputRequest"
            }
          },
          "required": true
        },
        {
          "name": "response_content_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "ResponseContentType"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInputAuthentication"
      },
      "properties": [
        {
          "name": "basic",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInputBasicAuthentication"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInputBasicAuthentication"
      },
      "properties": [
        {
          "name": "password",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "username",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInputMethod"
      },
      "members": [
        {
          "name": "head"
        },
        {
          "name": "get"
        },
        {
          "name": "post"
        },
        {
          "name": "put"
        },
        {
          "name": "delete"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInputProxy"
      },
      "properties": [
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "port",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "HttpInputRequest"
      },
      "properties": [
        {
          "name": "auth",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInputAuthentication"
            }
          },
          "required": false
        },
        {
          "name": "body",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "connection_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        },
        {
          "name": "headers",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "host",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "method",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInputMethod"
            }
          },
          "required": false
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": false
        },
        {
          "name": "path",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        },
        {
          "name": "port",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": false
        },
        {
          "name": "proxy",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInputProxy"
            }
          },
          "required": false
        },
        {
          "name": "read_timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": false
        },
        {
          "name": "scheme",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "ConnectionScheme"
            }
          },
          "required": false
        },
        {
          "name": "url",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "IndicesOptions"
      },
      "properties": [
        {
          "name": "allow_no_indices",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "expand_wildcards",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "ExpandWildcards"
            }
          },
          "required": true
        },
        {
          "name": "ignore_unavailable",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "InputContainer"
      },
      "properties": [
        {
          "name": "chain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "ChainInput"
            }
          },
          "required": true
        },
        {
          "name": "http",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "HttpInput"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "SearchInput"
            }
          },
          "required": true
        },
        {
          "name": "simple",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "SimpleInput"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "InputType"
      },
      "members": [
        {
          "name": "http"
        },
        {
          "name": "search"
        },
        {
          "name": "simple"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "ResponseContentType"
      },
      "members": [
        {
          "name": "json"
        },
        {
          "name": "yaml"
        },
        {
          "name": "text"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "SearchInput"
      },
      "properties": [
        {
          "name": "extract",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true
        },
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "SearchInputRequest"
            }
          },
          "required": true
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "SearchInputRequest"
      },
      "properties": [
        {
          "name": "body",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search",
              "name": "SearchRequest"
            }
          },
          "required": false
        },
        {
          "name": "indices",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "IndexName"
              }
            }
          },
          "required": false
        },
        {
          "name": "indices_options",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "IndicesOptions"
            }
          },
          "required": false
        },
        {
          "name": "search_type",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common",
              "name": "SearchType"
            }
          },
          "required": false
        },
        {
          "name": "template",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "search.search_template",
              "name": "SearchTemplateRequest"
            }
          },
          "required": false
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.input",
        "name": "SimpleInput"
      },
      "properties": [
        {
          "name": "payload",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.put_watch",
        "name": "PutWatchRequest"
      },
      "description": "The watch",
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Name"
            }
          },
          "required": true,
          "description": "Watch ID"
        }
      ],
      "query": [
        {
          "name": "active",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Specify whether the watch is in/active by default"
        },
        {
          "name": "if_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "only update the watch if the last operation that has changed the watch has the specified primary term"
        },
        {
          "name": "if_sequence_number",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false
        },
        {
          "name": "version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": false,
          "description": "Explicit version number for concurrency control"
        }
      ],
      "body": {
        "kind": "properties",
        "properties": [
          {
            "name": "actions",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.watcher.action",
                  "name": "Action"
                }
              }
            },
            "required": false
          },
          {
            "name": "condition",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.condition",
                "name": "ConditionContainer"
              }
            },
            "required": false
          },
          {
            "name": "input",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.input",
                "name": "InputContainer"
              }
            },
            "required": false
          },
          {
            "name": "metadata",
            "type": {
              "kind": "dictionary_of",
              "key": {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              },
              "value": {
                "kind": "user_defined_value"
              }
            },
            "required": false
          },
          {
            "name": "throttle_period",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "required": false
          },
          {
            "name": "transform",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.transform",
                "name": "TransformContainer"
              }
            },
            "required": false
          },
          {
            "name": "trigger",
            "type": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.trigger",
                "name": "TriggerContainer"
              }
            },
            "required": false
          }
        ]
      }
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.put_watch",
        "name": "PutWatchResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "created",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "_primary_term",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_seq_no",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "_version",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "integer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "CronExpression"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.watcher.schedule",
            "name": "ScheduleBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "DailySchedule"
      },
      "properties": [
        {
          "name": "at",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "array_of",
                "value": {
                  "kind": "instance_of",
                  "type": {
                    "namespace": "internal",
                    "name": "string"
                  }
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "x_pack.watcher.schedule",
                  "name": "TimeOfDay"
                }
              }
            ]
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "Day"
      },
      "members": [
        {
          "name": "sunday"
        },
        {
          "name": "monday"
        },
        {
          "name": "tuesday"
        },
        {
          "name": "wednesday"
        },
        {
          "name": "thursday"
        },
        {
          "name": "friday"
        },
        {
          "name": "saturday"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "HourlySchedule"
      },
      "properties": [
        {
          "name": "minute",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "Interval"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.watcher.schedule",
            "name": "ScheduleBase"
          }
        }
      ],
      "properties": [
        {
          "name": "factor",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "unit",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "IntervalUnit"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "IntervalUnit"
      },
      "members": [
        {
          "name": "s"
        },
        {
          "name": "m"
        },
        {
          "name": "h"
        },
        {
          "name": "d"
        },
        {
          "name": "w"
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "Month"
      },
      "members": [
        {
          "name": "january"
        },
        {
          "name": "february"
        },
        {
          "name": "march"
        },
        {
          "name": "april"
        },
        {
          "name": "may"
        },
        {
          "name": "june"
        },
        {
          "name": "july"
        },
        {
          "name": "august"
        },
        {
          "name": "september"
        },
        {
          "name": "october"
        },
        {
          "name": "november"
        },
        {
          "name": "december"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "ScheduleBase"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "ScheduleContainer"
      },
      "properties": [
        {
          "name": "cron",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "CronExpression"
            }
          },
          "required": true
        },
        {
          "name": "daily",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "DailySchedule"
            }
          },
          "required": true
        },
        {
          "name": "hourly",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "HourlySchedule"
            }
          },
          "required": true
        },
        {
          "name": "interval",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "Interval"
            }
          },
          "required": true
        },
        {
          "name": "monthly",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "TimeOfMonth"
              }
            }
          },
          "required": true
        },
        {
          "name": "weekly",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "TimeOfWeek"
              }
            }
          },
          "required": true
        },
        {
          "name": "yearly",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "TimeOfYear"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "ScheduleTriggerEvent"
      },
      "properties": [
        {
          "name": "scheduled_time",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Date"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            ]
          },
          "required": true
        },
        {
          "name": "triggered_time",
          "type": {
            "kind": "union_of",
            "items": [
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "Date"
                }
              },
              {
                "kind": "instance_of",
                "type": {
                  "namespace": "internal",
                  "name": "string"
                }
              }
            ]
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "TimeOfDay"
      },
      "properties": [
        {
          "name": "hour",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        },
        {
          "name": "minute",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "TimeOfMonth"
      },
      "properties": [
        {
          "name": "at",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        },
        {
          "name": "on",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "TimeOfWeek"
      },
      "properties": [
        {
          "name": "at",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        },
        {
          "name": "on",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "Day"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.schedule",
        "name": "TimeOfYear"
      },
      "properties": [
        {
          "name": "at",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        },
        {
          "name": "int",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.schedule",
                "name": "Month"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        },
        {
          "name": "on",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "integer"
              }
            }
          },
          "required": true,
          "annotations": {
            "prop_serializer": "SingleOrEnumerableFormatter`1"
          }
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.start_watcher",
        "name": "StartWatcherRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.start_watcher",
        "name": "StartWatcherResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.stop_watcher",
        "name": "StopWatcherRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [],
      "query": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.stop_watcher",
        "name": "StopWatcherResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "AcknowledgedResponseBase"
          }
        }
      ],
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.transform",
        "name": "ChainTransform"
      },
      "properties": [
        {
          "name": "transforms",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.transform",
                "name": "TransformContainer"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.transform",
        "name": "ScriptTransform"
      },
      "properties": [
        {
          "name": "lang",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "params",
          "type": {
            "kind": "dictionary_of",
            "key": {
              "kind": "instance_of",
              "type": {
                "namespace": "internal",
                "name": "string"
              }
            },
            "value": {
              "kind": "user_defined_value"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.transform",
        "name": "SearchTransform"
      },
      "properties": [
        {
          "name": "request",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.input",
              "name": "SearchInputRequest"
            }
          },
          "required": true
        },
        {
          "name": "timeout",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "common_options.time_unit",
              "name": "Time"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.transform",
        "name": "Transform"
      },
      "properties": []
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.transform",
        "name": "TransformContainer"
      },
      "properties": [
        {
          "name": "chain",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.transform",
              "name": "ChainTransform"
            }
          },
          "required": true
        },
        {
          "name": "script",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.transform",
              "name": "ScriptTransform"
            }
          },
          "required": true
        },
        {
          "name": "search",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.transform",
              "name": "SearchTransform"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.trigger",
        "name": "TriggerContainer"
      },
      "properties": [
        {
          "name": "schedule",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "ScheduleContainer"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.trigger",
        "name": "TriggerEventContainer"
      },
      "properties": [
        {
          "name": "schedule",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.schedule",
              "name": "ScheduleTriggerEvent"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "ExecutionPhase"
      },
      "members": [
        {
          "name": "awaits_execution"
        },
        {
          "name": "started"
        },
        {
          "name": "input"
        },
        {
          "name": "condition"
        },
        {
          "name": "actions"
        },
        {
          "name": "watch_transform"
        },
        {
          "name": "aborted"
        },
        {
          "name": "finished"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "ExecutionThreadPool"
      },
      "properties": [
        {
          "name": "max_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "queue_size",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherNodeStats"
      },
      "properties": [
        {
          "name": "current_watches",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.watcher_stats",
                "name": "WatchRecordStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "execution_thread_pool",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.watcher_stats",
              "name": "ExecutionThreadPool"
            }
          },
          "required": true
        },
        {
          "name": "queued_watches",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.watcher_stats",
                "name": "WatchRecordQueuedStats"
              }
            }
          },
          "required": true
        },
        {
          "name": "watch_count",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "long"
            }
          },
          "required": true
        },
        {
          "name": "watcher_state",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.watcher_stats",
              "name": "WatcherState"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "enum",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherState"
      },
      "members": [
        {
          "name": "stopped"
        },
        {
          "name": "starting"
        },
        {
          "name": "started"
        },
        {
          "name": "stopping"
        }
      ]
    },
    {
      "kind": "request",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherStatsRequest"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.request",
            "name": "RequestBase"
          }
        }
      ],
      "path": [
        {
          "name": "metric",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Metrics"
            }
          },
          "required": false,
          "description": "Controls what additional stat metrics should be include in the response"
        }
      ],
      "query": [
        {
          "name": "emit_stacktraces",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": false,
          "description": "Emits stack traces of currently running watches"
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherStatsResponse"
      },
      "inherits": [
        {
          "type": {
            "namespace": "common_abstractions.response",
            "name": "ResponseBase"
          }
        }
      ],
      "properties": [
        {
          "name": "cluster_name",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "manually_stopped",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "boolean"
            }
          },
          "required": true
        },
        {
          "name": "stats",
          "type": {
            "kind": "array_of",
            "value": {
              "kind": "instance_of",
              "type": {
                "namespace": "x_pack.watcher.watcher_stats",
                "name": "WatcherNodeStats"
              }
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatchRecordQueuedStats"
      },
      "properties": [
        {
          "name": "execution_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "triggered_time",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "Date"
            }
          },
          "required": true
        },
        {
          "name": "watch_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        },
        {
          "name": "watch_record_id",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "internal",
              "name": "string"
            }
          },
          "required": true
        }
      ]
    },
    {
      "kind": "interface",
      "name": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatchRecordStats"
      },
      "inherits": [
        {
          "type": {
            "namespace": "x_pack.watcher.watcher_stats",
            "name": "WatchRecordQueuedStats"
          }
        }
      ],
      "properties": [
        {
          "name": "execution_phase",
          "type": {
            "kind": "instance_of",
            "type": {
              "namespace": "x_pack.watcher.watcher_stats",
              "name": "ExecutionPhase"
            }
          },
          "required": true
        }
      ]
    }
  ],
  "endpoints": [
    {
      "name": "async_search.delete",
      "description": "Deletes an async search by ID. If the search is still running, the search request will be cancelled. Otherwise, the saved search results are deleted.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.async_search.delete",
        "name": "AsyncSearchDeleteRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.async_search.delete",
        "name": "AsyncSearchDeleteResponse"
      },
      "urls": [
        {
          "path": "/_async_search/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "async_search.get",
      "description": "Retrieves the results of a previously submitted async search request given its ID.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.async_search.get",
        "name": "AsyncSearchGetRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.async_search.get",
        "name": "AsyncSearchGetResponse"
      },
      "urls": [
        {
          "path": "/_async_search/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "async_search.submit",
      "description": "Executes a search request asynchronously.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/async-search.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.async_search.submit",
        "name": "AsyncSearchSubmitRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.async_search.submit",
        "name": "AsyncSearchSubmitResponse"
      },
      "urls": [
        {
          "path": "/_async_search",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_async_search",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "autoscaling.delete_autoscaling_policy",
      "description": "Deletes an autoscaling policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/autoscaling-delete-autoscaling-policy.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_autoscaling/policy/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "autoscaling.get_autoscaling_decision",
      "description": "Gets the current autoscaling decision based on the configured autoscaling policy, indicating whether or not autoscaling is needed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/autoscaling-get-autoscaling-decision.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_autoscaling/decision",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "autoscaling.get_autoscaling_policy",
      "description": "Retrieves an autoscaling policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/autoscaling-get-autoscaling-policy.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_autoscaling/policy/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "autoscaling.put_autoscaling_policy",
      "description": "Creates a new autoscaling policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/autoscaling-put-autoscaling-policy.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_autoscaling/policy/{name}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "bulk",
      "description": "Allows to perform multiple index/update/delete operations in a single request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.bulk",
        "name": "BulkRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.multiple.bulk",
        "name": "BulkResponse"
      },
      "urls": [
        {
          "path": "/_bulk",
          "methods": [
            "POST",
            "PUT"
          ]
        },
        {
          "path": "/{index}/_bulk",
          "methods": [
            "POST",
            "PUT"
          ]
        },
        {
          "path": "/{index}/{type}/_bulk",
          "methods": [
            "POST",
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "cat.aliases",
      "description": "Shows information about currently configured aliases to indices including filter and routing infos.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_aliases",
        "name": "CatAliasesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_aliases",
        "name": "CatAliasesResponse"
      },
      "urls": [
        {
          "path": "/_cat/aliases",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/aliases/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.allocation",
      "description": "Provides a snapshot of how many shards are allocated to each data node and how much disk space they are using.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_allocation",
        "name": "CatAllocationRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_allocation",
        "name": "CatAllocationResponse"
      },
      "urls": [
        {
          "path": "/_cat/allocation",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/allocation/{node_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.count",
      "description": "Provides quick access to the document count of the entire cluster, or individual indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_count",
        "name": "CatCountRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_count",
        "name": "CatCountResponse"
      },
      "urls": [
        {
          "path": "/_cat/count",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/count/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.fielddata",
      "description": "Shows how much heap memory is currently being used by fielddata on every data node in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_fielddata",
        "name": "CatFielddataRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_fielddata",
        "name": "CatFielddataResponse"
      },
      "urls": [
        {
          "path": "/_cat/fielddata",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/fielddata/{fields}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.health",
      "description": "Returns a concise representation of the cluster health.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_health",
        "name": "CatHealthRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_health",
        "name": "CatHealthResponse"
      },
      "urls": [
        {
          "path": "/_cat/health",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.help",
      "description": "Returns help for the Cat APIs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_help",
        "name": "CatHelpRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_help",
        "name": "CatHelpResponse"
      },
      "urls": [
        {
          "path": "/_cat",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.indices",
      "description": "Returns information about indices: number of primaries and replicas, document counts, disk size, ...",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_indices",
        "name": "CatIndicesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_indices",
        "name": "CatIndicesResponse"
      },
      "urls": [
        {
          "path": "/_cat/indices",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/indices/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.master",
      "description": "Returns information about the master node.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_master",
        "name": "CatMasterRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_master",
        "name": "CatMasterResponse"
      },
      "urls": [
        {
          "path": "/_cat/master",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.ml_data_frame_analytics",
      "description": "Gets configuration and usage information about data frame analytics jobs.",
      "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-dfanalytics.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_data_frame_analytics",
        "name": "CatDataFrameAnalyticsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_data_frame_analytics",
        "name": "CatDataFrameAnalyticsResponse"
      },
      "urls": [
        {
          "path": "/_cat/ml/data_frame/analytics",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/ml/data_frame/analytics/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.ml_datafeeds",
      "description": "Gets configuration and usage information about datafeeds.",
      "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-datafeeds.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_datafeeds",
        "name": "CatDatafeedsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_datafeeds",
        "name": "CatDatafeedsResponse"
      },
      "urls": [
        {
          "path": "/_cat/ml/datafeeds",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/ml/datafeeds/{datafeed_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.ml_jobs",
      "description": "Gets configuration and usage information about anomaly detection jobs.",
      "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/cat-anomaly-detectors.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_jobs",
        "name": "CatJobsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_jobs",
        "name": "CatJobsResponse"
      },
      "urls": [
        {
          "path": "/_cat/ml/anomaly_detectors",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/ml/anomaly_detectors/{job_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.ml_trained_models",
      "description": "Gets configuration and usage information about inference trained models.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-trained-model.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_trained_models",
        "name": "CatTrainedModelsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_trained_models",
        "name": "CatTrainedModelsResponse"
      },
      "urls": [
        {
          "path": "/_cat/ml/trained_models",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/ml/trained_models/{model_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.nodeattrs",
      "description": "Returns information about custom node attributes.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_node_attributes",
        "name": "CatNodeAttributesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_node_attributes",
        "name": "CatNodeAttributesResponse"
      },
      "urls": [
        {
          "path": "/_cat/nodeattrs",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.nodes",
      "description": "Returns basic statistics about performance of cluster nodes.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_nodes",
        "name": "CatNodesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_nodes",
        "name": "CatNodesResponse"
      },
      "urls": [
        {
          "path": "/_cat/nodes",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.pending_tasks",
      "description": "Returns a concise representation of the cluster pending tasks.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_pending_tasks",
        "name": "CatPendingTasksRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_pending_tasks",
        "name": "CatPendingTasksResponse"
      },
      "urls": [
        {
          "path": "/_cat/pending_tasks",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.plugins",
      "description": "Returns information about installed plugins across nodes node.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_plugins",
        "name": "CatPluginsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_plugins",
        "name": "CatPluginsResponse"
      },
      "urls": [
        {
          "path": "/_cat/plugins",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.recovery",
      "description": "Returns information about index shard recoveries, both on-going completed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_recovery",
        "name": "CatRecoveryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_recovery",
        "name": "CatRecoveryResponse"
      },
      "urls": [
        {
          "path": "/_cat/recovery",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/recovery/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.repositories",
      "description": "Returns information about snapshot repositories registered in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_repositories",
        "name": "CatRepositoriesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_repositories",
        "name": "CatRepositoriesResponse"
      },
      "urls": [
        {
          "path": "/_cat/repositories",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.segments",
      "description": "Provides low-level information about the segments in the shards of an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_segments",
        "name": "CatSegmentsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_segments",
        "name": "CatSegmentsResponse"
      },
      "urls": [
        {
          "path": "/_cat/segments",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/segments/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.shards",
      "description": "Provides a detailed view of shard allocation on nodes.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_shards",
        "name": "CatShardsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_shards",
        "name": "CatShardsResponse"
      },
      "urls": [
        {
          "path": "/_cat/shards",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/shards/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.snapshots",
      "description": "Returns all snapshots in a specific repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_snapshots",
        "name": "CatSnapshotsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_snapshots",
        "name": "CatSnapshotsResponse"
      },
      "urls": [
        {
          "path": "/_cat/snapshots",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/snapshots/{repository}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.tasks",
      "description": "Returns information about the tasks currently executing on one or more nodes in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_tasks",
        "name": "CatTasksRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_tasks",
        "name": "CatTasksResponse"
      },
      "urls": [
        {
          "path": "/_cat/tasks",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.templates",
      "description": "Returns information about existing templates.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_templates",
        "name": "CatTemplatesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_templates",
        "name": "CatTemplatesResponse"
      },
      "urls": [
        {
          "path": "/_cat/templates",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/templates/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.thread_pool",
      "description": "Returns cluster-wide thread pool statistics per node.\nBy default the active, queue and rejected statistics are returned for all thread pools.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_thread_pool",
        "name": "CatThreadPoolRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_thread_pool",
        "name": "CatThreadPoolResponse"
      },
      "urls": [
        {
          "path": "/_cat/thread_pool",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/thread_pool/{thread_pool_patterns}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cat.transforms",
      "description": "Gets configuration and usage information about transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-transforms.html",
      "stability": "stable",
      "request": {
        "namespace": "cat.cat_transforms",
        "name": "CatTransformsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cat.cat_transforms",
        "name": "CatTransformsResponse"
      },
      "urls": [
        {
          "path": "/_cat/transforms",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cat/transforms/{transform_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ccr.delete_auto_follow_pattern",
      "description": "Deletes auto-follow patterns.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern",
        "name": "DeleteAutoFollowPatternRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.delete_auto_follow_pattern",
        "name": "DeleteAutoFollowPatternResponse"
      },
      "urls": [
        {
          "path": "/_ccr/auto_follow/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ccr.follow",
      "description": "Creates a new follower index configured to follow the referenced leader index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.create_follow_index",
        "name": "CreateFollowIndexRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.create_follow_index",
        "name": "CreateFollowIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/follow",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ccr.follow_info",
      "description": "Retrieves information about all follower indices, including parameters and status for each follower index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-info.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_info",
        "name": "FollowInfoResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/info",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ccr.follow_stats",
      "description": "Retrieves follower stats. return shard-level stats about the following tasks associated with each shard for the specified indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.follow_index_stats",
        "name": "FollowIndexStatsResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ccr.forget_follower",
      "description": "Removes the follower retention leases from the leader.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-forget-follower.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index",
        "name": "ForgetFollowerIndexRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.forget_follower_index",
        "name": "ForgetFollowerIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/forget_follower",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ccr.get_auto_follow_pattern",
      "description": "Gets configured auto-follow patterns. Returns the specified auto-follow pattern collection.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
        "name": "GetAutoFollowPatternRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.get_auto_follow_pattern",
        "name": "GetAutoFollowPatternResponse"
      },
      "urls": [
        {
          "path": "/_ccr/auto_follow",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ccr/auto_follow/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ccr.pause_auto_follow_pattern",
      "description": "Pauses an auto-follow pattern",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-auto-follow-pattern.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern",
        "name": "PauseAutoFollowPatternRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.pause_auto_follow_pattern",
        "name": "PauseAutoFollowPatternResponse"
      },
      "urls": [
        {
          "path": "/_ccr/auto_follow/{name}/pause",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ccr.pause_follow",
      "description": "Pauses a follower index. The follower index will not fetch any additional operations from the leader index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-pause-follow.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index",
        "name": "PauseFollowIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.pause_follow_index",
        "name": "PauseFollowIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/pause_follow",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ccr.put_auto_follow_pattern",
      "description": "Creates a new named collection of auto-follow patterns against a specified remote cluster. Newly created indices on the remote cluster matching any of the specified patterns will be automatically configured as follower indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern",
        "name": "CreateAutoFollowPatternRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.create_auto_follow_pattern",
        "name": "CreateAutoFollowPatternResponse"
      },
      "urls": [
        {
          "path": "/_ccr/auto_follow/{name}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ccr.resume_auto_follow_pattern",
      "description": "Resumes an auto-follow pattern that has been paused",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-auto-follow-pattern.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern",
        "name": "ResumeAutoFollowPatternRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.auto_follow.resume_auto_follow_pattern",
        "name": "ResumeAutoFollowPatternResponse"
      },
      "urls": [
        {
          "path": "/_ccr/auto_follow/{name}/resume",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ccr.resume_follow",
      "description": "Resumes a follower index that has been paused",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-resume-follow.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index",
        "name": "ResumeFollowIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.resume_follow_index",
        "name": "ResumeFollowIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/resume_follow",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ccr.stats",
      "description": "Gets all stats related to cross-cluster replication.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.stats",
        "name": "CcrStatsResponse"
      },
      "urls": [
        {
          "path": "/_ccr/stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ccr.unfollow",
      "description": "Stops the following task associated with a follower index and removes index metadata and settings associated with cross-cluster replication.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-post-unfollow.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.cross_cluster_replication.follow.unfollow_index",
        "name": "UnfollowIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.cross_cluster_replication.follow.unfollow_index",
        "name": "UnfollowIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ccr/unfollow",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "clear_scroll",
      "description": "Explicitly clears the search context for a scroll.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/clear-scroll-api.html",
      "stability": "stable",
      "request": {
        "namespace": "search.scroll.clear_scroll",
        "name": "ClearScrollRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.scroll.clear_scroll",
        "name": "ClearScrollResponse"
      },
      "urls": [
        {
          "path": "/_search/scroll",
          "methods": [
            "DELETE"
          ]
        },
        {
          "path": "/_search/scroll/{scroll_id}",
          "methods": [
            "DELETE"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "A scroll id can be quite large and should be specified as part of the body"
          }
        }
      ]
    },
    {
      "name": "close_point_in_time",
      "description": "Close a point in time",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/point-in-time-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_pit",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "cluster.allocation_explain",
      "description": "Provides explanations for shard allocations in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "ClusterAllocationExplainRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_allocation_explain",
        "name": "ClusterAllocationExplainResponse"
      },
      "urls": [
        {
          "path": "/_cluster/allocation/explain",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "cluster.delete_component_template",
      "description": "Deletes a component template",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-component-template.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_component_template/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "cluster.delete_voting_config_exclusions",
      "description": "Clears cluster voting config exclusions.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/voting-config-exclusions.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_cluster/voting_config_exclusions",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "cluster.exists_component_template",
      "description": "Returns information about whether a particular component template exist",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-component-template.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_component_template/{name}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "cluster.get_component_template",
      "description": "Returns one or more component templates",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-component-template.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_component_template",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_component_template/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.get_settings",
      "description": "Returns cluster settings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_settings.cluster_get_settings",
        "name": "ClusterGetSettingsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_settings.cluster_get_settings",
        "name": "ClusterGetSettingsResponse"
      },
      "urls": [
        {
          "path": "/_cluster/settings",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.health",
      "description": "Returns basic information about the health of the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_health",
        "name": "ClusterHealthRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_health",
        "name": "ClusterHealthResponse"
      },
      "urls": [
        {
          "path": "/_cluster/health",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cluster/health/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.pending_tasks",
      "description": "Returns a list of any cluster-level changes (e.g. create index, update mapping,\nallocate or fail shard) which have not yet been executed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_pending_tasks",
        "name": "ClusterPendingTasksRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_pending_tasks",
        "name": "ClusterPendingTasksResponse"
      },
      "urls": [
        {
          "path": "/_cluster/pending_tasks",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.post_voting_config_exclusions",
      "description": "Updates the cluster voting config exclusions by node ids or node names.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/voting-config-exclusions.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_cluster/voting_config_exclusions",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "cluster.put_component_template",
      "description": "Creates or updates a component template",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-component-template.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_component_template/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "cluster.put_settings",
      "description": "Updates the cluster settings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_settings.cluster_put_settings",
        "name": "ClusterPutSettingsRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "cluster.cluster_settings.cluster_put_settings",
        "name": "ClusterPutSettingsResponse"
      },
      "urls": [
        {
          "path": "/_cluster/settings",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "cluster.remote_info",
      "description": "Returns the information about configured remote clusters.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.remote_info",
        "name": "RemoteInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.remote_info",
        "name": "RemoteInfoResponse"
      },
      "urls": [
        {
          "path": "/_remote/info",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.reroute",
      "description": "Allows to manually change the allocation of individual shards in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_reroute",
        "name": "ClusterRerouteResponse"
      },
      "urls": [
        {
          "path": "/_cluster/reroute",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "cluster.state",
      "description": "Returns a comprehensive information about the state of the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_state",
        "name": "ClusterStateRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_state",
        "name": "ClusterStateResponse"
      },
      "urls": [
        {
          "path": "/_cluster/state",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cluster/state/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cluster/state/{metric}/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "cluster.stats",
      "description": "Returns high-level overview of cluster statistics.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.cluster_stats",
        "name": "ClusterStatsResponse"
      },
      "urls": [
        {
          "path": "/_cluster/stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cluster/stats/nodes/{node_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "count",
      "description": "Returns number of documents matching a query.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html",
      "stability": "stable",
      "request": {
        "namespace": "search.count",
        "name": "CountRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.count",
        "name": "CountResponse"
      },
      "urls": [
        {
          "path": "/_count",
          "methods": [
            "POST",
            "GET"
          ]
        },
        {
          "path": "/{index}/_count",
          "methods": [
            "POST",
            "GET"
          ]
        },
        {
          "path": "/{index}/{type}/_count",
          "methods": [
            "POST",
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "create",
      "description": "Creates a new document in the index.\n\nReturns a 409 response when a document with a same ID already exists in the index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.create",
        "name": "CreateRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.single.create",
        "name": "CreateResponse"
      },
      "urls": [
        {
          "path": "/{index}/_create/{id}",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_create",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "dangling_indices.delete_dangling_index",
      "description": "Deletes the specified dangling index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-gateway-dangling-indices.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_dangling/{index_uuid}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "dangling_indices.import_dangling_index",
      "description": "Imports the specified dangling index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-gateway-dangling-indices.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_dangling/{index_uuid}",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "dangling_indices.list_dangling_indices",
      "description": "Returns all dangling indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-gateway-dangling-indices.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_dangling",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.delete_transform",
      "description": "Deletes an existing transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}",
          "methods": [
            "DELETE"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.get_transform",
      "description": "Retrieves configuration information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        },
        {
          "path": "/_data_frame/transforms",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.get_transform_stats",
      "description": "Retrieves usage information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}/_stats",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.preview_transform",
      "description": "Previews a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/preview-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/_preview",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.put_transform",
      "description": "Instantiates a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}",
          "methods": [
            "PUT"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.start_transform",
      "description": "Starts one or more transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}/_start",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.stop_transform",
      "description": "Stops one or more transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}/_stop",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "data_frame_transform_deprecated.update_transform",
      "description": "Updates certain properties of a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-transform.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_data_frame/transforms/{transform_id}/_update",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.5.0",
            "description": "[_data_frame/transforms/] is deprecated, use [_transform/] in the future."
          }
        }
      ]
    },
    {
      "name": "delete",
      "description": "Removes a document from the index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.delete",
        "name": "DeleteRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.single.delete",
        "name": "DeleteResponse"
      },
      "urls": [
        {
          "path": "/{index}/_doc/{id}",
          "methods": [
            "DELETE"
          ]
        },
        {
          "path": "/{index}/{type}/{id}",
          "methods": [
            "DELETE"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "delete_by_query",
      "description": "Deletes documents matching the provided query.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.delete_by_query",
        "name": "DeleteByQueryRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.multiple.delete_by_query",
        "name": "DeleteByQueryResponse"
      },
      "urls": [
        {
          "path": "/{index}/_delete_by_query",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_delete_by_query",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "delete_by_query_rethrottle",
      "description": "Changes the number of requests per second for a particular Delete By Query operation.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.delete_by_query_rethrottle",
        "name": "DeleteByQueryRethrottleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.multiple.delete_by_query_rethrottle",
        "name": "DeleteByQueryRethrottleResponse"
      },
      "urls": [
        {
          "path": "/_delete_by_query/{task_id}/_rethrottle",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "delete_script",
      "description": "Deletes a script.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.scripting.delete_script",
        "name": "DeleteScriptRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.scripting.delete_script",
        "name": "DeleteScriptResponse"
      },
      "urls": [
        {
          "path": "/_scripts/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "enrich.delete_policy",
      "description": "Deletes an existing enrich policy and its enrich index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-enrich-policy-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.enrich.delete_policy",
        "name": "DeleteEnrichPolicyRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.enrich.delete_policy",
        "name": "DeleteEnrichPolicyResponse"
      },
      "urls": [
        {
          "path": "/_enrich/policy/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "enrich.execute_policy",
      "description": "Creates the enrich index for an existing enrich policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/execute-enrich-policy-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "ExecuteEnrichPolicyRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.enrich.execute_policy",
        "name": "ExecuteEnrichPolicyResponse"
      },
      "urls": [
        {
          "path": "/_enrich/policy/{name}/_execute",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "enrich.get_policy",
      "description": "Gets information about an enrich policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-enrich-policy-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.enrich.get_policy",
        "name": "GetEnrichPolicyRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.enrich.get_policy",
        "name": "GetEnrichPolicyResponse"
      },
      "urls": [
        {
          "path": "/_enrich/policy/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_enrich/policy/",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "enrich.put_policy",
      "description": "Creates a new enrich policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-enrich-policy-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.enrich.put_policy",
        "name": "PutEnrichPolicyRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.enrich.put_policy",
        "name": "PutEnrichPolicyResponse"
      },
      "urls": [
        {
          "path": "/_enrich/policy/{name}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "enrich.stats",
      "description": "Gets enrich coordinator statistics and information about enrich policies that are currently executing.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/enrich-stats-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.enrich.stats",
        "name": "EnrichStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.enrich.stats",
        "name": "EnrichStatsResponse"
      },
      "urls": [
        {
          "path": "/_enrich/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "eql.delete",
      "description": "Deletes an async EQL search by ID. If the search is still running, the search request will be cancelled. Otherwise, the saved search results are deleted.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_eql/search/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "eql.get",
      "description": "Returns async results from previously executed Event Query Language (EQL) search",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_eql/search/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "eql.search",
      "description": "Returns results matching a query expressed in Event Query Language (EQL)",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/{index}/_eql/search",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "exists",
      "description": "Returns information about whether a document exists in an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.exists",
        "name": "DocumentExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/{index}/_doc/{id}",
          "methods": [
            "HEAD"
          ]
        },
        {
          "path": "/{index}/{type}/{id}",
          "methods": [
            "HEAD"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "exists_source",
      "description": "Returns information about whether a document source exists in an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.source_exists",
        "name": "SourceExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/{index}/_source/{id}",
          "methods": [
            "HEAD"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_source",
          "methods": [
            "HEAD"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "explain",
      "description": "Returns information about why a specific matches (or doesn't match) a query.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html",
      "stability": "stable",
      "request": {
        "namespace": "search.explain",
        "name": "ExplainRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.explain",
        "name": "ExplainResponse"
      },
      "urls": [
        {
          "path": "/{index}/_explain/{id}",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_explain",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "field_caps",
      "description": "Returns the information about the capabilities of fields among multiple indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html",
      "stability": "stable",
      "request": {
        "namespace": "search.field_capabilities",
        "name": "FieldCapabilitiesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.field_capabilities",
        "name": "FieldCapabilitiesResponse"
      },
      "urls": [
        {
          "path": "/_field_caps",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_field_caps",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "get",
      "description": "Returns a document.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.get",
        "name": "GetRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.single.get",
        "name": "GetResponse"
      },
      "urls": [
        {
          "path": "/{index}/_doc/{id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/{type}/{id}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "get_script",
      "description": "Returns a script.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.scripting.get_script",
        "name": "GetScriptRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.scripting.get_script",
        "name": "GetScriptResponse"
      },
      "urls": [
        {
          "path": "/_scripts/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "get_script_context",
      "description": "Returns all script contexts.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-contexts.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_script_context",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "get_script_languages",
      "description": "Returns available script types, languages and contexts",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_script_language",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "get_source",
      "description": "Returns the source of a document.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.source",
        "name": "SourceRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.single.source",
        "name": "SourceResponse"
      },
      "urls": [
        {
          "path": "/{index}/_source/{id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_source",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "graph.explore",
      "description": "Explore extracted and summarized information about the documents and terms in an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.graph.explore",
        "name": "GraphExploreRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.graph.explore",
        "name": "GraphExploreResponse"
      },
      "urls": [
        {
          "path": "/{index}/_graph/explore",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_graph/explore",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "ilm.delete_lifecycle",
      "description": "Deletes the specified lifecycle policy definition. A currently used policy cannot be deleted.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-delete-lifecycle.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.delete_lifecycle",
        "name": "DeleteLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.delete_lifecycle",
        "name": "DeleteLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_ilm/policy/{policy}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ilm.explain_lifecycle",
      "description": "Retrieves information about the index's current lifecycle state, such as the currently executing phase, action, and step.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-explain-lifecycle.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.explain_lifecycle",
        "name": "ExplainLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.explain_lifecycle",
        "name": "ExplainLifecycleResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ilm/explain",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ilm.get_lifecycle",
      "description": "Returns the specified policy definition. Includes the policy version and last modified date.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.get_lifecycle",
        "name": "GetLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.get_lifecycle",
        "name": "GetLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_ilm/policy/{policy}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ilm/policy",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ilm.get_status",
      "description": "Retrieves the current index lifecycle management (ILM) status.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-status.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.get_status",
        "name": "GetIlmStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.get_status",
        "name": "GetIlmStatusResponse"
      },
      "urls": [
        {
          "path": "/_ilm/status",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ilm.move_to_step",
      "description": "Manually moves an index into the specified step and executes that step.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-move-to-step.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.move_to_step",
        "name": "MoveToStepRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.move_to_step",
        "name": "MoveToStepResponse"
      },
      "urls": [
        {
          "path": "/_ilm/move/{index}",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ilm.put_lifecycle",
      "description": "Creates a lifecycle policy",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.put_lifecycle",
        "name": "PutLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.put_lifecycle",
        "name": "PutLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_ilm/policy/{policy}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ilm.remove_policy",
      "description": "Removes the assigned lifecycle policy and stops managing the specified index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-remove-policy.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.remove_policy",
        "name": "RemovePolicyRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.remove_policy",
        "name": "RemovePolicyResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ilm/remove",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ilm.retry",
      "description": "Retries executing the policy for an index that is in the ERROR step.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.retry",
        "name": "RetryIlmRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.retry",
        "name": "RetryIlmResponse"
      },
      "urls": [
        {
          "path": "/{index}/_ilm/retry",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ilm.start",
      "description": "Start the index lifecycle management (ILM) plugin.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-start.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.start",
        "name": "StartIlmRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.start",
        "name": "StartIlmResponse"
      },
      "urls": [
        {
          "path": "/_ilm/start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ilm.stop",
      "description": "Halts all lifecycle management operations and stops the index lifecycle management (ILM) plugin",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-stop.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ilm.stop",
        "name": "StopIlmRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ilm.stop",
        "name": "StopIlmResponse"
      },
      "urls": [
        {
          "path": "/_ilm/stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "index",
      "description": "Creates or updates a document in an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.index",
        "name": "IndexRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.single.index",
        "name": "IndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_doc/{id}",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/{index}/_doc",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/{type}/{id}",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "indices.add_block",
      "description": "Adds a block to an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/index-modules-blocks.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/{index}/_block/{block}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "indices.analyze",
      "description": "Performs the analysis process on a text and return the tokens breakdown of the text.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.analyze",
        "name": "AnalyzeRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.analyze",
        "name": "AnalyzeResponse"
      },
      "urls": [
        {
          "path": "/_analyze",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_analyze",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.clear_cache",
      "description": "Clears all or specific caches for one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.status_management.clear_cache",
        "name": "ClearCacheRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.status_management.clear_cache",
        "name": "ClearCacheResponse"
      },
      "urls": [
        {
          "path": "/_cache/clear",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_cache/clear",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.clone",
      "description": "Clones an index",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clone-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.clone_index",
        "name": "CloneIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.clone_index",
        "name": "CloneIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_clone/{target}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.close",
      "description": "Closes an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.open_close_index.close_index",
        "name": "CloseIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_close",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.create",
      "description": "Creates an index with optional settings and mappings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.create_index",
        "name": "CreateIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.create_index",
        "name": "CreateIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "indices.create_data_stream",
      "description": "Creates a data stream",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_stream/{name}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "indices.data_streams_stats",
      "description": "Provides statistics on operations happening in a data stream.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_stream/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_data_stream/{name}/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.delete",
      "description": "Deletes an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.delete_index",
        "name": "DeleteIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.delete_index",
        "name": "DeleteIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "indices.delete_alias",
      "description": "Deletes an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.alias_management.delete_alias",
        "name": "DeleteAliasRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.alias_management.delete_alias",
        "name": "DeleteAliasResponse"
      },
      "urls": [
        {
          "path": "/{index}/_alias/{name}",
          "methods": [
            "DELETE"
          ]
        },
        {
          "path": "/{index}/_aliases/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "indices.delete_data_stream",
      "description": "Deletes a data stream.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_stream/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "indices.delete_index_template",
      "description": "Deletes an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_index_template/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "indices.delete_template",
      "description": "Deletes an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.index_templates.delete_index_template",
        "name": "DeleteIndexTemplateRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_settings.index_templates.delete_index_template",
        "name": "DeleteIndexTemplateResponse"
      },
      "urls": [
        {
          "path": "/_template/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "indices.exists",
      "description": "Returns information about whether a particular index exists.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.indices_exists",
        "name": "IndexExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/{index}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "indices.exists_alias",
      "description": "Returns information about whether a particular alias exists.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.alias_management.alias_exists",
        "name": "AliasExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/_alias/{name}",
          "methods": [
            "HEAD"
          ]
        },
        {
          "path": "/{index}/_alias/{name}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "indices.exists_index_template",
      "description": "Returns information about whether a particular index template exists.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_index_template/{name}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "indices.exists_template",
      "description": "Returns information about whether a particular index template exists.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.index_templates.index_template_exists",
        "name": "IndexTemplateExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/_template/{name}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "indices.exists_type",
      "description": "Returns information about whether a particular document type exists. (DEPRECATED)",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.types_exists",
        "name": "TypeExistsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.indices_exists",
        "name": "ExistsResponse"
      },
      "urls": [
        {
          "path": "/{index}/_mapping/{type}",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "indices.flush",
      "description": "Performs the flush operation on one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.status_management.flush",
        "name": "FlushRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.status_management.flush",
        "name": "FlushResponse"
      },
      "urls": [
        {
          "path": "/_flush",
          "methods": [
            "POST",
            "GET"
          ]
        },
        {
          "path": "/{index}/_flush",
          "methods": [
            "POST",
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.flush_synced",
      "description": "Performs a synced flush operation on one or more indices. Synced flush is deprecated and will be removed in 8.0. Use flush instead",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush-api.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.status_management.synced_flush",
        "name": "SyncedFlushRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.status_management.synced_flush",
        "name": "SyncedFlushResponse"
      },
      "urls": [
        {
          "path": "/_flush/synced",
          "methods": [
            "POST",
            "GET"
          ],
          "deprecation": {
            "version": "7.6.0",
            "description": "Synced flush is deprecated and will be removed in 8.0. Use flush instead."
          }
        },
        {
          "path": "/{index}/_flush/synced",
          "methods": [
            "POST",
            "GET"
          ],
          "deprecation": {
            "version": "7.6.0",
            "description": "Synced flush is deprecated and will be removed in 8.0. Use flush instead."
          }
        }
      ]
    },
    {
      "name": "indices.forcemerge",
      "description": "Performs the force merge operation on one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.status_management.force_merge",
        "name": "ForceMergeRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.status_management.force_merge",
        "name": "ForceMergeResponse"
      },
      "urls": [
        {
          "path": "/_forcemerge",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_forcemerge",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.freeze",
      "description": "Freezes an index. A frozen index has almost no overhead on the cluster (except for maintaining its metadata in memory) and is read-only.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/freeze-index-api.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.freeze_index",
        "name": "FreezeIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.freeze_index",
        "name": "FreezeIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_freeze",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.get",
      "description": "Returns information about one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.get_index",
        "name": "GetIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.get_index",
        "name": "GetIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_alias",
      "description": "Returns an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.alias_management.get_alias",
        "name": "GetAliasRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.alias_management.get_alias",
        "name": "GetAliasResponse"
      },
      "urls": [
        {
          "path": "/_alias",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_alias/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_alias/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_alias",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_data_stream",
      "description": "Returns data streams.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/data-streams.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_data_stream",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_data_stream/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_field_mapping",
      "description": "Returns mapping for one or more fields.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.mapping_management.get_field_mapping",
        "name": "GetFieldMappingRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.mapping_management.get_field_mapping",
        "name": "GetFieldMappingResponse"
      },
      "urls": [
        {
          "path": "/_mapping/field/{fields}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_mapping/field/{fields}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_mapping/{type}/field/{fields}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/_mapping/{type}/field/{fields}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "indices.get_index_template",
      "description": "Returns an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_index_template",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_index_template/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_mapping",
      "description": "Returns mappings for one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.mapping_management.get_mapping",
        "name": "GetMappingRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.mapping_management.get_mapping",
        "name": "GetMappingResponse"
      },
      "urls": [
        {
          "path": "/_mapping",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_mapping",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_mapping/{type}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/_mapping/{type}",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "indices.get_settings",
      "description": "Returns settings for one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.get_index_settings",
        "name": "GetIndexSettingsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_settings.get_index_settings",
        "name": "GetIndexSettingsResponse"
      },
      "urls": [
        {
          "path": "/_settings",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_settings",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_settings/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_settings/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_template",
      "description": "Returns an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.index_templates.get_index_template",
        "name": "GetIndexTemplateRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_settings.index_templates.get_index_template",
        "name": "GetIndexTemplateResponse"
      },
      "urls": [
        {
          "path": "/_template",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_template/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.get_upgrade",
      "description": "The _upgrade API is no longer useful and will be removed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_upgrade",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_upgrade",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.open",
      "description": "Opens an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.open_close_index.open_index",
        "name": "OpenIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.open_close_index.open_index",
        "name": "OpenIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_open",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.put_alias",
      "description": "Creates or updates an alias.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.alias_management.put_alias",
        "name": "PutAliasRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.alias_management.put_alias",
        "name": "PutAliasResponse"
      },
      "urls": [
        {
          "path": "/{index}/_alias/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/{index}/_aliases/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.put_index_template",
      "description": "Creates or updates an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_index_template/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.put_mapping",
      "description": "Updates the index mappings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.mapping_management.put_mapping",
        "name": "PutMappingRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "indices.mapping_management.put_mapping",
        "name": "PutMappingResponse"
      },
      "urls": [
        {
          "path": "/{index}/_mapping",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_mapping",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/_mapping/{type}",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/{type}/_mappings",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/_mappings/{type}",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/_mappings/{type}",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/_mappings",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The plural mappings is accepted but only /_mapping is documented"
          }
        },
        {
          "path": "/_mapping/{type}",
          "methods": [
            "PUT",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "indices.put_settings",
      "description": "Updates the index settings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.update_index_settings",
        "name": "UpdateIndexSettingsRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "indices.index_settings.update_index_settings",
        "name": "UpdateIndexSettingsResponse"
      },
      "urls": [
        {
          "path": "/_settings",
          "methods": [
            "PUT"
          ]
        },
        {
          "path": "/{index}/_settings",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "indices.put_template",
      "description": "Creates or updates an index template.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_settings.index_templates.put_index_template",
        "name": "PutIndexTemplateRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "indices.index_settings.index_templates.put_index_template",
        "name": "PutIndexTemplateResponse"
      },
      "urls": [
        {
          "path": "/_template/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.recovery",
      "description": "Returns information about ongoing index shard recoveries.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.monitoring.indices_recovery",
        "name": "RecoveryStatusResponse"
      },
      "urls": [
        {
          "path": "/_recovery",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_recovery",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.refresh",
      "description": "Performs the refresh operation in one or more indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.status_management.refresh",
        "name": "RefreshRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.status_management.refresh",
        "name": "RefreshResponse"
      },
      "urls": [
        {
          "path": "/_refresh",
          "methods": [
            "POST",
            "GET"
          ]
        },
        {
          "path": "/{index}/_refresh",
          "methods": [
            "POST",
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.reload_search_analyzers",
      "description": "Reloads an index's search analyzers and their resources.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-reload-analyzers.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.reload_search_analyzers",
        "name": "ReloadSearchAnalyzersRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.reload_search_analyzers",
        "name": "ReloadSearchAnalyzersResponse"
      },
      "urls": [
        {
          "path": "/{index}/_reload_search_analyzers",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.resolve_index",
      "description": "Returns information about any matching indices, aliases, and data streams",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-resolve-index-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_resolve/index/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.rollover",
      "description": "Updates an alias to point to a new index when the existing index\nis considered to be too large or too old.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.rollover_index",
        "name": "RolloverIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.rollover_index",
        "name": "RolloverIndexResponse"
      },
      "urls": [
        {
          "path": "/{alias}/_rollover",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{alias}/_rollover/{new_index}",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.segments",
      "description": "Provides low-level information about segments in a Lucene index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "SegmentsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.monitoring.indices_segments",
        "name": "SegmentsResponse"
      },
      "urls": [
        {
          "path": "/_segments",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_segments",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.shard_stores",
      "description": "Provides store information for shard copies of indices.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "IndicesShardStoresRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.monitoring.indices_shard_stores",
        "name": "IndicesShardStoresResponse"
      },
      "urls": [
        {
          "path": "/_shard_stores",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_shard_stores",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.shrink",
      "description": "Allow to shrink an existing index into a new index with fewer primary shards.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.shrink_index",
        "name": "ShrinkIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.shrink_index",
        "name": "ShrinkIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_shrink/{target}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.simulate_index_template",
      "description": "Simulate matching the given index name against the index templates in the system",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_index_template/_simulate_index/{name}",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.simulate_template",
      "description": "Simulate resolving the given template name or body",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_index_template/_simulate",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/_index_template/_simulate/{name}",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.split",
      "description": "Allows you to split an existing index into a new index with more primary shards.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-split-index.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.split_index",
        "name": "SplitIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.split_index",
        "name": "SplitIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_split/{target}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.stats",
      "description": "Provides statistics on operations happening in an index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndicesStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.monitoring.indices_stats",
        "name": "IndicesStatsResponse"
      },
      "urls": [
        {
          "path": "/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_stats/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_stats/{metric}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "indices.unfreeze",
      "description": "Unfreezes an index. When a frozen index is unfrozen, the index goes through the normal recovery process and becomes writeable again.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/unfreeze-index-api.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.index_management.unfreeze_index",
        "name": "UnfreezeIndexRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "indices.index_management.unfreeze_index",
        "name": "UnfreezeIndexResponse"
      },
      "urls": [
        {
          "path": "/{index}/_unfreeze",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.update_aliases",
      "description": "Updates index aliases.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "stability": "stable",
      "request": {
        "namespace": "indices.alias_management.alias",
        "name": "BulkAliasRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "indices.alias_management.alias",
        "name": "BulkAliasResponse"
      },
      "urls": [
        {
          "path": "/_aliases",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.upgrade",
      "description": "The _upgrade API is no longer useful and will be removed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_upgrade",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_upgrade",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "indices.validate_query",
      "description": "Allows a user to validate a potentially expensive query without executing it.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html",
      "stability": "stable",
      "request": {
        "namespace": "search.validate",
        "name": "ValidateQueryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.validate",
        "name": "ValidateQueryResponse"
      },
      "urls": [
        {
          "path": "/_validate/query",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_validate/query",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_validate/query",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "info",
      "description": "Returns basic information about the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.root_node_info",
        "name": "RootNodeInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.root_node_info",
        "name": "RootNodeInfoResponse"
      },
      "urls": [
        {
          "path": "/",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ingest.delete_pipeline",
      "description": "Deletes a pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-pipeline-api.html",
      "stability": "stable",
      "request": {
        "namespace": "ingest.delete_pipeline",
        "name": "DeletePipelineRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "ingest.delete_pipeline",
        "name": "DeletePipelineResponse"
      },
      "urls": [
        {
          "path": "/_ingest/pipeline/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ingest.get_pipeline",
      "description": "Returns a pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html",
      "stability": "stable",
      "request": {
        "namespace": "ingest.get_pipeline",
        "name": "GetPipelineRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "ingest.get_pipeline",
        "name": "GetPipelineResponse"
      },
      "urls": [
        {
          "path": "/_ingest/pipeline",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ingest/pipeline/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ingest.processor_grok",
      "description": "Returns a list of the built-in patterns.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/grok-processor.html#grok-processor-rest-get",
      "stability": "stable",
      "request": {
        "namespace": "ingest.processor",
        "name": "GrokProcessorPatternsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "ingest.processor",
        "name": "GrokProcessorPatternsResponse"
      },
      "urls": [
        {
          "path": "/_ingest/processor/grok",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ingest.put_pipeline",
      "description": "Creates or updates a pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/put-pipeline-api.html",
      "stability": "stable",
      "request": {
        "namespace": "ingest.put_pipeline",
        "name": "PutPipelineRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "ingest.put_pipeline",
        "name": "PutPipelineResponse"
      },
      "urls": [
        {
          "path": "/_ingest/pipeline/{id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ingest.simulate",
      "description": "Allows to simulate a pipeline with example documents.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html",
      "stability": "stable",
      "request": {
        "namespace": "ingest.simulate_pipeline",
        "name": "SimulatePipelineRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "ingest.simulate_pipeline",
        "name": "SimulatePipelineResponse"
      },
      "urls": [
        {
          "path": "/_ingest/pipeline/_simulate",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ingest/pipeline/{id}/_simulate",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "license.delete",
      "description": "Deletes licensing information for the cluster",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/delete-license.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.delete_license",
        "name": "DeleteLicenseRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.delete_license",
        "name": "DeleteLicenseResponse"
      },
      "urls": [
        {
          "path": "/_license",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "license.get",
      "description": "Retrieves licensing information for the cluster",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-license.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.get_license",
        "name": "GetLicenseRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.get_license",
        "name": "GetLicenseResponse"
      },
      "urls": [
        {
          "path": "/_license",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "license.get_basic_status",
      "description": "Retrieves information about the status of the basic license.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-basic-status.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.get_basic_license_status",
        "name": "GetBasicLicenseStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.get_basic_license_status",
        "name": "GetBasicLicenseStatusResponse"
      },
      "urls": [
        {
          "path": "/_license/basic_status",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "license.get_trial_status",
      "description": "Retrieves information about the status of the trial license.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/get-trial-status.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.get_trial_license_status",
        "name": "GetTrialLicenseStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.get_trial_license_status",
        "name": "GetTrialLicenseStatusResponse"
      },
      "urls": [
        {
          "path": "/_license/trial_status",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "license.post",
      "description": "Updates the license for the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/update-license.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.post_license",
        "name": "PostLicenseRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.post_license",
        "name": "PostLicenseResponse"
      },
      "urls": [
        {
          "path": "/_license",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "license.post_start_basic",
      "description": "Starts an indefinite basic license.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/start-basic.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.start_basic_license",
        "name": "StartBasicLicenseRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.start_basic_license",
        "name": "StartBasicLicenseResponse"
      },
      "urls": [
        {
          "path": "/_license/start_basic",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "license.post_start_trial",
      "description": "starts a limited time trial license.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/start-trial.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.license.start_trial_license",
        "name": "StartTrialLicenseRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.license.start_trial_license",
        "name": "StartTrialLicenseResponse"
      },
      "urls": [
        {
          "path": "/_license/start_trial",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "mget",
      "description": "Allows to get multiple documents in one request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.multi_get.request",
        "name": "MultiGetRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.multiple.multi_get.response",
        "name": "MultiGetResponse"
      },
      "urls": [
        {
          "path": "/_mget",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_mget",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_mget",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "migration.deprecations",
      "description": "Retrieves information about different cluster, node, and index level settings that use deprecated features that will be removed or changed in the next major version.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.migration.deprecation_info",
        "name": "DeprecationInfoResponse"
      },
      "urls": [
        {
          "path": "/_migration/deprecations",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_migration/deprecations",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.close_job",
      "description": "Closes one or more anomaly detection jobs. A job can be opened and closed multiple times throughout its lifecycle.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.close_job",
        "name": "CloseJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.close_job",
        "name": "CloseJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_close",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_calendar",
      "description": "Deletes a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_calendar",
        "name": "DeleteCalendarRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_calendar",
        "name": "DeleteCalendarResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_calendar_event",
      "description": "Deletes scheduled events from a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar-event.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_calendar_event",
        "name": "DeleteCalendarEventRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_calendar_event",
        "name": "DeleteCalendarEventResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}/events/{event_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_calendar_job",
      "description": "Deletes anomaly detection jobs from a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-calendar-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_calendar_job",
        "name": "DeleteCalendarJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_calendar_job",
        "name": "DeleteCalendarJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}/jobs/{job_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_data_frame_analytics",
      "description": "Deletes an existing data frame analytics job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_datafeed",
      "description": "Deletes an existing datafeed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_datafeed",
        "name": "DeleteDatafeedRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_datafeed",
        "name": "DeleteDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_expired_data",
      "description": "Deletes expired and unused machine learning data.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-expired-data.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_expired_data",
        "name": "DeleteExpiredDataRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_expired_data",
        "name": "DeleteExpiredDataResponse"
      },
      "urls": [
        {
          "path": "/_ml/_delete_expired_data/{job_id}",
          "methods": [
            "DELETE"
          ]
        },
        {
          "path": "/_ml/_delete_expired_data",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_filter",
      "description": "Deletes a filter.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-filter.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_filter",
        "name": "DeleteFilterRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_filter",
        "name": "DeleteFilterResponse"
      },
      "urls": [
        {
          "path": "/_ml/filters/{filter_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_forecast",
      "description": "Deletes forecasts from a machine learning job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-forecast.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_forecast",
        "name": "DeleteForecastRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_forecast",
        "name": "DeleteForecastResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_forecast",
          "methods": [
            "DELETE"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_forecast/{forecast_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_job",
      "description": "Deletes an existing anomaly detection job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_job",
        "name": "DeleteJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_job",
        "name": "DeleteJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_model_snapshot",
      "description": "Deletes an existing model snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.delete_model_snapshot",
        "name": "DeleteModelSnapshotRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.delete_model_snapshot",
        "name": "DeleteModelSnapshotResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.delete_trained_model",
      "description": "Deletes an existing trained inference model that is currently not referenced by an ingest pipeline.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-trained-models.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/trained_models/{model_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "ml.estimate_model_memory",
      "description": "Estimates the model memory",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-apis.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.estimate_model_memory",
        "name": "EstimateModelMemoryRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.estimate_model_memory",
        "name": "EstimateModelMemoryResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/_estimate_model_memory",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.evaluate_data_frame",
      "description": "Evaluates the data frame analytics for an annotated index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/evaluate-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/_evaluate",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.explain_data_frame_analytics",
      "description": "Explains a data frame analytics config.",
      "docUrl": "http://www.elastic.co/guide/en/elasticsearch/reference/current/explain-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/_explain",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ml/data_frame/analytics/{id}/_explain",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.find_file_structure",
      "description": "Finds the structure of a text file. The text file must contain data that is suitable to be ingested into Elasticsearch.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-find-file-structure.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_ml/find_file_structure",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.flush_job",
      "description": "Forces any buffered data to be processed by the job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.flush_job",
        "name": "FlushJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.flush_job",
        "name": "FlushJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_flush",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.forecast",
      "description": "Predicts the future behavior of a time series by using its historical behavior.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-forecast.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.forecast_job",
        "name": "ForecastJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.forecast_job",
        "name": "ForecastJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_forecast",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_buckets",
      "description": "Retrieves anomaly detection job results for one or more buckets.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_buckets",
        "name": "GetBucketsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_buckets",
        "name": "GetBucketsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/buckets",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_calendar_events",
      "description": "Retrieves information about the scheduled events in calendars.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar-event.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_calendar_events",
        "name": "GetCalendarEventsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_calendar_events",
        "name": "GetCalendarEventsResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}/events",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_calendars",
      "description": "Retrieves configuration information for calendars.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-calendar.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_calendars",
        "name": "GetCalendarsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_calendars",
        "name": "GetCalendarsResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ml/calendars/{calendar_id}",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_categories",
      "description": "Retrieves anomaly detection job results for one or more categories.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_categories",
        "name": "GetCategoriesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_categories",
        "name": "GetCategoriesResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/categories/{category_id}",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/categories/",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_data_frame_analytics",
      "description": "Retrieves configuration information for data frame analytics jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/data_frame/analytics",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_data_frame_analytics_stats",
      "description": "Retrieves usage information for data frame analytics jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-dfanalytics-stats.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/data_frame/analytics/{id}/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_datafeed_stats",
      "description": "Retrieves usage information for datafeeds.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_datafeed_stats",
        "name": "GetDatafeedStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_datafeed_stats",
        "name": "GetDatafeedStatsResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/datafeeds/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_datafeeds",
      "description": "Retrieves configuration information for datafeeds.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_datafeeds",
        "name": "GetDatafeedsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_datafeeds",
        "name": "GetDatafeedsResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/datafeeds",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_filters",
      "description": "Retrieves filters.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-filter.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_filters",
        "name": "GetFiltersRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_filters",
        "name": "GetFiltersResponse"
      },
      "urls": [
        {
          "path": "/_ml/filters",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/filters/{filter_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_influencers",
      "description": "Retrieves anomaly detection job results for one or more influencers.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_influencers",
        "name": "GetInfluencersRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_influencers",
        "name": "GetInfluencersResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/influencers",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_job_stats",
      "description": "Retrieves usage information for anomaly detection jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_job_stats",
        "name": "GetJobStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_job_stats",
        "name": "GetJobStatsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_jobs",
      "description": "Retrieves configuration information for anomaly detection jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_jobs",
        "name": "GetJobsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_jobs",
        "name": "GetJobsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_model_snapshots",
      "description": "Retrieves information about model snapshots.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_model_snapshots",
        "name": "GetModelSnapshotsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_model_snapshots",
        "name": "GetModelSnapshotsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_ml/anomaly_detectors/{job_id}/model_snapshots",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_overall_buckets",
      "description": "Retrieves overall bucket results that summarize the bucket results of multiple anomaly detection jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-overall-buckets.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_overall_buckets",
        "name": "GetOverallBucketsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_overall_buckets",
        "name": "GetOverallBucketsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/overall_buckets",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_records",
      "description": "Retrieves anomaly records for an anomaly detection job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.get_anomaly_records",
        "name": "GetAnomalyRecordsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.get_anomaly_records",
        "name": "GetAnomalyRecordsResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/results/records",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.get_trained_models",
      "description": "Retrieves configuration information for a trained inference model.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-trained-models.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/trained_models/{model_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/trained_models",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.get_trained_models_stats",
      "description": "Retrieves usage information for trained inference models.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-trained-models-stats.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/trained_models/{model_id}/_stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_ml/trained_models/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.info",
      "description": "Returns defaults and limits used by machine learning.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-ml-info.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "MachineLearningInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.machine_learning_info",
        "name": "MachineLearningInfoResponse"
      },
      "urls": [
        {
          "path": "/_ml/info",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.open_job",
      "description": "Opens one or more anomaly detection jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.open_job",
        "name": "OpenJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.open_job",
        "name": "OpenJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_open",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.post_calendar_events",
      "description": "Posts scheduled events in a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-calendar-event.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.post_calendar_events",
        "name": "PostCalendarEventsRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.post_calendar_events",
        "name": "PostCalendarEventsResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}/events",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.post_data",
      "description": "Sends data to an anomaly detection job for analysis.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.post_job_data",
        "name": "PostJobDataRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.post_job_data",
        "name": "PostJobDataResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_data",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.preview_datafeed",
      "description": "Previews a datafeed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.preview_datafeed",
        "name": "PreviewDatafeedRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.preview_datafeed",
        "name": "PreviewDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}/_preview",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ml.put_calendar",
      "description": "Instantiates a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.put_calendar",
        "name": "PutCalendarRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.put_calendar",
        "name": "PutCalendarResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_calendar_job",
      "description": "Adds an anomaly detection job to a calendar.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-calendar-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.put_calendar_job",
        "name": "PutCalendarJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.put_calendar_job",
        "name": "PutCalendarJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/calendars/{calendar_id}/jobs/{job_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_data_frame_analytics",
      "description": "Instantiates a data frame analytics job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_datafeed",
      "description": "Instantiates a datafeed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.put_datafeed",
        "name": "PutDatafeedRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.put_datafeed",
        "name": "PutDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_filter",
      "description": "Instantiates a filter.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.put_filter",
        "name": "PutFilterRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.put_filter",
        "name": "PutFilterResponse"
      },
      "urls": [
        {
          "path": "/_ml/filters/{filter_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_job",
      "description": "Instantiates an anomaly detection job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.put_job",
        "name": "PutJobRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.put_job",
        "name": "PutJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.put_trained_model",
      "description": "Creates an inference trained model.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-models.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_ml/trained_models/{model_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "ml.revert_model_snapshot",
      "description": "Reverts to a specific snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.revert_model_snapshot",
        "name": "RevertModelSnapshotRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.revert_model_snapshot",
        "name": "RevertModelSnapshotResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.set_upgrade_mode",
      "description": "Sets a cluster wide upgrade_mode setting that prepares machine learning indices for an upgrade.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.set_upgrade_mode",
        "name": "SetUpgradeModeRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.set_upgrade_mode",
        "name": "SetUpgradeModeResponse"
      },
      "urls": [
        {
          "path": "/_ml/set_upgrade_mode",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.start_data_frame_analytics",
      "description": "Starts a data frame analytics job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}/_start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.start_datafeed",
      "description": "Starts one or more datafeeds.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.start_datafeed",
        "name": "StartDatafeedRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.start_datafeed",
        "name": "StartDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}/_start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.stop_data_frame_analytics",
      "description": "Stops one or more data frame analytics jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}/_stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.stop_datafeed",
      "description": "Stops one or more datafeeds.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.stop_datafeed",
        "name": "StopDatafeedRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.machine_learning.stop_datafeed",
        "name": "StopDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}/_stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.update_data_frame_analytics",
      "description": "Updates certain properties of a data frame analytics job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-dfanalytics.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_ml/data_frame/analytics/{id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.update_datafeed",
      "description": "Updates certain properties of a datafeed.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.update_data_feed",
        "name": "UpdateDatafeedRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.update_data_feed",
        "name": "UpdateDatafeedResponse"
      },
      "urls": [
        {
          "path": "/_ml/datafeeds/{datafeed_id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.update_filter",
      "description": "Updates the description of a filter, adds items, or removes items.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-filter.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.update_filter",
        "name": "UpdateFilterRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.update_filter",
        "name": "UpdateFilterResponse"
      },
      "urls": [
        {
          "path": "/_ml/filters/{filter_id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.update_job",
      "description": "Updates certain properties of an anomaly detection job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.update_job",
        "name": "UpdateJobRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.update_job",
        "name": "UpdateJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.update_model_snapshot",
      "description": "Updates certain properties of a snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.update_model_snapshot",
        "name": "UpdateModelSnapshotRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.update_model_snapshot",
        "name": "UpdateModelSnapshotResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.validate",
      "description": "Validates an anomaly detection job.",
      "docUrl": "https://www.elastic.co/guide/en/machine-learning/current/ml-jobs.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.validate_job",
        "name": "ValidateJobRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.validate_job",
        "name": "ValidateJobResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/_validate",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ml.validate_detector",
      "description": "Validates an anomaly detection detector.",
      "docUrl": "https://www.elastic.co/guide/en/machine-learning/current/ml-jobs.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.machine_learning.validate_detector",
        "name": "ValidateDetectorRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.machine_learning.validate_detector",
        "name": "ValidateDetectorResponse"
      },
      "urls": [
        {
          "path": "/_ml/anomaly_detectors/_validate/detector",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "monitoring.bulk",
      "description": "Used by the monitoring features to send monitoring data.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/monitor-elasticsearch-cluster.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_monitoring/bulk",
          "methods": [
            "POST",
            "PUT"
          ]
        },
        {
          "path": "/_monitoring/{type}/bulk",
          "methods": [
            "POST",
            "PUT"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "msearch",
      "description": "Allows to execute several search operations in one request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html",
      "stability": "stable",
      "request": {
        "namespace": "search.multi_search",
        "name": "MultiSearchRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "search.multi_search",
        "name": "MultiSearchResponse"
      },
      "urls": [
        {
          "path": "/_msearch",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_msearch",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_msearch",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "msearch_template",
      "description": "Allows to execute several search template operations in one request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html",
      "stability": "stable",
      "request": {
        "namespace": "search.multi_search_template",
        "name": "MultiSearchTemplateRequest"
      },
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_msearch/template",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_msearch/template",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_msearch/template",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "mtermvectors",
      "description": "Returns multiple termvectors in one request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.multi_term_vectors",
        "name": "MultiTermVectorsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.multiple.multi_term_vectors",
        "name": "MultiTermVectorsResponse"
      },
      "urls": [
        {
          "path": "/_mtermvectors",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_mtermvectors",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_mtermvectors",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "nodes.hot_threads",
      "description": "Returns information about hot threads on each node in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.nodes_hot_threads",
        "name": "NodesHotThreadsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.nodes_hot_threads",
        "name": "NodesHotThreadsResponse"
      },
      "urls": [
        {
          "path": "/_nodes/hot_threads",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/hot_threads",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_cluster/nodes/hotthreads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"
          }
        },
        {
          "path": "/_cluster/nodes/{node_id}/hotthreads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"
          }
        },
        {
          "path": "/_nodes/hotthreads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"
          }
        },
        {
          "path": "/_nodes/{node_id}/hotthreads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot threads API accepts `hotthreads` but only `hot_threads` is documented"
          }
        },
        {
          "path": "/_cluster/nodes/hot_threads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot accepts /_cluster/nodes as prefix for backwards compatibility reasons"
          }
        },
        {
          "path": "/_cluster/nodes/{node_id}/hot_threads",
          "methods": [
            "GET"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "The hot accepts /_cluster/nodes as prefix for backwards compatibility reasons"
          }
        }
      ]
    },
    {
      "name": "nodes.info",
      "description": "Returns information about nodes in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.nodes_info",
        "name": "NodesInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.nodes_info",
        "name": "NodesInfoResponse"
      },
      "urls": [
        {
          "path": "/_nodes",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/{metric}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "nodes.reload_secure_settings",
      "description": "Reloads secure settings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/secure-settings.html#reloadable-secure-settings",
      "stability": "stable",
      "request": {
        "namespace": "cluster.reload_secure_settings",
        "name": "ReloadSecureSettingsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.reload_secure_settings",
        "name": "ReloadSecureSettingsResponse"
      },
      "urls": [
        {
          "path": "/_nodes/reload_secure_settings",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/_nodes/{node_id}/reload_secure_settings",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "nodes.stats",
      "description": "Returns statistical information about nodes in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.nodes_stats",
        "name": "NodesStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.nodes_stats",
        "name": "NodesStatsResponse"
      },
      "urls": [
        {
          "path": "/_nodes/stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/stats/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/stats/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/stats/{metric}/{index_metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/stats/{metric}/{index_metric}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "nodes.usage",
      "description": "Returns low-level information about REST actions usage on nodes.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.nodes_usage",
        "name": "NodesUsageRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.nodes_usage",
        "name": "NodesUsageResponse"
      },
      "urls": [
        {
          "path": "/_nodes/usage",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/usage",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/usage/{metric}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_nodes/{node_id}/usage/{metric}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "open_point_in_time",
      "description": "Open a point in time that can be used in subsequent searches",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/point-in-time-api.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_pit",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_pit",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "ping",
      "description": "Returns whether the cluster is running.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.ping",
        "name": "PingRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.ping",
        "name": "PingResponse"
      },
      "urls": [
        {
          "path": "/",
          "methods": [
            "HEAD"
          ]
        }
      ]
    },
    {
      "name": "put_script",
      "description": "Creates or updates a script.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.scripting.put_script",
        "name": "PutScriptRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "modules.scripting.put_script",
        "name": "PutScriptResponse"
      },
      "urls": [
        {
          "path": "/_scripts/{id}",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/_scripts/{id}/{context}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "rank_eval",
      "description": "Allows to evaluate the quality of ranked search results over a set of typical search queries",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-rank-eval.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_rank_eval",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_rank_eval",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "reindex",
      "description": "Allows to copy documents from one index to another, optionally filtering the source\ndocuments by a query, changing the destination index settings, or fetching the\ndocuments from a remote cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.multiple.reindex",
        "name": "ReindexResponse"
      },
      "urls": [
        {
          "path": "/_reindex",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "reindex_rethrottle",
      "description": "Changes the number of requests per second for a particular Reindex operation.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexRethrottleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.multiple.reindex_rethrottle",
        "name": "ReindexRethrottleResponse"
      },
      "urls": [
        {
          "path": "/_reindex/{task_id}/_rethrottle",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "render_search_template",
      "description": "Allows to use the Mustache language to pre-render a search definition.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html#_validating_templates",
      "stability": "stable",
      "request": {
        "namespace": "search.search_template.render_search_template",
        "name": "RenderSearchTemplateRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.search_template.render_search_template",
        "name": "RenderSearchTemplateResponse"
      },
      "urls": [
        {
          "path": "/_render/template",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_render/template/{id}",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "rollup.delete_job",
      "description": "Deletes an existing rollup job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-delete-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.delete_rollup_job",
        "name": "DeleteRollupJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.delete_rollup_job",
        "name": "DeleteRollupJobResponse"
      },
      "urls": [
        {
          "path": "/_rollup/job/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "rollup.get_jobs",
      "description": "Retrieves the configuration, stats, and status of rollup jobs.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "GetRollupJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.get_rollup_job",
        "name": "GetRollupJobResponse"
      },
      "urls": [
        {
          "path": "/_rollup/job/{id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_rollup/job/",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "rollup.get_rollup_caps",
      "description": "Returns the capabilities of any rollup jobs that have been configured for a specific index or index pattern.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-caps.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "GetRollupCapabilitiesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.get_rollup_capabilities",
        "name": "GetRollupCapabilitiesResponse"
      },
      "urls": [
        {
          "path": "/_rollup/data/{id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_rollup/data/",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "rollup.get_rollup_index_caps",
      "description": "Returns the rollup capabilities of all jobs inside of a rollup index (e.g. the index where rollup data is stored).",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "GetRollupIndexCapabilitiesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.get_rollup_index_capabilities",
        "name": "GetRollupIndexCapabilitiesResponse"
      },
      "urls": [
        {
          "path": "/{index}/_rollup/data",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "rollup.put_job",
      "description": "Creates a rollup job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-put-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.create_rollup_job",
        "name": "CreateRollupJobRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.roll_up.create_rollup_job",
        "name": "CreateRollupJobResponse"
      },
      "urls": [
        {
          "path": "/_rollup/job/{id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "rollup.rollup_search",
      "description": "Enables searching rolled-up data using the standard query DSL.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-search.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.rollup_search",
        "name": "RollupSearchRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.roll_up.rollup_search",
        "name": "RollupSearchResponse"
      },
      "urls": [
        {
          "path": "/{index}/_rollup_search",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_rollup_search",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "rollup.start_job",
      "description": "Starts an existing, stopped rollup job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-start-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.start_rollup_job",
        "name": "StartRollupJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.start_rollup_job",
        "name": "StartRollupJobResponse"
      },
      "urls": [
        {
          "path": "/_rollup/job/{id}/_start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "rollup.stop_job",
      "description": "Stops an existing, started rollup job.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-stop-job.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.roll_up.stop_rollup_job",
        "name": "StopRollupJobRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.roll_up.stop_rollup_job",
        "name": "StopRollupJobResponse"
      },
      "urls": [
        {
          "path": "/_rollup/job/{id}/_stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "scripts_painless_execute",
      "description": "Allows an arbitrary script to be executed and a result to be returned",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/painless/master/painless-execute-api.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.scripting.execute_painless_script",
        "name": "ExecutePainlessScriptRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.scripting.execute_painless_script",
        "name": "ExecutePainlessScriptResponse"
      },
      "urls": [
        {
          "path": "/_scripts/painless/_execute",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "scroll",
      "description": "Allows to retrieve a large numbers of results from a single search request.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-body.html#request-body-search-scroll",
      "stability": "stable",
      "request": {
        "namespace": "search.scroll.scroll",
        "name": "ScrollRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.scroll.scroll",
        "name": "ScrollResponse"
      },
      "urls": [
        {
          "path": "/_search/scroll",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_search/scroll/{scroll_id}",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "A scroll id can be quite large and should be specified as part of the body"
          }
        }
      ]
    },
    {
      "name": "search",
      "description": "Returns results matching a query.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html",
      "stability": "stable",
      "request": {
        "namespace": "search.search",
        "name": "SearchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.search",
        "name": "SearchResponse"
      },
      "urls": [
        {
          "path": "/_search",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_search",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_search",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "search_shards",
      "description": "Returns information about the indices and shards that a search request would be executed against.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html",
      "stability": "stable",
      "request": {
        "namespace": "search.search_shards",
        "name": "SearchShardsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "search.search_shards",
        "name": "SearchShardsResponse"
      },
      "urls": [
        {
          "path": "/_search_shards",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_search_shards",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "search_template",
      "description": "Allows to use the Mustache language to pre-render a search definition.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html",
      "stability": "stable",
      "request": {
        "namespace": "search.search_template",
        "name": "SearchTemplateRequest"
      },
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_search/template",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_search/template",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_search/template",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "searchable_snapshots.clear_cache",
      "description": "Clear the cache of searchable snapshots.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-apis.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_searchable_snapshots/cache/clear",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/_searchable_snapshots/cache/clear",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "searchable_snapshots.mount",
      "description": "Mount a snapshot as a searchable index.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}/_mount",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "searchable_snapshots.repository_stats",
      "description": "DEPRECATED: This API is replaced by the Repositories Metering API.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-apis.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_snapshot/{repository}/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "searchable_snapshots.stats",
      "description": "Retrieve various statistics about searchable snapshots.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-apis.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_searchable_snapshots/stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/{index}/_searchable_snapshots/stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.authenticate",
      "description": "Enables authentication as a user and retrieve information about the authenticated user.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.authenticate",
        "name": "AuthenticateRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.authenticate",
        "name": "AuthenticateResponse"
      },
      "urls": [
        {
          "path": "/_security/_authenticate",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.change_password",
      "description": "Changes the passwords of users in the native realm and built-in users.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.change_password",
        "name": "ChangePasswordRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.user.change_password",
        "name": "ChangePasswordResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}/_password",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/_security/user/_password",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.clear_api_key_cache",
      "description": "Clear a subset or all entries from the API key cache.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-api-key-cache.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_security/api_key/{ids}/_clear_cache",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.clear_cached_privileges",
      "description": "Evicts application privileges from the native application privileges cache.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-privilege-cache.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_security/privilege/{application}/_clear_cache",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.clear_cached_realms",
      "description": "Evicts users from the user cache. Can completely clear the cache or evict specific users.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.clear_cached_realms",
        "name": "ClearCachedRealmsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.clear_cached_realms",
        "name": "ClearCachedRealmsResponse"
      },
      "urls": [
        {
          "path": "/_security/realm/{realms}/_clear_cache",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.clear_cached_roles",
      "description": "Evicts roles from the native role cache.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-role-cache.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role.clear_cached_roles",
        "name": "ClearCachedRolesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.role.clear_cached_roles",
        "name": "ClearCachedRolesResponse"
      },
      "urls": [
        {
          "path": "/_security/role/{name}/_clear_cache",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.create_api_key",
      "description": "Creates an API key for access without requiring basic authentication.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "CreateApiKeyRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.api_key.create_api_key",
        "name": "CreateApiKeyResponse"
      },
      "urls": [
        {
          "path": "/_security/api_key",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.delete_privileges",
      "description": "Removes application privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-privilege.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.delete_privileges",
        "name": "DeletePrivilegesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.privileges.delete_privileges",
        "name": "DeletePrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/privilege/{application}/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.delete_role",
      "description": "Removes roles in the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role.delete_role",
        "name": "DeleteRoleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.role.delete_role",
        "name": "DeleteRoleResponse"
      },
      "urls": [
        {
          "path": "/_security/role/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.delete_role_mapping",
      "description": "Removes role mappings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-role-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role_mapping.delete_role_mapping",
        "name": "DeleteRoleMappingRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.role_mapping.delete_role_mapping",
        "name": "DeleteRoleMappingResponse"
      },
      "urls": [
        {
          "path": "/_security/role_mapping/{name}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.delete_user",
      "description": "Deletes users from the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.delete_user",
        "name": "DeleteUserRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.user.delete_user",
        "name": "DeleteUserResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.disable_user",
      "description": "Disables users in the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-disable-user.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.disable_user",
        "name": "DisableUserRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.user.disable_user",
        "name": "DisableUserResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}/_disable",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.enable_user",
      "description": "Enables users in the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-enable-user.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.enable_user",
        "name": "EnableUserRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.user.enable_user",
        "name": "EnableUserResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}/_enable",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.get_api_key",
      "description": "Retrieves information for one or more API keys.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.api_key.get_api_key",
        "name": "GetApiKeyRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.api_key.get_api_key",
        "name": "GetApiKeyResponse"
      },
      "urls": [
        {
          "path": "/_security/api_key",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_builtin_privileges",
      "description": "Retrieves the list of cluster privileges and index privileges that are available in this version of Elasticsearch.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-builtin-privileges.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.get_builtin_privileges",
        "name": "GetBuiltinPrivilegesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.privileges.get_builtin_privileges",
        "name": "GetBuiltinPrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/privilege/_builtin",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_privileges",
      "description": "Retrieves application privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.get_privileges",
        "name": "GetPrivilegesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.privileges.get_privileges",
        "name": "GetPrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/privilege",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_security/privilege/{application}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_security/privilege/{application}/{name}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_role",
      "description": "Retrieves roles in the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role.get_role",
        "name": "GetRoleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.role.get_role",
        "name": "GetRoleResponse"
      },
      "urls": [
        {
          "path": "/_security/role/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_security/role",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_role_mapping",
      "description": "Retrieves role mappings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role_mapping.get_role_mapping",
        "name": "GetRoleMappingRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.role_mapping.get_role_mapping",
        "name": "GetRoleMappingResponse"
      },
      "urls": [
        {
          "path": "/_security/role_mapping/{name}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_security/role_mapping",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_token",
      "description": "Creates a bearer token for access without requiring basic authentication.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-token.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.get_user_access_token",
        "name": "GetUserAccessTokenRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.user.get_user_access_token",
        "name": "GetUserAccessTokenResponse"
      },
      "urls": [
        {
          "path": "/_security/oauth2/token",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.get_user",
      "description": "Retrieves information about users in the native realm and built-in users.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.get_user",
        "name": "GetUserRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.user.get_user",
        "name": "GetUserResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_security/user",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.get_user_privileges",
      "description": "Retrieves application privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-privileges.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "GetUserPrivilegesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.security.privileges.get_user_privileges",
        "name": "GetUserPrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/user/_privileges",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "security.grant_api_key",
      "description": "Creates an API key on behalf of another user.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-grant-api-key.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_security/api_key/grant",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.has_privileges",
      "description": "Determines whether the specified user has a specified list of privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-has-privileges.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "HasPrivilegesRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.privileges.has_privileges",
        "name": "HasPrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/user/_has_privileges",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/_security/user/{user}/_has_privileges",
          "methods": [
            "GET",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.invalidate_api_key",
      "description": "Invalidates one or more API keys.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.api_key.invalidate_api_key",
        "name": "InvalidateApiKeyRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.api_key.invalidate_api_key",
        "name": "InvalidateApiKeyResponse"
      },
      "urls": [
        {
          "path": "/_security/api_key",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.invalidate_token",
      "description": "Invalidates one or more access tokens or refresh tokens.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.invalidate_user_access_token",
        "name": "InvalidateUserAccessTokenRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.user.invalidate_user_access_token",
        "name": "InvalidateUserAccessTokenResponse"
      },
      "urls": [
        {
          "path": "/_security/oauth2/token",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "security.put_privileges",
      "description": "Adds or updates application privileges.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-privileges.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PutPrivilegesRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.privileges.put_privileges",
        "name": "PutPrivilegesResponse"
      },
      "urls": [
        {
          "path": "/_security/privilege/",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.put_role",
      "description": "Adds and updates roles in the native realm.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role.put_role",
        "name": "PutRoleRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.role.put_role",
        "name": "PutRoleResponse"
      },
      "urls": [
        {
          "path": "/_security/role/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.put_role_mapping",
      "description": "Creates and updates role mappings.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.role_mapping.put_role_mapping",
        "name": "PutRoleMappingRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.role_mapping.put_role_mapping",
        "name": "PutRoleMappingResponse"
      },
      "urls": [
        {
          "path": "/_security/role_mapping/{name}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "security.put_user",
      "description": "Adds and updates users in the native realm. These users are commonly referred to as native users.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-user.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.security.user.put_user",
        "name": "PutUserRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.security.user.put_user",
        "name": "PutUserResponse"
      },
      "urls": [
        {
          "path": "/_security/user/{username}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "slm.delete_lifecycle",
      "description": "Deletes an existing snapshot lifecycle policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-delete-policy.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.delete_lifecycle",
        "name": "DeleteSnapshotLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.delete_lifecycle",
        "name": "DeleteSnapshotLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_slm/policy/{policy_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "slm.execute_lifecycle",
      "description": "Immediately creates a snapshot according to the lifecycle policy, without waiting for the scheduled time.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-execute-lifecycle.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.execute_lifecycle",
        "name": "ExecuteSnapshotLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.execute_lifecycle",
        "name": "ExecuteSnapshotLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_slm/policy/{policy_id}/_execute",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "slm.execute_retention",
      "description": "Deletes any snapshots that are expired according to the policy's retention rules.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-execute-retention.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.execute_retention",
        "name": "ExecuteRetentionRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.execute_retention",
        "name": "ExecuteRetentionResponse"
      },
      "urls": [
        {
          "path": "/_slm/_execute_retention",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "slm.get_lifecycle",
      "description": "Retrieves one or more snapshot lifecycle policy definitions and information about the latest snapshot attempts.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-get-policy.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.get_lifecycle",
        "name": "GetSnapshotLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.get_lifecycle",
        "name": "GetSnapshotLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_slm/policy/{policy_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_slm/policy",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "slm.get_stats",
      "description": "Returns global and policy-level statistics about actions taken by snapshot lifecycle management.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/slm-api-get-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.get_stats",
        "name": "GetSnapshotLifecycleStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.get_stats",
        "name": "GetSnapshotLifecycleStatsResponse"
      },
      "urls": [
        {
          "path": "/_slm/stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "slm.get_status",
      "description": "Retrieves the status of snapshot lifecycle management (SLM).",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-get-status.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.get_status",
        "name": "GetSnapshotLifecycleManagementStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.get_status",
        "name": "GetSnapshotLifecycleManagementStatusResponse"
      },
      "urls": [
        {
          "path": "/_slm/status",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "slm.put_lifecycle",
      "description": "Creates or updates a snapshot lifecycle policy.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-put-policy.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.put_lifecycle",
        "name": "PutSnapshotLifecycleRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.put_lifecycle",
        "name": "PutSnapshotLifecycleResponse"
      },
      "urls": [
        {
          "path": "/_slm/policy/{policy_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "slm.start",
      "description": "Turns on snapshot lifecycle management (SLM).",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-start.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.start",
        "name": "StartSnapshotLifecycleManagementRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.start",
        "name": "StartSnapshotLifecycleManagementResponse"
      },
      "urls": [
        {
          "path": "/_slm/start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "slm.stop",
      "description": "Turns off snapshot lifecycle management (SLM).",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-stop.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.slm.stop",
        "name": "StopSnapshotLifecycleManagementRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.slm.stop",
        "name": "StopSnapshotLifecycleManagementResponse"
      },
      "urls": [
        {
          "path": "/_slm/stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "snapshot.cleanup_repository",
      "description": "Removes stale data from repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/clean-up-snapshot-repo-api.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
        "name": "CleanupRepositoryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.repositories.cleanup_repository",
        "name": "CleanupRepositoryResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/_cleanup",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "snapshot.clone",
      "description": "Clones indices from one snapshot into another snapshot in the same repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": null,
      "requestBodyRequired": true,
      "response": null,
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}/_clone/{target_snapshot}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "snapshot.create",
      "description": "Creates a snapshot in a repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot",
        "name": "SnapshotRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot",
        "name": "SnapshotResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "snapshot.create_repository",
      "description": "Creates a repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.repositories.create_repository",
        "name": "CreateRepositoryRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "modules.snapshot_and_restore.repositories.create_repository",
        "name": "CreateRepositoryResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "snapshot.delete",
      "description": "Deletes a snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot",
        "name": "DeleteSnapshotRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.snapshot.delete_snapshot",
        "name": "DeleteSnapshotResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "snapshot.delete_repository",
      "description": "Deletes a repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.repositories.delete_repository",
        "name": "DeleteRepositoryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.repositories.delete_repository",
        "name": "DeleteRepositoryResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "snapshot.get",
      "description": "Returns information about a snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.snapshot.get_snapshot",
        "name": "GetSnapshotRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.snapshot.get_snapshot",
        "name": "GetSnapshotResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "snapshot.get_repository",
      "description": "Returns information about a repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.repositories.get_repository",
        "name": "GetRepositoryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.repositories.get_repository",
        "name": "GetRepositoryResponse"
      },
      "urls": [
        {
          "path": "/_snapshot",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_snapshot/{repository}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "snapshot.restore",
      "description": "Restores a snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.restore",
        "name": "RestoreRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.restore",
        "name": "RestoreResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/{snapshot}/_restore",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "snapshot.status",
      "description": "Returns information about the status of a snapshot.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStatusRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.snapshot.snapshot_status",
        "name": "SnapshotStatusResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/_status",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_snapshot/{repository}/_status",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_snapshot/{repository}/{snapshot}/_status",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "snapshot.verify_repository",
      "description": "Verifies a repository.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html",
      "stability": "stable",
      "request": {
        "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
        "name": "VerifyRepositoryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "modules.snapshot_and_restore.repositories.verify_repository",
        "name": "VerifyRepositoryResponse"
      },
      "urls": [
        {
          "path": "/_snapshot/{repository}/_verify",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "sql.clear_cursor",
      "description": "Clears the SQL cursor",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-pagination.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.sql.clear_sql_cursor",
        "name": "ClearSqlCursorRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.sql.clear_sql_cursor",
        "name": "ClearSqlCursorResponse"
      },
      "urls": [
        {
          "path": "/_sql/close",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "sql.query",
      "description": "Executes a SQL request",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-rest-overview.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.sql.query_sql",
        "name": "QuerySqlRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.sql.query_sql",
        "name": "QuerySqlResponse"
      },
      "urls": [
        {
          "path": "/_sql",
          "methods": [
            "POST",
            "GET"
          ]
        }
      ]
    },
    {
      "name": "sql.translate",
      "description": "Translates SQL into Elasticsearch queries",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-translate.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.sql.translate_sql",
        "name": "TranslateSqlRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.sql.translate_sql",
        "name": "TranslateSqlResponse"
      },
      "urls": [
        {
          "path": "/_sql/translate",
          "methods": [
            "POST",
            "GET"
          ]
        }
      ]
    },
    {
      "name": "ssl.certificates",
      "description": "Retrieves information about the X.509 certificates used to encrypt communications in the cluster.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.ssl.get_certificates",
        "name": "GetCertificatesRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.ssl.get_certificates",
        "name": "GetCertificatesResponse"
      },
      "urls": [
        {
          "path": "/_ssl/certificates",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "tasks.cancel",
      "description": "Cancels a task, if it can be cancelled through an API.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.task_management.cancel_tasks",
        "name": "CancelTasksRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.task_management.cancel_tasks",
        "name": "CancelTasksResponse"
      },
      "urls": [
        {
          "path": "/_tasks/_cancel",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/_tasks/{task_id}/_cancel",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "tasks.get",
      "description": "Returns information about a task.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.task_management.get_task",
        "name": "GetTaskRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.task_management.get_task",
        "name": "GetTaskResponse"
      },
      "urls": [
        {
          "path": "/_tasks/{task_id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "tasks.list",
      "description": "Returns a list of tasks.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html",
      "stability": "stable",
      "request": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "ListTasksRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "cluster.task_management.list_tasks",
        "name": "ListTasksResponse"
      },
      "urls": [
        {
          "path": "/_tasks",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "termvectors",
      "description": "Returns information and statistics about terms in the fields of a particular document.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.single.term_vectors",
        "name": "TermVectorsResponse"
      },
      "urls": [
        {
          "path": "/{index}/_termvectors/{id}",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/_termvectors",
          "methods": [
            "GET",
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_termvectors",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        },
        {
          "path": "/{index}/{type}/_termvectors",
          "methods": [
            "GET",
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "transform.delete_transform",
      "description": "Deletes an existing transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.delete_transform",
        "name": "DeleteTransformRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.transform.delete_transform",
        "name": "DeleteTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "transform.get_transform",
      "description": "Retrieves configuration information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.get_transform",
        "name": "GetTransformRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.transform.get_transform",
        "name": "GetTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_transform",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "transform.get_transform_stats",
      "description": "Retrieves usage information for transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "GetTransformStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.transform.get_transform_stats",
        "name": "GetTransformStatsResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}/_stats",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "transform.preview_transform",
      "description": "Previews a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/preview-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.preview_transform",
        "name": "PreviewTransformRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.transform.preview_transform",
        "name": "PreviewTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/_preview",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "transform.put_transform",
      "description": "Instantiates a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.put_transform",
        "name": "PutTransformRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.transform.put_transform",
        "name": "PutTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}",
          "methods": [
            "PUT"
          ]
        }
      ]
    },
    {
      "name": "transform.start_transform",
      "description": "Starts one or more transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.start_transform",
        "name": "StartTransformRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.transform.start_transform",
        "name": "StartTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}/_start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "transform.stop_transform",
      "description": "Stops one or more transforms.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.stop_transform",
        "name": "StopTransformRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.transform.stop_transform",
        "name": "StopTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}/_stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "transform.update_transform",
      "description": "Updates certain properties of a transform.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/update-transform.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.transform.update_transform",
        "name": "UpdateTransformRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "x_pack.transform.update_transform",
        "name": "UpdateTransformResponse"
      },
      "urls": [
        {
          "path": "/_transform/{transform_id}/_update",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "update",
      "description": "Updates a document with a script or partial document.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html",
      "stability": "stable",
      "request": {
        "namespace": "document.single.update",
        "name": "UpdateRequest"
      },
      "requestBodyRequired": true,
      "response": {
        "namespace": "document.single.update",
        "name": "UpdateResponse"
      },
      "urls": [
        {
          "path": "/{index}/_update/{id}",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/{id}/_update",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "update_by_query",
      "description": "Performs an update on every document in the index without changing the source,\nfor example to pick up a mapping change.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.update_by_query",
        "name": "UpdateByQueryRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "document.multiple.update_by_query",
        "name": "UpdateByQueryResponse"
      },
      "urls": [
        {
          "path": "/{index}/_update_by_query",
          "methods": [
            "POST"
          ]
        },
        {
          "path": "/{index}/{type}/_update_by_query",
          "methods": [
            "POST"
          ],
          "deprecation": {
            "version": "7.0.0",
            "description": "Specifying types in urls has been deprecated"
          }
        }
      ]
    },
    {
      "name": "update_by_query_rethrottle",
      "description": "Changes the number of requests per second for a particular Update By Query operation.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update-by-query.html",
      "stability": "stable",
      "request": {
        "namespace": "document.multiple.update_by_query_rethrottle",
        "name": "UpdateByQueryRethrottleRequest"
      },
      "requestBodyRequired": false,
      "response": null,
      "urls": [
        {
          "path": "/_update_by_query/{task_id}/_rethrottle",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.ack_watch",
      "description": "Acknowledges a watch, manually throttling the execution of the watch's actions.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgeWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.acknowledge_watch",
        "name": "AcknowledgeWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{watch_id}/_ack",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/_watcher/watch/{watch_id}/_ack/{action_id}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.activate_watch",
      "description": "Activates a currently inactive watch.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.activate_watch",
        "name": "ActivateWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.activate_watch",
        "name": "ActivateWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{watch_id}/_activate",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.deactivate_watch",
      "description": "Deactivates a currently active watch.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.deactivate_watch",
        "name": "DeactivateWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.deactivate_watch",
        "name": "DeactivateWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{watch_id}/_deactivate",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.delete_watch",
      "description": "Removes a watch from Watcher.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.delete_watch",
        "name": "DeleteWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.delete_watch",
        "name": "DeleteWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{id}",
          "methods": [
            "DELETE"
          ]
        }
      ]
    },
    {
      "name": "watcher.execute_watch",
      "description": "Forces the execution of a stored watch.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecuteWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.execute_watch",
        "name": "ExecuteWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{id}/_execute",
          "methods": [
            "PUT",
            "POST"
          ]
        },
        {
          "path": "/_watcher/watch/_execute",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.get_watch",
      "description": "Retrieves a watch by its ID.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.get_watch",
        "name": "GetWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.get_watch",
        "name": "GetWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{id}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "watcher.put_watch",
      "description": "Creates a new watch, or updates an existing one.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.put_watch",
        "name": "PutWatchRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.put_watch",
        "name": "PutWatchResponse"
      },
      "urls": [
        {
          "path": "/_watcher/watch/{id}",
          "methods": [
            "PUT",
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.start",
      "description": "Starts Watcher if it is not already running.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.start_watcher",
        "name": "StartWatcherRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.start_watcher",
        "name": "StartWatcherResponse"
      },
      "urls": [
        {
          "path": "/_watcher/_start",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "watcher.stats",
      "description": "Retrieves the current Watcher metrics.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherStatsRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.watcher_stats",
        "name": "WatcherStatsResponse"
      },
      "urls": [
        {
          "path": "/_watcher/stats",
          "methods": [
            "GET"
          ]
        },
        {
          "path": "/_watcher/stats/{metric}",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "watcher.stop",
      "description": "Stops Watcher if it is running.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.watcher.stop_watcher",
        "name": "StopWatcherRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.watcher.stop_watcher",
        "name": "StopWatcherResponse"
      },
      "urls": [
        {
          "path": "/_watcher/_stop",
          "methods": [
            "POST"
          ]
        }
      ]
    },
    {
      "name": "xpack.info",
      "description": "Retrieves information about the installed X-Pack features.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackInfoRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.info.x_pack_info",
        "name": "XPackInfoResponse"
      },
      "urls": [
        {
          "path": "/_xpack",
          "methods": [
            "GET"
          ]
        }
      ]
    },
    {
      "name": "xpack.usage",
      "description": "Retrieves usage information about the installed X-Pack features.",
      "docUrl": "https://www.elastic.co/guide/en/elasticsearch/reference/current/usage-api.html",
      "stability": "stable",
      "request": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "XPackUsageRequest"
      },
      "requestBodyRequired": false,
      "response": {
        "namespace": "x_pack.info.x_pack_usage",
        "name": "XPackUsageResponse"
      },
      "urls": [
        {
          "path": "/_xpack/usage",
          "methods": [
            "GET"
          ]
        }
      ]
    }
  ]
}